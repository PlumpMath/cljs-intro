var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.evalWorksForGlobals_ = null;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.getObjectByName(name) && !goog.implicitNamespaces_[name]) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.require = function(rule) {
  if(!COMPILED) {
    if(goog.getObjectByName(rule)) {
      return
    }
    var path = goog.getPathFromDeps_(rule);
    if(path) {
      goog.included_[path] = true;
      goog.writeScripts_()
    }else {
      var errorMessage = "goog.require could not find: " + rule;
      if(goog.global.console) {
        goog.global.console["error"](errorMessage)
      }
      throw Error(errorMessage);
    }
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(requireName in deps.nameToPath) {
            visitNode(deps.nameToPath[requireName])
          }else {
            if(!goog.getObjectByName(requireName)) {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  var context = selfObj || goog.global;
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(context, newArgs)
    }
  }else {
    return function() {
      return fn.apply(context, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = style
};
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global && !goog.string.contains(str, "<")) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var el = goog.global["document"]["createElement"]("div");
  el["innerHTML"] = "<pre>x" + str + "</pre>";
  if(el["firstChild"][goog.string.NORMALIZE_FN_]) {
    el["firstChild"][goog.string.NORMALIZE_FN_]()
  }
  str = el["firstChild"]["firstChild"]["nodeValue"].slice(1);
  el["innerHTML"] = "";
  return goog.string.canonicalizeNewlines(str)
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.NORMALIZE_FN_ = "normalize";
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  value = parseInt(value, 10);
  precision = 0;
  return goog.string.format.demuxes_["f"](value, flags, width, dotp, precision, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__8321 = x == null ? null : x;
  if(p[goog.typeOf(x__8321)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__8322__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__8322 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8322__delegate.call(this, array, i, idxs)
    };
    G__8322.cljs$lang$maxFixedArity = 2;
    G__8322.cljs$lang$applyTo = function(arglist__8323) {
      var array = cljs.core.first(arglist__8323);
      var i = cljs.core.first(cljs.core.next(arglist__8323));
      var idxs = cljs.core.rest(cljs.core.next(arglist__8323));
      return G__8322__delegate(array, i, idxs)
    };
    G__8322.cljs$lang$arity$variadic = G__8322__delegate;
    return G__8322
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3822__auto____8408 = this$;
      if(and__3822__auto____8408) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3822__auto____8408
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2413__auto____8409 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8410 = cljs.core._invoke[goog.typeOf(x__2413__auto____8409)];
        if(or__3824__auto____8410) {
          return or__3824__auto____8410
        }else {
          var or__3824__auto____8411 = cljs.core._invoke["_"];
          if(or__3824__auto____8411) {
            return or__3824__auto____8411
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3822__auto____8412 = this$;
      if(and__3822__auto____8412) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3822__auto____8412
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2413__auto____8413 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8414 = cljs.core._invoke[goog.typeOf(x__2413__auto____8413)];
        if(or__3824__auto____8414) {
          return or__3824__auto____8414
        }else {
          var or__3824__auto____8415 = cljs.core._invoke["_"];
          if(or__3824__auto____8415) {
            return or__3824__auto____8415
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3822__auto____8416 = this$;
      if(and__3822__auto____8416) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3822__auto____8416
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2413__auto____8417 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8418 = cljs.core._invoke[goog.typeOf(x__2413__auto____8417)];
        if(or__3824__auto____8418) {
          return or__3824__auto____8418
        }else {
          var or__3824__auto____8419 = cljs.core._invoke["_"];
          if(or__3824__auto____8419) {
            return or__3824__auto____8419
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3822__auto____8420 = this$;
      if(and__3822__auto____8420) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3822__auto____8420
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2413__auto____8421 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8422 = cljs.core._invoke[goog.typeOf(x__2413__auto____8421)];
        if(or__3824__auto____8422) {
          return or__3824__auto____8422
        }else {
          var or__3824__auto____8423 = cljs.core._invoke["_"];
          if(or__3824__auto____8423) {
            return or__3824__auto____8423
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3822__auto____8424 = this$;
      if(and__3822__auto____8424) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3822__auto____8424
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2413__auto____8425 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8426 = cljs.core._invoke[goog.typeOf(x__2413__auto____8425)];
        if(or__3824__auto____8426) {
          return or__3824__auto____8426
        }else {
          var or__3824__auto____8427 = cljs.core._invoke["_"];
          if(or__3824__auto____8427) {
            return or__3824__auto____8427
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3822__auto____8428 = this$;
      if(and__3822__auto____8428) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3822__auto____8428
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2413__auto____8429 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8430 = cljs.core._invoke[goog.typeOf(x__2413__auto____8429)];
        if(or__3824__auto____8430) {
          return or__3824__auto____8430
        }else {
          var or__3824__auto____8431 = cljs.core._invoke["_"];
          if(or__3824__auto____8431) {
            return or__3824__auto____8431
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3822__auto____8432 = this$;
      if(and__3822__auto____8432) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3822__auto____8432
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2413__auto____8433 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8434 = cljs.core._invoke[goog.typeOf(x__2413__auto____8433)];
        if(or__3824__auto____8434) {
          return or__3824__auto____8434
        }else {
          var or__3824__auto____8435 = cljs.core._invoke["_"];
          if(or__3824__auto____8435) {
            return or__3824__auto____8435
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3822__auto____8436 = this$;
      if(and__3822__auto____8436) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3822__auto____8436
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2413__auto____8437 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8438 = cljs.core._invoke[goog.typeOf(x__2413__auto____8437)];
        if(or__3824__auto____8438) {
          return or__3824__auto____8438
        }else {
          var or__3824__auto____8439 = cljs.core._invoke["_"];
          if(or__3824__auto____8439) {
            return or__3824__auto____8439
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3822__auto____8440 = this$;
      if(and__3822__auto____8440) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3822__auto____8440
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2413__auto____8441 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8442 = cljs.core._invoke[goog.typeOf(x__2413__auto____8441)];
        if(or__3824__auto____8442) {
          return or__3824__auto____8442
        }else {
          var or__3824__auto____8443 = cljs.core._invoke["_"];
          if(or__3824__auto____8443) {
            return or__3824__auto____8443
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3822__auto____8444 = this$;
      if(and__3822__auto____8444) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3822__auto____8444
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2413__auto____8445 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8446 = cljs.core._invoke[goog.typeOf(x__2413__auto____8445)];
        if(or__3824__auto____8446) {
          return or__3824__auto____8446
        }else {
          var or__3824__auto____8447 = cljs.core._invoke["_"];
          if(or__3824__auto____8447) {
            return or__3824__auto____8447
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3822__auto____8448 = this$;
      if(and__3822__auto____8448) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3822__auto____8448
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2413__auto____8449 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8450 = cljs.core._invoke[goog.typeOf(x__2413__auto____8449)];
        if(or__3824__auto____8450) {
          return or__3824__auto____8450
        }else {
          var or__3824__auto____8451 = cljs.core._invoke["_"];
          if(or__3824__auto____8451) {
            return or__3824__auto____8451
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3822__auto____8452 = this$;
      if(and__3822__auto____8452) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3822__auto____8452
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2413__auto____8453 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8454 = cljs.core._invoke[goog.typeOf(x__2413__auto____8453)];
        if(or__3824__auto____8454) {
          return or__3824__auto____8454
        }else {
          var or__3824__auto____8455 = cljs.core._invoke["_"];
          if(or__3824__auto____8455) {
            return or__3824__auto____8455
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3822__auto____8456 = this$;
      if(and__3822__auto____8456) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3822__auto____8456
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2413__auto____8457 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8458 = cljs.core._invoke[goog.typeOf(x__2413__auto____8457)];
        if(or__3824__auto____8458) {
          return or__3824__auto____8458
        }else {
          var or__3824__auto____8459 = cljs.core._invoke["_"];
          if(or__3824__auto____8459) {
            return or__3824__auto____8459
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3822__auto____8460 = this$;
      if(and__3822__auto____8460) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3822__auto____8460
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2413__auto____8461 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8462 = cljs.core._invoke[goog.typeOf(x__2413__auto____8461)];
        if(or__3824__auto____8462) {
          return or__3824__auto____8462
        }else {
          var or__3824__auto____8463 = cljs.core._invoke["_"];
          if(or__3824__auto____8463) {
            return or__3824__auto____8463
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3822__auto____8464 = this$;
      if(and__3822__auto____8464) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3822__auto____8464
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2413__auto____8465 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8466 = cljs.core._invoke[goog.typeOf(x__2413__auto____8465)];
        if(or__3824__auto____8466) {
          return or__3824__auto____8466
        }else {
          var or__3824__auto____8467 = cljs.core._invoke["_"];
          if(or__3824__auto____8467) {
            return or__3824__auto____8467
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3822__auto____8468 = this$;
      if(and__3822__auto____8468) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3822__auto____8468
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2413__auto____8469 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8470 = cljs.core._invoke[goog.typeOf(x__2413__auto____8469)];
        if(or__3824__auto____8470) {
          return or__3824__auto____8470
        }else {
          var or__3824__auto____8471 = cljs.core._invoke["_"];
          if(or__3824__auto____8471) {
            return or__3824__auto____8471
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3822__auto____8472 = this$;
      if(and__3822__auto____8472) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3822__auto____8472
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2413__auto____8473 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8474 = cljs.core._invoke[goog.typeOf(x__2413__auto____8473)];
        if(or__3824__auto____8474) {
          return or__3824__auto____8474
        }else {
          var or__3824__auto____8475 = cljs.core._invoke["_"];
          if(or__3824__auto____8475) {
            return or__3824__auto____8475
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3822__auto____8476 = this$;
      if(and__3822__auto____8476) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3822__auto____8476
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2413__auto____8477 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8478 = cljs.core._invoke[goog.typeOf(x__2413__auto____8477)];
        if(or__3824__auto____8478) {
          return or__3824__auto____8478
        }else {
          var or__3824__auto____8479 = cljs.core._invoke["_"];
          if(or__3824__auto____8479) {
            return or__3824__auto____8479
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3822__auto____8480 = this$;
      if(and__3822__auto____8480) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3822__auto____8480
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2413__auto____8481 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8482 = cljs.core._invoke[goog.typeOf(x__2413__auto____8481)];
        if(or__3824__auto____8482) {
          return or__3824__auto____8482
        }else {
          var or__3824__auto____8483 = cljs.core._invoke["_"];
          if(or__3824__auto____8483) {
            return or__3824__auto____8483
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3822__auto____8484 = this$;
      if(and__3822__auto____8484) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3822__auto____8484
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2413__auto____8485 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8486 = cljs.core._invoke[goog.typeOf(x__2413__auto____8485)];
        if(or__3824__auto____8486) {
          return or__3824__auto____8486
        }else {
          var or__3824__auto____8487 = cljs.core._invoke["_"];
          if(or__3824__auto____8487) {
            return or__3824__auto____8487
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3822__auto____8488 = this$;
      if(and__3822__auto____8488) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3822__auto____8488
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2413__auto____8489 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____8490 = cljs.core._invoke[goog.typeOf(x__2413__auto____8489)];
        if(or__3824__auto____8490) {
          return or__3824__auto____8490
        }else {
          var or__3824__auto____8491 = cljs.core._invoke["_"];
          if(or__3824__auto____8491) {
            return or__3824__auto____8491
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3822__auto____8496 = coll;
    if(and__3822__auto____8496) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3822__auto____8496
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2413__auto____8497 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8498 = cljs.core._count[goog.typeOf(x__2413__auto____8497)];
      if(or__3824__auto____8498) {
        return or__3824__auto____8498
      }else {
        var or__3824__auto____8499 = cljs.core._count["_"];
        if(or__3824__auto____8499) {
          return or__3824__auto____8499
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3822__auto____8504 = coll;
    if(and__3822__auto____8504) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3822__auto____8504
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2413__auto____8505 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8506 = cljs.core._empty[goog.typeOf(x__2413__auto____8505)];
      if(or__3824__auto____8506) {
        return or__3824__auto____8506
      }else {
        var or__3824__auto____8507 = cljs.core._empty["_"];
        if(or__3824__auto____8507) {
          return or__3824__auto____8507
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3822__auto____8512 = coll;
    if(and__3822__auto____8512) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3822__auto____8512
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2413__auto____8513 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8514 = cljs.core._conj[goog.typeOf(x__2413__auto____8513)];
      if(or__3824__auto____8514) {
        return or__3824__auto____8514
      }else {
        var or__3824__auto____8515 = cljs.core._conj["_"];
        if(or__3824__auto____8515) {
          return or__3824__auto____8515
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3822__auto____8524 = coll;
      if(and__3822__auto____8524) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3822__auto____8524
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2413__auto____8525 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8526 = cljs.core._nth[goog.typeOf(x__2413__auto____8525)];
        if(or__3824__auto____8526) {
          return or__3824__auto____8526
        }else {
          var or__3824__auto____8527 = cljs.core._nth["_"];
          if(or__3824__auto____8527) {
            return or__3824__auto____8527
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3822__auto____8528 = coll;
      if(and__3822__auto____8528) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3822__auto____8528
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2413__auto____8529 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8530 = cljs.core._nth[goog.typeOf(x__2413__auto____8529)];
        if(or__3824__auto____8530) {
          return or__3824__auto____8530
        }else {
          var or__3824__auto____8531 = cljs.core._nth["_"];
          if(or__3824__auto____8531) {
            return or__3824__auto____8531
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3822__auto____8536 = coll;
    if(and__3822__auto____8536) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3822__auto____8536
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2413__auto____8537 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8538 = cljs.core._first[goog.typeOf(x__2413__auto____8537)];
      if(or__3824__auto____8538) {
        return or__3824__auto____8538
      }else {
        var or__3824__auto____8539 = cljs.core._first["_"];
        if(or__3824__auto____8539) {
          return or__3824__auto____8539
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3822__auto____8544 = coll;
    if(and__3822__auto____8544) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3822__auto____8544
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2413__auto____8545 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8546 = cljs.core._rest[goog.typeOf(x__2413__auto____8545)];
      if(or__3824__auto____8546) {
        return or__3824__auto____8546
      }else {
        var or__3824__auto____8547 = cljs.core._rest["_"];
        if(or__3824__auto____8547) {
          return or__3824__auto____8547
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3822__auto____8552 = coll;
    if(and__3822__auto____8552) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3822__auto____8552
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2413__auto____8553 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8554 = cljs.core._next[goog.typeOf(x__2413__auto____8553)];
      if(or__3824__auto____8554) {
        return or__3824__auto____8554
      }else {
        var or__3824__auto____8555 = cljs.core._next["_"];
        if(or__3824__auto____8555) {
          return or__3824__auto____8555
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3822__auto____8564 = o;
      if(and__3822__auto____8564) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3822__auto____8564
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2413__auto____8565 = o == null ? null : o;
      return function() {
        var or__3824__auto____8566 = cljs.core._lookup[goog.typeOf(x__2413__auto____8565)];
        if(or__3824__auto____8566) {
          return or__3824__auto____8566
        }else {
          var or__3824__auto____8567 = cljs.core._lookup["_"];
          if(or__3824__auto____8567) {
            return or__3824__auto____8567
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3822__auto____8568 = o;
      if(and__3822__auto____8568) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3822__auto____8568
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2413__auto____8569 = o == null ? null : o;
      return function() {
        var or__3824__auto____8570 = cljs.core._lookup[goog.typeOf(x__2413__auto____8569)];
        if(or__3824__auto____8570) {
          return or__3824__auto____8570
        }else {
          var or__3824__auto____8571 = cljs.core._lookup["_"];
          if(or__3824__auto____8571) {
            return or__3824__auto____8571
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3822__auto____8576 = coll;
    if(and__3822__auto____8576) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3822__auto____8576
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2413__auto____8577 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8578 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2413__auto____8577)];
      if(or__3824__auto____8578) {
        return or__3824__auto____8578
      }else {
        var or__3824__auto____8579 = cljs.core._contains_key_QMARK_["_"];
        if(or__3824__auto____8579) {
          return or__3824__auto____8579
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3822__auto____8584 = coll;
    if(and__3822__auto____8584) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3822__auto____8584
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2413__auto____8585 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8586 = cljs.core._assoc[goog.typeOf(x__2413__auto____8585)];
      if(or__3824__auto____8586) {
        return or__3824__auto____8586
      }else {
        var or__3824__auto____8587 = cljs.core._assoc["_"];
        if(or__3824__auto____8587) {
          return or__3824__auto____8587
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3822__auto____8592 = coll;
    if(and__3822__auto____8592) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3822__auto____8592
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2413__auto____8593 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8594 = cljs.core._dissoc[goog.typeOf(x__2413__auto____8593)];
      if(or__3824__auto____8594) {
        return or__3824__auto____8594
      }else {
        var or__3824__auto____8595 = cljs.core._dissoc["_"];
        if(or__3824__auto____8595) {
          return or__3824__auto____8595
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3822__auto____8600 = coll;
    if(and__3822__auto____8600) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3822__auto____8600
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2413__auto____8601 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8602 = cljs.core._key[goog.typeOf(x__2413__auto____8601)];
      if(or__3824__auto____8602) {
        return or__3824__auto____8602
      }else {
        var or__3824__auto____8603 = cljs.core._key["_"];
        if(or__3824__auto____8603) {
          return or__3824__auto____8603
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3822__auto____8608 = coll;
    if(and__3822__auto____8608) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3822__auto____8608
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2413__auto____8609 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8610 = cljs.core._val[goog.typeOf(x__2413__auto____8609)];
      if(or__3824__auto____8610) {
        return or__3824__auto____8610
      }else {
        var or__3824__auto____8611 = cljs.core._val["_"];
        if(or__3824__auto____8611) {
          return or__3824__auto____8611
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3822__auto____8616 = coll;
    if(and__3822__auto____8616) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3822__auto____8616
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2413__auto____8617 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8618 = cljs.core._disjoin[goog.typeOf(x__2413__auto____8617)];
      if(or__3824__auto____8618) {
        return or__3824__auto____8618
      }else {
        var or__3824__auto____8619 = cljs.core._disjoin["_"];
        if(or__3824__auto____8619) {
          return or__3824__auto____8619
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3822__auto____8624 = coll;
    if(and__3822__auto____8624) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3822__auto____8624
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2413__auto____8625 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8626 = cljs.core._peek[goog.typeOf(x__2413__auto____8625)];
      if(or__3824__auto____8626) {
        return or__3824__auto____8626
      }else {
        var or__3824__auto____8627 = cljs.core._peek["_"];
        if(or__3824__auto____8627) {
          return or__3824__auto____8627
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3822__auto____8632 = coll;
    if(and__3822__auto____8632) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3822__auto____8632
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2413__auto____8633 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8634 = cljs.core._pop[goog.typeOf(x__2413__auto____8633)];
      if(or__3824__auto____8634) {
        return or__3824__auto____8634
      }else {
        var or__3824__auto____8635 = cljs.core._pop["_"];
        if(or__3824__auto____8635) {
          return or__3824__auto____8635
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3822__auto____8640 = coll;
    if(and__3822__auto____8640) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3822__auto____8640
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2413__auto____8641 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8642 = cljs.core._assoc_n[goog.typeOf(x__2413__auto____8641)];
      if(or__3824__auto____8642) {
        return or__3824__auto____8642
      }else {
        var or__3824__auto____8643 = cljs.core._assoc_n["_"];
        if(or__3824__auto____8643) {
          return or__3824__auto____8643
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3822__auto____8648 = o;
    if(and__3822__auto____8648) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3822__auto____8648
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2413__auto____8649 = o == null ? null : o;
    return function() {
      var or__3824__auto____8650 = cljs.core._deref[goog.typeOf(x__2413__auto____8649)];
      if(or__3824__auto____8650) {
        return or__3824__auto____8650
      }else {
        var or__3824__auto____8651 = cljs.core._deref["_"];
        if(or__3824__auto____8651) {
          return or__3824__auto____8651
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3822__auto____8656 = o;
    if(and__3822__auto____8656) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3822__auto____8656
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2413__auto____8657 = o == null ? null : o;
    return function() {
      var or__3824__auto____8658 = cljs.core._deref_with_timeout[goog.typeOf(x__2413__auto____8657)];
      if(or__3824__auto____8658) {
        return or__3824__auto____8658
      }else {
        var or__3824__auto____8659 = cljs.core._deref_with_timeout["_"];
        if(or__3824__auto____8659) {
          return or__3824__auto____8659
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3822__auto____8664 = o;
    if(and__3822__auto____8664) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3822__auto____8664
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2413__auto____8665 = o == null ? null : o;
    return function() {
      var or__3824__auto____8666 = cljs.core._meta[goog.typeOf(x__2413__auto____8665)];
      if(or__3824__auto____8666) {
        return or__3824__auto____8666
      }else {
        var or__3824__auto____8667 = cljs.core._meta["_"];
        if(or__3824__auto____8667) {
          return or__3824__auto____8667
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3822__auto____8672 = o;
    if(and__3822__auto____8672) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3822__auto____8672
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2413__auto____8673 = o == null ? null : o;
    return function() {
      var or__3824__auto____8674 = cljs.core._with_meta[goog.typeOf(x__2413__auto____8673)];
      if(or__3824__auto____8674) {
        return or__3824__auto____8674
      }else {
        var or__3824__auto____8675 = cljs.core._with_meta["_"];
        if(or__3824__auto____8675) {
          return or__3824__auto____8675
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3822__auto____8684 = coll;
      if(and__3822__auto____8684) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3822__auto____8684
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2413__auto____8685 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8686 = cljs.core._reduce[goog.typeOf(x__2413__auto____8685)];
        if(or__3824__auto____8686) {
          return or__3824__auto____8686
        }else {
          var or__3824__auto____8687 = cljs.core._reduce["_"];
          if(or__3824__auto____8687) {
            return or__3824__auto____8687
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3822__auto____8688 = coll;
      if(and__3822__auto____8688) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3822__auto____8688
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2413__auto____8689 = coll == null ? null : coll;
      return function() {
        var or__3824__auto____8690 = cljs.core._reduce[goog.typeOf(x__2413__auto____8689)];
        if(or__3824__auto____8690) {
          return or__3824__auto____8690
        }else {
          var or__3824__auto____8691 = cljs.core._reduce["_"];
          if(or__3824__auto____8691) {
            return or__3824__auto____8691
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3822__auto____8696 = coll;
    if(and__3822__auto____8696) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3822__auto____8696
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2413__auto____8697 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8698 = cljs.core._kv_reduce[goog.typeOf(x__2413__auto____8697)];
      if(or__3824__auto____8698) {
        return or__3824__auto____8698
      }else {
        var or__3824__auto____8699 = cljs.core._kv_reduce["_"];
        if(or__3824__auto____8699) {
          return or__3824__auto____8699
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3822__auto____8704 = o;
    if(and__3822__auto____8704) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3822__auto____8704
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2413__auto____8705 = o == null ? null : o;
    return function() {
      var or__3824__auto____8706 = cljs.core._equiv[goog.typeOf(x__2413__auto____8705)];
      if(or__3824__auto____8706) {
        return or__3824__auto____8706
      }else {
        var or__3824__auto____8707 = cljs.core._equiv["_"];
        if(or__3824__auto____8707) {
          return or__3824__auto____8707
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3822__auto____8712 = o;
    if(and__3822__auto____8712) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3822__auto____8712
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2413__auto____8713 = o == null ? null : o;
    return function() {
      var or__3824__auto____8714 = cljs.core._hash[goog.typeOf(x__2413__auto____8713)];
      if(or__3824__auto____8714) {
        return or__3824__auto____8714
      }else {
        var or__3824__auto____8715 = cljs.core._hash["_"];
        if(or__3824__auto____8715) {
          return or__3824__auto____8715
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3822__auto____8720 = o;
    if(and__3822__auto____8720) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3822__auto____8720
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2413__auto____8721 = o == null ? null : o;
    return function() {
      var or__3824__auto____8722 = cljs.core._seq[goog.typeOf(x__2413__auto____8721)];
      if(or__3824__auto____8722) {
        return or__3824__auto____8722
      }else {
        var or__3824__auto____8723 = cljs.core._seq["_"];
        if(or__3824__auto____8723) {
          return or__3824__auto____8723
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3822__auto____8728 = coll;
    if(and__3822__auto____8728) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3822__auto____8728
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2413__auto____8729 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8730 = cljs.core._rseq[goog.typeOf(x__2413__auto____8729)];
      if(or__3824__auto____8730) {
        return or__3824__auto____8730
      }else {
        var or__3824__auto____8731 = cljs.core._rseq["_"];
        if(or__3824__auto____8731) {
          return or__3824__auto____8731
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8736 = coll;
    if(and__3822__auto____8736) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3822__auto____8736
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2413__auto____8737 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8738 = cljs.core._sorted_seq[goog.typeOf(x__2413__auto____8737)];
      if(or__3824__auto____8738) {
        return or__3824__auto____8738
      }else {
        var or__3824__auto____8739 = cljs.core._sorted_seq["_"];
        if(or__3824__auto____8739) {
          return or__3824__auto____8739
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3822__auto____8744 = coll;
    if(and__3822__auto____8744) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3822__auto____8744
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2413__auto____8745 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8746 = cljs.core._sorted_seq_from[goog.typeOf(x__2413__auto____8745)];
      if(or__3824__auto____8746) {
        return or__3824__auto____8746
      }else {
        var or__3824__auto____8747 = cljs.core._sorted_seq_from["_"];
        if(or__3824__auto____8747) {
          return or__3824__auto____8747
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3822__auto____8752 = coll;
    if(and__3822__auto____8752) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3822__auto____8752
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2413__auto____8753 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8754 = cljs.core._entry_key[goog.typeOf(x__2413__auto____8753)];
      if(or__3824__auto____8754) {
        return or__3824__auto____8754
      }else {
        var or__3824__auto____8755 = cljs.core._entry_key["_"];
        if(or__3824__auto____8755) {
          return or__3824__auto____8755
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3822__auto____8760 = coll;
    if(and__3822__auto____8760) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3822__auto____8760
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2413__auto____8761 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8762 = cljs.core._comparator[goog.typeOf(x__2413__auto____8761)];
      if(or__3824__auto____8762) {
        return or__3824__auto____8762
      }else {
        var or__3824__auto____8763 = cljs.core._comparator["_"];
        if(or__3824__auto____8763) {
          return or__3824__auto____8763
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3822__auto____8768 = o;
    if(and__3822__auto____8768) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3822__auto____8768
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2413__auto____8769 = o == null ? null : o;
    return function() {
      var or__3824__auto____8770 = cljs.core._pr_seq[goog.typeOf(x__2413__auto____8769)];
      if(or__3824__auto____8770) {
        return or__3824__auto____8770
      }else {
        var or__3824__auto____8771 = cljs.core._pr_seq["_"];
        if(or__3824__auto____8771) {
          return or__3824__auto____8771
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3822__auto____8776 = d;
    if(and__3822__auto____8776) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3822__auto____8776
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2413__auto____8777 = d == null ? null : d;
    return function() {
      var or__3824__auto____8778 = cljs.core._realized_QMARK_[goog.typeOf(x__2413__auto____8777)];
      if(or__3824__auto____8778) {
        return or__3824__auto____8778
      }else {
        var or__3824__auto____8779 = cljs.core._realized_QMARK_["_"];
        if(or__3824__auto____8779) {
          return or__3824__auto____8779
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3822__auto____8784 = this$;
    if(and__3822__auto____8784) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3822__auto____8784
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2413__auto____8785 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8786 = cljs.core._notify_watches[goog.typeOf(x__2413__auto____8785)];
      if(or__3824__auto____8786) {
        return or__3824__auto____8786
      }else {
        var or__3824__auto____8787 = cljs.core._notify_watches["_"];
        if(or__3824__auto____8787) {
          return or__3824__auto____8787
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3822__auto____8792 = this$;
    if(and__3822__auto____8792) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3822__auto____8792
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2413__auto____8793 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8794 = cljs.core._add_watch[goog.typeOf(x__2413__auto____8793)];
      if(or__3824__auto____8794) {
        return or__3824__auto____8794
      }else {
        var or__3824__auto____8795 = cljs.core._add_watch["_"];
        if(or__3824__auto____8795) {
          return or__3824__auto____8795
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3822__auto____8800 = this$;
    if(and__3822__auto____8800) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3822__auto____8800
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2413__auto____8801 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____8802 = cljs.core._remove_watch[goog.typeOf(x__2413__auto____8801)];
      if(or__3824__auto____8802) {
        return or__3824__auto____8802
      }else {
        var or__3824__auto____8803 = cljs.core._remove_watch["_"];
        if(or__3824__auto____8803) {
          return or__3824__auto____8803
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3822__auto____8808 = coll;
    if(and__3822__auto____8808) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3822__auto____8808
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2413__auto____8809 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8810 = cljs.core._as_transient[goog.typeOf(x__2413__auto____8809)];
      if(or__3824__auto____8810) {
        return or__3824__auto____8810
      }else {
        var or__3824__auto____8811 = cljs.core._as_transient["_"];
        if(or__3824__auto____8811) {
          return or__3824__auto____8811
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3822__auto____8816 = tcoll;
    if(and__3822__auto____8816) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3822__auto____8816
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2413__auto____8817 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8818 = cljs.core._conj_BANG_[goog.typeOf(x__2413__auto____8817)];
      if(or__3824__auto____8818) {
        return or__3824__auto____8818
      }else {
        var or__3824__auto____8819 = cljs.core._conj_BANG_["_"];
        if(or__3824__auto____8819) {
          return or__3824__auto____8819
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8824 = tcoll;
    if(and__3822__auto____8824) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3822__auto____8824
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2413__auto____8825 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8826 = cljs.core._persistent_BANG_[goog.typeOf(x__2413__auto____8825)];
      if(or__3824__auto____8826) {
        return or__3824__auto____8826
      }else {
        var or__3824__auto____8827 = cljs.core._persistent_BANG_["_"];
        if(or__3824__auto____8827) {
          return or__3824__auto____8827
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3822__auto____8832 = tcoll;
    if(and__3822__auto____8832) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3822__auto____8832
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2413__auto____8833 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8834 = cljs.core._assoc_BANG_[goog.typeOf(x__2413__auto____8833)];
      if(or__3824__auto____8834) {
        return or__3824__auto____8834
      }else {
        var or__3824__auto____8835 = cljs.core._assoc_BANG_["_"];
        if(or__3824__auto____8835) {
          return or__3824__auto____8835
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3822__auto____8840 = tcoll;
    if(and__3822__auto____8840) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3822__auto____8840
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2413__auto____8841 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8842 = cljs.core._dissoc_BANG_[goog.typeOf(x__2413__auto____8841)];
      if(or__3824__auto____8842) {
        return or__3824__auto____8842
      }else {
        var or__3824__auto____8843 = cljs.core._dissoc_BANG_["_"];
        if(or__3824__auto____8843) {
          return or__3824__auto____8843
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3822__auto____8848 = tcoll;
    if(and__3822__auto____8848) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3822__auto____8848
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2413__auto____8849 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8850 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2413__auto____8849)];
      if(or__3824__auto____8850) {
        return or__3824__auto____8850
      }else {
        var or__3824__auto____8851 = cljs.core._assoc_n_BANG_["_"];
        if(or__3824__auto____8851) {
          return or__3824__auto____8851
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3822__auto____8856 = tcoll;
    if(and__3822__auto____8856) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3822__auto____8856
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2413__auto____8857 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8858 = cljs.core._pop_BANG_[goog.typeOf(x__2413__auto____8857)];
      if(or__3824__auto____8858) {
        return or__3824__auto____8858
      }else {
        var or__3824__auto____8859 = cljs.core._pop_BANG_["_"];
        if(or__3824__auto____8859) {
          return or__3824__auto____8859
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3822__auto____8864 = tcoll;
    if(and__3822__auto____8864) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3822__auto____8864
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2413__auto____8865 = tcoll == null ? null : tcoll;
    return function() {
      var or__3824__auto____8866 = cljs.core._disjoin_BANG_[goog.typeOf(x__2413__auto____8865)];
      if(or__3824__auto____8866) {
        return or__3824__auto____8866
      }else {
        var or__3824__auto____8867 = cljs.core._disjoin_BANG_["_"];
        if(or__3824__auto____8867) {
          return or__3824__auto____8867
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3822__auto____8872 = x;
    if(and__3822__auto____8872) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3822__auto____8872
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2413__auto____8873 = x == null ? null : x;
    return function() {
      var or__3824__auto____8874 = cljs.core._compare[goog.typeOf(x__2413__auto____8873)];
      if(or__3824__auto____8874) {
        return or__3824__auto____8874
      }else {
        var or__3824__auto____8875 = cljs.core._compare["_"];
        if(or__3824__auto____8875) {
          return or__3824__auto____8875
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3822__auto____8880 = coll;
    if(and__3822__auto____8880) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3822__auto____8880
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2413__auto____8881 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8882 = cljs.core._drop_first[goog.typeOf(x__2413__auto____8881)];
      if(or__3824__auto____8882) {
        return or__3824__auto____8882
      }else {
        var or__3824__auto____8883 = cljs.core._drop_first["_"];
        if(or__3824__auto____8883) {
          return or__3824__auto____8883
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3822__auto____8888 = coll;
    if(and__3822__auto____8888) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3822__auto____8888
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2413__auto____8889 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8890 = cljs.core._chunked_first[goog.typeOf(x__2413__auto____8889)];
      if(or__3824__auto____8890) {
        return or__3824__auto____8890
      }else {
        var or__3824__auto____8891 = cljs.core._chunked_first["_"];
        if(or__3824__auto____8891) {
          return or__3824__auto____8891
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3822__auto____8896 = coll;
    if(and__3822__auto____8896) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3822__auto____8896
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2413__auto____8897 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8898 = cljs.core._chunked_rest[goog.typeOf(x__2413__auto____8897)];
      if(or__3824__auto____8898) {
        return or__3824__auto____8898
      }else {
        var or__3824__auto____8899 = cljs.core._chunked_rest["_"];
        if(or__3824__auto____8899) {
          return or__3824__auto____8899
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3822__auto____8904 = coll;
    if(and__3822__auto____8904) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3822__auto____8904
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2413__auto____8905 = coll == null ? null : coll;
    return function() {
      var or__3824__auto____8906 = cljs.core._chunked_next[goog.typeOf(x__2413__auto____8905)];
      if(or__3824__auto____8906) {
        return or__3824__auto____8906
      }else {
        var or__3824__auto____8907 = cljs.core._chunked_next["_"];
        if(or__3824__auto____8907) {
          return or__3824__auto____8907
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3824__auto____8909 = x === y;
    if(or__3824__auto____8909) {
      return or__3824__auto____8909
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__8910__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__8911 = y;
            var G__8912 = cljs.core.first.call(null, more);
            var G__8913 = cljs.core.next.call(null, more);
            x = G__8911;
            y = G__8912;
            more = G__8913;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__8910 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__8910__delegate.call(this, x, y, more)
    };
    G__8910.cljs$lang$maxFixedArity = 2;
    G__8910.cljs$lang$applyTo = function(arglist__8914) {
      var x = cljs.core.first(arglist__8914);
      var y = cljs.core.first(cljs.core.next(arglist__8914));
      var more = cljs.core.rest(cljs.core.next(arglist__8914));
      return G__8910__delegate(x, y, more)
    };
    G__8910.cljs$lang$arity$variadic = G__8910__delegate;
    return G__8910
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__8915 = null;
  var G__8915__2 = function(o, k) {
    return null
  };
  var G__8915__3 = function(o, k, not_found) {
    return not_found
  };
  G__8915 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8915__2.call(this, o, k);
      case 3:
        return G__8915__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8915
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__8916 = null;
  var G__8916__2 = function(_, f) {
    return f.call(null)
  };
  var G__8916__3 = function(_, f, start) {
    return start
  };
  G__8916 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8916__2.call(this, _, f);
      case 3:
        return G__8916__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8916
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__8917 = null;
  var G__8917__2 = function(_, n) {
    return null
  };
  var G__8917__3 = function(_, n, not_found) {
    return not_found
  };
  G__8917 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8917__2.call(this, _, n);
      case 3:
        return G__8917__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8917
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3822__auto____8918 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3822__auto____8918) {
    return o.toString() === other.toString()
  }else {
    return and__3822__auto____8918
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__8931 = cljs.core._count.call(null, cicoll);
    if(cnt__8931 === 0) {
      return f.call(null)
    }else {
      var val__8932 = cljs.core._nth.call(null, cicoll, 0);
      var n__8933 = 1;
      while(true) {
        if(n__8933 < cnt__8931) {
          var nval__8934 = f.call(null, val__8932, cljs.core._nth.call(null, cicoll, n__8933));
          if(cljs.core.reduced_QMARK_.call(null, nval__8934)) {
            return cljs.core.deref.call(null, nval__8934)
          }else {
            var G__8943 = nval__8934;
            var G__8944 = n__8933 + 1;
            val__8932 = G__8943;
            n__8933 = G__8944;
            continue
          }
        }else {
          return val__8932
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__8935 = cljs.core._count.call(null, cicoll);
    var val__8936 = val;
    var n__8937 = 0;
    while(true) {
      if(n__8937 < cnt__8935) {
        var nval__8938 = f.call(null, val__8936, cljs.core._nth.call(null, cicoll, n__8937));
        if(cljs.core.reduced_QMARK_.call(null, nval__8938)) {
          return cljs.core.deref.call(null, nval__8938)
        }else {
          var G__8945 = nval__8938;
          var G__8946 = n__8937 + 1;
          val__8936 = G__8945;
          n__8937 = G__8946;
          continue
        }
      }else {
        return val__8936
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__8939 = cljs.core._count.call(null, cicoll);
    var val__8940 = val;
    var n__8941 = idx;
    while(true) {
      if(n__8941 < cnt__8939) {
        var nval__8942 = f.call(null, val__8940, cljs.core._nth.call(null, cicoll, n__8941));
        if(cljs.core.reduced_QMARK_.call(null, nval__8942)) {
          return cljs.core.deref.call(null, nval__8942)
        }else {
          var G__8947 = nval__8942;
          var G__8948 = n__8941 + 1;
          val__8940 = G__8947;
          n__8941 = G__8948;
          continue
        }
      }else {
        return val__8940
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__8961 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__8962 = arr[0];
      var n__8963 = 1;
      while(true) {
        if(n__8963 < cnt__8961) {
          var nval__8964 = f.call(null, val__8962, arr[n__8963]);
          if(cljs.core.reduced_QMARK_.call(null, nval__8964)) {
            return cljs.core.deref.call(null, nval__8964)
          }else {
            var G__8973 = nval__8964;
            var G__8974 = n__8963 + 1;
            val__8962 = G__8973;
            n__8963 = G__8974;
            continue
          }
        }else {
          return val__8962
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__8965 = arr.length;
    var val__8966 = val;
    var n__8967 = 0;
    while(true) {
      if(n__8967 < cnt__8965) {
        var nval__8968 = f.call(null, val__8966, arr[n__8967]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8968)) {
          return cljs.core.deref.call(null, nval__8968)
        }else {
          var G__8975 = nval__8968;
          var G__8976 = n__8967 + 1;
          val__8966 = G__8975;
          n__8967 = G__8976;
          continue
        }
      }else {
        return val__8966
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__8969 = arr.length;
    var val__8970 = val;
    var n__8971 = idx;
    while(true) {
      if(n__8971 < cnt__8969) {
        var nval__8972 = f.call(null, val__8970, arr[n__8971]);
        if(cljs.core.reduced_QMARK_.call(null, nval__8972)) {
          return cljs.core.deref.call(null, nval__8972)
        }else {
          var G__8977 = nval__8972;
          var G__8978 = n__8971 + 1;
          val__8970 = G__8977;
          n__8971 = G__8978;
          continue
        }
      }else {
        return val__8970
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__8979 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__8980 = this;
  if(this__8980.i + 1 < this__8980.a.length) {
    return new cljs.core.IndexedSeq(this__8980.a, this__8980.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__8981 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__8982 = this;
  var c__8983 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__8983 > 0) {
    return new cljs.core.RSeq(coll, c__8983 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__8984 = this;
  var this__8985 = this;
  return cljs.core.pr_str.call(null, this__8985)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__8986 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8986.a)) {
    return cljs.core.ci_reduce.call(null, this__8986.a, f, this__8986.a[this__8986.i], this__8986.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__8986.a[this__8986.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__8987 = this;
  if(cljs.core.counted_QMARK_.call(null, this__8987.a)) {
    return cljs.core.ci_reduce.call(null, this__8987.a, f, start, this__8987.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__8988 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__8989 = this;
  return this__8989.a.length - this__8989.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__8990 = this;
  return this__8990.a[this__8990.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__8991 = this;
  if(this__8991.i + 1 < this__8991.a.length) {
    return new cljs.core.IndexedSeq(this__8991.a, this__8991.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__8992 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__8993 = this;
  var i__8994 = n + this__8993.i;
  if(i__8994 < this__8993.a.length) {
    return this__8993.a[i__8994]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__8995 = this;
  var i__8996 = n + this__8995.i;
  if(i__8996 < this__8995.a.length) {
    return this__8995.a[i__8996]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__8997 = null;
  var G__8997__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__8997__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__8997 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__8997__2.call(this, array, f);
      case 3:
        return G__8997__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8997
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__8998 = null;
  var G__8998__2 = function(array, k) {
    return array[k]
  };
  var G__8998__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__8998 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8998__2.call(this, array, k);
      case 3:
        return G__8998__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8998
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__8999 = null;
  var G__8999__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__8999__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__8999 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__8999__2.call(this, array, n);
      case 3:
        return G__8999__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__8999
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9000 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9001 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__9002 = this;
  var this__9003 = this;
  return cljs.core.pr_str.call(null, this__9003)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9004 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9005 = this;
  return this__9005.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9006 = this;
  return cljs.core._nth.call(null, this__9006.ci, this__9006.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9007 = this;
  if(this__9007.i > 0) {
    return new cljs.core.RSeq(this__9007.ci, this__9007.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9008 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__9009 = this;
  return new cljs.core.RSeq(this__9009.ci, this__9009.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9010 = this;
  return this__9010.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9014__9015 = coll;
      if(G__9014__9015) {
        if(function() {
          var or__3824__auto____9016 = G__9014__9015.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3824__auto____9016) {
            return or__3824__auto____9016
          }else {
            return G__9014__9015.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__9014__9015.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9014__9015)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__9014__9015)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9021__9022 = coll;
      if(G__9021__9022) {
        if(function() {
          var or__3824__auto____9023 = G__9021__9022.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9023) {
            return or__3824__auto____9023
          }else {
            return G__9021__9022.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9021__9022.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9021__9022)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9021__9022)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__9024 = cljs.core.seq.call(null, coll);
      if(s__9024 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__9024)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__9029__9030 = coll;
      if(G__9029__9030) {
        if(function() {
          var or__3824__auto____9031 = G__9029__9030.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9031) {
            return or__3824__auto____9031
          }else {
            return G__9029__9030.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9029__9030.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9029__9030)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9029__9030)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__9032 = cljs.core.seq.call(null, coll);
      if(!(s__9032 == null)) {
        return cljs.core._rest.call(null, s__9032)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__9036__9037 = coll;
      if(G__9036__9037) {
        if(function() {
          var or__3824__auto____9038 = G__9036__9037.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3824__auto____9038) {
            return or__3824__auto____9038
          }else {
            return G__9036__9037.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__9036__9037.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9036__9037)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__9036__9037)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__9040 = cljs.core.next.call(null, s);
    if(!(sn__9040 == null)) {
      var G__9041 = sn__9040;
      s = G__9041;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__9042__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__9043 = conj.call(null, coll, x);
          var G__9044 = cljs.core.first.call(null, xs);
          var G__9045 = cljs.core.next.call(null, xs);
          coll = G__9043;
          x = G__9044;
          xs = G__9045;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__9042 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9042__delegate.call(this, coll, x, xs)
    };
    G__9042.cljs$lang$maxFixedArity = 2;
    G__9042.cljs$lang$applyTo = function(arglist__9046) {
      var coll = cljs.core.first(arglist__9046);
      var x = cljs.core.first(cljs.core.next(arglist__9046));
      var xs = cljs.core.rest(cljs.core.next(arglist__9046));
      return G__9042__delegate(coll, x, xs)
    };
    G__9042.cljs$lang$arity$variadic = G__9042__delegate;
    return G__9042
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__9049 = cljs.core.seq.call(null, coll);
  var acc__9050 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__9049)) {
      return acc__9050 + cljs.core._count.call(null, s__9049)
    }else {
      var G__9051 = cljs.core.next.call(null, s__9049);
      var G__9052 = acc__9050 + 1;
      s__9049 = G__9051;
      acc__9050 = G__9052;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__9059__9060 = coll;
        if(G__9059__9060) {
          if(function() {
            var or__3824__auto____9061 = G__9059__9060.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____9061) {
              return or__3824__auto____9061
            }else {
              return G__9059__9060.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__9059__9060.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9059__9060)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9059__9060)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__9062__9063 = coll;
        if(G__9062__9063) {
          if(function() {
            var or__3824__auto____9064 = G__9062__9063.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3824__auto____9064) {
              return or__3824__auto____9064
            }else {
              return G__9062__9063.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__9062__9063.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9062__9063)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9062__9063)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__9067__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__9066 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__9068 = ret__9066;
          var G__9069 = cljs.core.first.call(null, kvs);
          var G__9070 = cljs.core.second.call(null, kvs);
          var G__9071 = cljs.core.nnext.call(null, kvs);
          coll = G__9068;
          k = G__9069;
          v = G__9070;
          kvs = G__9071;
          continue
        }else {
          return ret__9066
        }
        break
      }
    };
    var G__9067 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9067__delegate.call(this, coll, k, v, kvs)
    };
    G__9067.cljs$lang$maxFixedArity = 3;
    G__9067.cljs$lang$applyTo = function(arglist__9072) {
      var coll = cljs.core.first(arglist__9072);
      var k = cljs.core.first(cljs.core.next(arglist__9072));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9072)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9072)));
      return G__9067__delegate(coll, k, v, kvs)
    };
    G__9067.cljs$lang$arity$variadic = G__9067__delegate;
    return G__9067
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__9075__delegate = function(coll, k, ks) {
      while(true) {
        var ret__9074 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__9076 = ret__9074;
          var G__9077 = cljs.core.first.call(null, ks);
          var G__9078 = cljs.core.next.call(null, ks);
          coll = G__9076;
          k = G__9077;
          ks = G__9078;
          continue
        }else {
          return ret__9074
        }
        break
      }
    };
    var G__9075 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9075__delegate.call(this, coll, k, ks)
    };
    G__9075.cljs$lang$maxFixedArity = 2;
    G__9075.cljs$lang$applyTo = function(arglist__9079) {
      var coll = cljs.core.first(arglist__9079);
      var k = cljs.core.first(cljs.core.next(arglist__9079));
      var ks = cljs.core.rest(cljs.core.next(arglist__9079));
      return G__9075__delegate(coll, k, ks)
    };
    G__9075.cljs$lang$arity$variadic = G__9075__delegate;
    return G__9075
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__9083__9084 = o;
    if(G__9083__9084) {
      if(function() {
        var or__3824__auto____9085 = G__9083__9084.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3824__auto____9085) {
          return or__3824__auto____9085
        }else {
          return G__9083__9084.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__9083__9084.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9083__9084)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__9083__9084)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__9088__delegate = function(coll, k, ks) {
      while(true) {
        var ret__9087 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__9089 = ret__9087;
          var G__9090 = cljs.core.first.call(null, ks);
          var G__9091 = cljs.core.next.call(null, ks);
          coll = G__9089;
          k = G__9090;
          ks = G__9091;
          continue
        }else {
          return ret__9087
        }
        break
      }
    };
    var G__9088 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9088__delegate.call(this, coll, k, ks)
    };
    G__9088.cljs$lang$maxFixedArity = 2;
    G__9088.cljs$lang$applyTo = function(arglist__9092) {
      var coll = cljs.core.first(arglist__9092);
      var k = cljs.core.first(cljs.core.next(arglist__9092));
      var ks = cljs.core.rest(cljs.core.next(arglist__9092));
      return G__9088__delegate(coll, k, ks)
    };
    G__9088.cljs$lang$arity$variadic = G__9088__delegate;
    return G__9088
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__9094 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__9094;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__9094
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__9096 = cljs.core.string_hash_cache[k];
  if(!(h__9096 == null)) {
    return h__9096
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3822__auto____9098 = goog.isString(o);
      if(and__3822__auto____9098) {
        return check_cache
      }else {
        return and__3822__auto____9098
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9102__9103 = x;
    if(G__9102__9103) {
      if(function() {
        var or__3824__auto____9104 = G__9102__9103.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3824__auto____9104) {
          return or__3824__auto____9104
        }else {
          return G__9102__9103.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__9102__9103.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__9102__9103)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__9102__9103)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9108__9109 = x;
    if(G__9108__9109) {
      if(function() {
        var or__3824__auto____9110 = G__9108__9109.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3824__auto____9110) {
          return or__3824__auto____9110
        }else {
          return G__9108__9109.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__9108__9109.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__9108__9109)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__9108__9109)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__9114__9115 = x;
  if(G__9114__9115) {
    if(function() {
      var or__3824__auto____9116 = G__9114__9115.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3824__auto____9116) {
        return or__3824__auto____9116
      }else {
        return G__9114__9115.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__9114__9115.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__9114__9115)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__9114__9115)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__9120__9121 = x;
  if(G__9120__9121) {
    if(function() {
      var or__3824__auto____9122 = G__9120__9121.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3824__auto____9122) {
        return or__3824__auto____9122
      }else {
        return G__9120__9121.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__9120__9121.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__9120__9121)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__9120__9121)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__9126__9127 = x;
  if(G__9126__9127) {
    if(function() {
      var or__3824__auto____9128 = G__9126__9127.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3824__auto____9128) {
        return or__3824__auto____9128
      }else {
        return G__9126__9127.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__9126__9127.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9126__9127)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__9126__9127)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__9132__9133 = x;
  if(G__9132__9133) {
    if(function() {
      var or__3824__auto____9134 = G__9132__9133.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3824__auto____9134) {
        return or__3824__auto____9134
      }else {
        return G__9132__9133.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__9132__9133.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9132__9133)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__9132__9133)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__9138__9139 = x;
  if(G__9138__9139) {
    if(function() {
      var or__3824__auto____9140 = G__9138__9139.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3824__auto____9140) {
        return or__3824__auto____9140
      }else {
        return G__9138__9139.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__9138__9139.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9138__9139)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9138__9139)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__9144__9145 = x;
    if(G__9144__9145) {
      if(function() {
        var or__3824__auto____9146 = G__9144__9145.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3824__auto____9146) {
          return or__3824__auto____9146
        }else {
          return G__9144__9145.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__9144__9145.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__9144__9145)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__9144__9145)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__9150__9151 = x;
  if(G__9150__9151) {
    if(function() {
      var or__3824__auto____9152 = G__9150__9151.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3824__auto____9152) {
        return or__3824__auto____9152
      }else {
        return G__9150__9151.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__9150__9151.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__9150__9151)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__9150__9151)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__9156__9157 = x;
  if(G__9156__9157) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____9158 = null;
      if(cljs.core.truth_(or__3824__auto____9158)) {
        return or__3824__auto____9158
      }else {
        return G__9156__9157.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__9156__9157.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__9156__9157)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__9156__9157)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__9159__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__9159 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9159__delegate.call(this, keyvals)
    };
    G__9159.cljs$lang$maxFixedArity = 0;
    G__9159.cljs$lang$applyTo = function(arglist__9160) {
      var keyvals = cljs.core.seq(arglist__9160);
      return G__9159__delegate(keyvals)
    };
    G__9159.cljs$lang$arity$variadic = G__9159__delegate;
    return G__9159
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__9162 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__9162.push(key)
  });
  return keys__9162
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__9166 = i;
  var j__9167 = j;
  var len__9168 = len;
  while(true) {
    if(len__9168 === 0) {
      return to
    }else {
      to[j__9167] = from[i__9166];
      var G__9169 = i__9166 + 1;
      var G__9170 = j__9167 + 1;
      var G__9171 = len__9168 - 1;
      i__9166 = G__9169;
      j__9167 = G__9170;
      len__9168 = G__9171;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__9175 = i + (len - 1);
  var j__9176 = j + (len - 1);
  var len__9177 = len;
  while(true) {
    if(len__9177 === 0) {
      return to
    }else {
      to[j__9176] = from[i__9175];
      var G__9178 = i__9175 - 1;
      var G__9179 = j__9176 - 1;
      var G__9180 = len__9177 - 1;
      i__9175 = G__9178;
      j__9176 = G__9179;
      len__9177 = G__9180;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__9184__9185 = s;
    if(G__9184__9185) {
      if(function() {
        var or__3824__auto____9186 = G__9184__9185.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3824__auto____9186) {
          return or__3824__auto____9186
        }else {
          return G__9184__9185.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__9184__9185.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9184__9185)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9184__9185)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__9190__9191 = s;
  if(G__9190__9191) {
    if(function() {
      var or__3824__auto____9192 = G__9190__9191.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3824__auto____9192) {
        return or__3824__auto____9192
      }else {
        return G__9190__9191.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__9190__9191.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__9190__9191)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__9190__9191)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3822__auto____9195 = goog.isString(x);
  if(and__3822__auto____9195) {
    return!function() {
      var or__3824__auto____9196 = x.charAt(0) === "\ufdd0";
      if(or__3824__auto____9196) {
        return or__3824__auto____9196
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3822__auto____9195
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3822__auto____9198 = goog.isString(x);
  if(and__3822__auto____9198) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3822__auto____9198
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3822__auto____9200 = goog.isString(x);
  if(and__3822__auto____9200) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3822__auto____9200
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3824__auto____9205 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3824__auto____9205) {
    return or__3824__auto____9205
  }else {
    var G__9206__9207 = f;
    if(G__9206__9207) {
      if(function() {
        var or__3824__auto____9208 = G__9206__9207.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3824__auto____9208) {
          return or__3824__auto____9208
        }else {
          return G__9206__9207.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__9206__9207.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__9206__9207)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__9206__9207)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3822__auto____9210 = cljs.core.number_QMARK_.call(null, n);
  if(and__3822__auto____9210) {
    return n == n.toFixed()
  }else {
    return and__3822__auto____9210
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3822__auto____9213 = coll;
    if(cljs.core.truth_(and__3822__auto____9213)) {
      var and__3822__auto____9214 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3822__auto____9214) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3822__auto____9214
      }
    }else {
      return and__3822__auto____9213
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__9223__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__9219 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__9220 = more;
        while(true) {
          var x__9221 = cljs.core.first.call(null, xs__9220);
          var etc__9222 = cljs.core.next.call(null, xs__9220);
          if(cljs.core.truth_(xs__9220)) {
            if(cljs.core.contains_QMARK_.call(null, s__9219, x__9221)) {
              return false
            }else {
              var G__9224 = cljs.core.conj.call(null, s__9219, x__9221);
              var G__9225 = etc__9222;
              s__9219 = G__9224;
              xs__9220 = G__9225;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__9223 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9223__delegate.call(this, x, y, more)
    };
    G__9223.cljs$lang$maxFixedArity = 2;
    G__9223.cljs$lang$applyTo = function(arglist__9226) {
      var x = cljs.core.first(arglist__9226);
      var y = cljs.core.first(cljs.core.next(arglist__9226));
      var more = cljs.core.rest(cljs.core.next(arglist__9226));
      return G__9223__delegate(x, y, more)
    };
    G__9223.cljs$lang$arity$variadic = G__9223__delegate;
    return G__9223
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__9230__9231 = x;
            if(G__9230__9231) {
              if(cljs.core.truth_(function() {
                var or__3824__auto____9232 = null;
                if(cljs.core.truth_(or__3824__auto____9232)) {
                  return or__3824__auto____9232
                }else {
                  return G__9230__9231.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__9230__9231.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__9230__9231)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__9230__9231)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__9237 = cljs.core.count.call(null, xs);
    var yl__9238 = cljs.core.count.call(null, ys);
    if(xl__9237 < yl__9238) {
      return-1
    }else {
      if(xl__9237 > yl__9238) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__9237, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__9239 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3822__auto____9240 = d__9239 === 0;
        if(and__3822__auto____9240) {
          return n + 1 < len
        }else {
          return and__3822__auto____9240
        }
      }()) {
        var G__9241 = xs;
        var G__9242 = ys;
        var G__9243 = len;
        var G__9244 = n + 1;
        xs = G__9241;
        ys = G__9242;
        len = G__9243;
        n = G__9244;
        continue
      }else {
        return d__9239
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__9246 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__9246)) {
        return r__9246
      }else {
        if(cljs.core.truth_(r__9246)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__9248 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__9248, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__9248)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__3971__auto____9254 = cljs.core.seq.call(null, coll);
    if(temp__3971__auto____9254) {
      var s__9255 = temp__3971__auto____9254;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__9255), cljs.core.next.call(null, s__9255))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__9256 = val;
    var coll__9257 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__9257) {
        var nval__9258 = f.call(null, val__9256, cljs.core.first.call(null, coll__9257));
        if(cljs.core.reduced_QMARK_.call(null, nval__9258)) {
          return cljs.core.deref.call(null, nval__9258)
        }else {
          var G__9259 = nval__9258;
          var G__9260 = cljs.core.next.call(null, coll__9257);
          val__9256 = G__9259;
          coll__9257 = G__9260;
          continue
        }
      }else {
        return val__9256
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__9262 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__9262);
  return cljs.core.vec.call(null, a__9262)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__9269__9270 = coll;
      if(G__9269__9270) {
        if(function() {
          var or__3824__auto____9271 = G__9269__9270.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____9271) {
            return or__3824__auto____9271
          }else {
            return G__9269__9270.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__9269__9270.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9269__9270)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9269__9270)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__9272__9273 = coll;
      if(G__9272__9273) {
        if(function() {
          var or__3824__auto____9274 = G__9272__9273.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3824__auto____9274) {
            return or__3824__auto____9274
          }else {
            return G__9272__9273.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__9272__9273.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9272__9273)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__9272__9273)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__9275 = this;
  return this__9275.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__9276__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__9276 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9276__delegate.call(this, x, y, more)
    };
    G__9276.cljs$lang$maxFixedArity = 2;
    G__9276.cljs$lang$applyTo = function(arglist__9277) {
      var x = cljs.core.first(arglist__9277);
      var y = cljs.core.first(cljs.core.next(arglist__9277));
      var more = cljs.core.rest(cljs.core.next(arglist__9277));
      return G__9276__delegate(x, y, more)
    };
    G__9276.cljs$lang$arity$variadic = G__9276__delegate;
    return G__9276
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__9278__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__9278 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9278__delegate.call(this, x, y, more)
    };
    G__9278.cljs$lang$maxFixedArity = 2;
    G__9278.cljs$lang$applyTo = function(arglist__9279) {
      var x = cljs.core.first(arglist__9279);
      var y = cljs.core.first(cljs.core.next(arglist__9279));
      var more = cljs.core.rest(cljs.core.next(arglist__9279));
      return G__9278__delegate(x, y, more)
    };
    G__9278.cljs$lang$arity$variadic = G__9278__delegate;
    return G__9278
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__9280__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__9280 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9280__delegate.call(this, x, y, more)
    };
    G__9280.cljs$lang$maxFixedArity = 2;
    G__9280.cljs$lang$applyTo = function(arglist__9281) {
      var x = cljs.core.first(arglist__9281);
      var y = cljs.core.first(cljs.core.next(arglist__9281));
      var more = cljs.core.rest(cljs.core.next(arglist__9281));
      return G__9280__delegate(x, y, more)
    };
    G__9280.cljs$lang$arity$variadic = G__9280__delegate;
    return G__9280
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__9282__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__9282 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9282__delegate.call(this, x, y, more)
    };
    G__9282.cljs$lang$maxFixedArity = 2;
    G__9282.cljs$lang$applyTo = function(arglist__9283) {
      var x = cljs.core.first(arglist__9283);
      var y = cljs.core.first(cljs.core.next(arglist__9283));
      var more = cljs.core.rest(cljs.core.next(arglist__9283));
      return G__9282__delegate(x, y, more)
    };
    G__9282.cljs$lang$arity$variadic = G__9282__delegate;
    return G__9282
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__9284__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__9285 = y;
            var G__9286 = cljs.core.first.call(null, more);
            var G__9287 = cljs.core.next.call(null, more);
            x = G__9285;
            y = G__9286;
            more = G__9287;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9284 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9284__delegate.call(this, x, y, more)
    };
    G__9284.cljs$lang$maxFixedArity = 2;
    G__9284.cljs$lang$applyTo = function(arglist__9288) {
      var x = cljs.core.first(arglist__9288);
      var y = cljs.core.first(cljs.core.next(arglist__9288));
      var more = cljs.core.rest(cljs.core.next(arglist__9288));
      return G__9284__delegate(x, y, more)
    };
    G__9284.cljs$lang$arity$variadic = G__9284__delegate;
    return G__9284
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__9289__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9290 = y;
            var G__9291 = cljs.core.first.call(null, more);
            var G__9292 = cljs.core.next.call(null, more);
            x = G__9290;
            y = G__9291;
            more = G__9292;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9289 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9289__delegate.call(this, x, y, more)
    };
    G__9289.cljs$lang$maxFixedArity = 2;
    G__9289.cljs$lang$applyTo = function(arglist__9293) {
      var x = cljs.core.first(arglist__9293);
      var y = cljs.core.first(cljs.core.next(arglist__9293));
      var more = cljs.core.rest(cljs.core.next(arglist__9293));
      return G__9289__delegate(x, y, more)
    };
    G__9289.cljs$lang$arity$variadic = G__9289__delegate;
    return G__9289
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__9294__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__9295 = y;
            var G__9296 = cljs.core.first.call(null, more);
            var G__9297 = cljs.core.next.call(null, more);
            x = G__9295;
            y = G__9296;
            more = G__9297;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9294 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9294__delegate.call(this, x, y, more)
    };
    G__9294.cljs$lang$maxFixedArity = 2;
    G__9294.cljs$lang$applyTo = function(arglist__9298) {
      var x = cljs.core.first(arglist__9298);
      var y = cljs.core.first(cljs.core.next(arglist__9298));
      var more = cljs.core.rest(cljs.core.next(arglist__9298));
      return G__9294__delegate(x, y, more)
    };
    G__9294.cljs$lang$arity$variadic = G__9294__delegate;
    return G__9294
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__9299__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__9300 = y;
            var G__9301 = cljs.core.first.call(null, more);
            var G__9302 = cljs.core.next.call(null, more);
            x = G__9300;
            y = G__9301;
            more = G__9302;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9299 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9299__delegate.call(this, x, y, more)
    };
    G__9299.cljs$lang$maxFixedArity = 2;
    G__9299.cljs$lang$applyTo = function(arglist__9303) {
      var x = cljs.core.first(arglist__9303);
      var y = cljs.core.first(cljs.core.next(arglist__9303));
      var more = cljs.core.rest(cljs.core.next(arglist__9303));
      return G__9299__delegate(x, y, more)
    };
    G__9299.cljs$lang$arity$variadic = G__9299__delegate;
    return G__9299
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__9304__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__9304 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9304__delegate.call(this, x, y, more)
    };
    G__9304.cljs$lang$maxFixedArity = 2;
    G__9304.cljs$lang$applyTo = function(arglist__9305) {
      var x = cljs.core.first(arglist__9305);
      var y = cljs.core.first(cljs.core.next(arglist__9305));
      var more = cljs.core.rest(cljs.core.next(arglist__9305));
      return G__9304__delegate(x, y, more)
    };
    G__9304.cljs$lang$arity$variadic = G__9304__delegate;
    return G__9304
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__9306__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__9306 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9306__delegate.call(this, x, y, more)
    };
    G__9306.cljs$lang$maxFixedArity = 2;
    G__9306.cljs$lang$applyTo = function(arglist__9307) {
      var x = cljs.core.first(arglist__9307);
      var y = cljs.core.first(cljs.core.next(arglist__9307));
      var more = cljs.core.rest(cljs.core.next(arglist__9307));
      return G__9306__delegate(x, y, more)
    };
    G__9306.cljs$lang$arity$variadic = G__9306__delegate;
    return G__9306
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__9309 = n % d;
  return cljs.core.fix.call(null, (n - rem__9309) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__9311 = cljs.core.quot.call(null, n, d);
  return n - d * q__9311
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__9314 = v - (v >> 1 & 1431655765);
  var v__9315 = (v__9314 & 858993459) + (v__9314 >> 2 & 858993459);
  return(v__9315 + (v__9315 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__9316__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__9317 = y;
            var G__9318 = cljs.core.first.call(null, more);
            var G__9319 = cljs.core.next.call(null, more);
            x = G__9317;
            y = G__9318;
            more = G__9319;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__9316 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9316__delegate.call(this, x, y, more)
    };
    G__9316.cljs$lang$maxFixedArity = 2;
    G__9316.cljs$lang$applyTo = function(arglist__9320) {
      var x = cljs.core.first(arglist__9320);
      var y = cljs.core.first(cljs.core.next(arglist__9320));
      var more = cljs.core.rest(cljs.core.next(arglist__9320));
      return G__9316__delegate(x, y, more)
    };
    G__9316.cljs$lang$arity$variadic = G__9316__delegate;
    return G__9316
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__9324 = n;
  var xs__9325 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____9326 = xs__9325;
      if(and__3822__auto____9326) {
        return n__9324 > 0
      }else {
        return and__3822__auto____9326
      }
    }())) {
      var G__9327 = n__9324 - 1;
      var G__9328 = cljs.core.next.call(null, xs__9325);
      n__9324 = G__9327;
      xs__9325 = G__9328;
      continue
    }else {
      return xs__9325
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__9329__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9330 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__9331 = cljs.core.next.call(null, more);
            sb = G__9330;
            more = G__9331;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__9329 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9329__delegate.call(this, x, ys)
    };
    G__9329.cljs$lang$maxFixedArity = 1;
    G__9329.cljs$lang$applyTo = function(arglist__9332) {
      var x = cljs.core.first(arglist__9332);
      var ys = cljs.core.rest(arglist__9332);
      return G__9329__delegate(x, ys)
    };
    G__9329.cljs$lang$arity$variadic = G__9329__delegate;
    return G__9329
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__9333__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__9334 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__9335 = cljs.core.next.call(null, more);
            sb = G__9334;
            more = G__9335;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__9333 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__9333__delegate.call(this, x, ys)
    };
    G__9333.cljs$lang$maxFixedArity = 1;
    G__9333.cljs$lang$applyTo = function(arglist__9336) {
      var x = cljs.core.first(arglist__9336);
      var ys = cljs.core.rest(arglist__9336);
      return G__9333__delegate(x, ys)
    };
    G__9333.cljs$lang$arity$variadic = G__9333__delegate;
    return G__9333
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__9337) {
    var fmt = cljs.core.first(arglist__9337);
    var args = cljs.core.rest(arglist__9337);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__9340 = cljs.core.seq.call(null, x);
    var ys__9341 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__9340 == null) {
        return ys__9341 == null
      }else {
        if(ys__9341 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__9340), cljs.core.first.call(null, ys__9341))) {
            var G__9342 = cljs.core.next.call(null, xs__9340);
            var G__9343 = cljs.core.next.call(null, ys__9341);
            xs__9340 = G__9342;
            ys__9341 = G__9343;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__9344_SHARP_, p2__9345_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__9344_SHARP_, cljs.core.hash.call(null, p2__9345_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__9349 = 0;
  var s__9350 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__9350) {
      var e__9351 = cljs.core.first.call(null, s__9350);
      var G__9352 = (h__9349 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__9351)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__9351)))) % 4503599627370496;
      var G__9353 = cljs.core.next.call(null, s__9350);
      h__9349 = G__9352;
      s__9350 = G__9353;
      continue
    }else {
      return h__9349
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__9357 = 0;
  var s__9358 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__9358) {
      var e__9359 = cljs.core.first.call(null, s__9358);
      var G__9360 = (h__9357 + cljs.core.hash.call(null, e__9359)) % 4503599627370496;
      var G__9361 = cljs.core.next.call(null, s__9358);
      h__9357 = G__9360;
      s__9358 = G__9361;
      continue
    }else {
      return h__9357
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__9382__9383 = cljs.core.seq.call(null, fn_map);
  if(G__9382__9383) {
    var G__9385__9387 = cljs.core.first.call(null, G__9382__9383);
    var vec__9386__9388 = G__9385__9387;
    var key_name__9389 = cljs.core.nth.call(null, vec__9386__9388, 0, null);
    var f__9390 = cljs.core.nth.call(null, vec__9386__9388, 1, null);
    var G__9382__9391 = G__9382__9383;
    var G__9385__9392 = G__9385__9387;
    var G__9382__9393 = G__9382__9391;
    while(true) {
      var vec__9394__9395 = G__9385__9392;
      var key_name__9396 = cljs.core.nth.call(null, vec__9394__9395, 0, null);
      var f__9397 = cljs.core.nth.call(null, vec__9394__9395, 1, null);
      var G__9382__9398 = G__9382__9393;
      var str_name__9399 = cljs.core.name.call(null, key_name__9396);
      obj[str_name__9399] = f__9397;
      var temp__3974__auto____9400 = cljs.core.next.call(null, G__9382__9398);
      if(temp__3974__auto____9400) {
        var G__9382__9401 = temp__3974__auto____9400;
        var G__9402 = cljs.core.first.call(null, G__9382__9401);
        var G__9403 = G__9382__9401;
        G__9385__9392 = G__9402;
        G__9382__9393 = G__9403;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9404 = this;
  var h__2242__auto____9405 = this__9404.__hash;
  if(!(h__2242__auto____9405 == null)) {
    return h__2242__auto____9405
  }else {
    var h__2242__auto____9406 = cljs.core.hash_coll.call(null, coll);
    this__9404.__hash = h__2242__auto____9406;
    return h__2242__auto____9406
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9407 = this;
  if(this__9407.count === 1) {
    return null
  }else {
    return this__9407.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9408 = this;
  return new cljs.core.List(this__9408.meta, o, coll, this__9408.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__9409 = this;
  var this__9410 = this;
  return cljs.core.pr_str.call(null, this__9410)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9411 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9412 = this;
  return this__9412.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9413 = this;
  return this__9413.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9414 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9415 = this;
  return this__9415.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9416 = this;
  if(this__9416.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__9416.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9417 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9418 = this;
  return new cljs.core.List(meta, this__9418.first, this__9418.rest, this__9418.count, this__9418.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9419 = this;
  return this__9419.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9420 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9421 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9422 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9423 = this;
  return new cljs.core.List(this__9423.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__9424 = this;
  var this__9425 = this;
  return cljs.core.pr_str.call(null, this__9425)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9426 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__9427 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__9428 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__9429 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9430 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9431 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9432 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9433 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9434 = this;
  return this__9434.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9435 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__9439__9440 = coll;
  if(G__9439__9440) {
    if(function() {
      var or__3824__auto____9441 = G__9439__9440.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3824__auto____9441) {
        return or__3824__auto____9441
      }else {
        return G__9439__9440.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__9439__9440.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9439__9440)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__9439__9440)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__9442__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__9442 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9442__delegate.call(this, x, y, z, items)
    };
    G__9442.cljs$lang$maxFixedArity = 3;
    G__9442.cljs$lang$applyTo = function(arglist__9443) {
      var x = cljs.core.first(arglist__9443);
      var y = cljs.core.first(cljs.core.next(arglist__9443));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9443)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9443)));
      return G__9442__delegate(x, y, z, items)
    };
    G__9442.cljs$lang$arity$variadic = G__9442__delegate;
    return G__9442
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9444 = this;
  var h__2242__auto____9445 = this__9444.__hash;
  if(!(h__2242__auto____9445 == null)) {
    return h__2242__auto____9445
  }else {
    var h__2242__auto____9446 = cljs.core.hash_coll.call(null, coll);
    this__9444.__hash = h__2242__auto____9446;
    return h__2242__auto____9446
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9447 = this;
  if(this__9447.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__9447.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9448 = this;
  return new cljs.core.Cons(null, o, coll, this__9448.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__9449 = this;
  var this__9450 = this;
  return cljs.core.pr_str.call(null, this__9450)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9451 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9452 = this;
  return this__9452.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9453 = this;
  if(this__9453.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9453.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9454 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9455 = this;
  return new cljs.core.Cons(meta, this__9455.first, this__9455.rest, this__9455.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9456 = this;
  return this__9456.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9457 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9457.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3824__auto____9462 = coll == null;
    if(or__3824__auto____9462) {
      return or__3824__auto____9462
    }else {
      var G__9463__9464 = coll;
      if(G__9463__9464) {
        if(function() {
          var or__3824__auto____9465 = G__9463__9464.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3824__auto____9465) {
            return or__3824__auto____9465
          }else {
            return G__9463__9464.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__9463__9464.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9463__9464)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__9463__9464)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__9469__9470 = x;
  if(G__9469__9470) {
    if(function() {
      var or__3824__auto____9471 = G__9469__9470.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3824__auto____9471) {
        return or__3824__auto____9471
      }else {
        return G__9469__9470.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__9469__9470.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9469__9470)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__9469__9470)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__9472 = null;
  var G__9472__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__9472__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__9472 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__9472__2.call(this, string, f);
      case 3:
        return G__9472__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9472
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__9473 = null;
  var G__9473__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__9473__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__9473 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9473__2.call(this, string, k);
      case 3:
        return G__9473__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9473
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__9474 = null;
  var G__9474__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__9474__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__9474 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9474__2.call(this, string, n);
      case 3:
        return G__9474__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9474
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__9486 = null;
  var G__9486__2 = function(this_sym9477, coll) {
    var this__9479 = this;
    var this_sym9477__9480 = this;
    var ___9481 = this_sym9477__9480;
    if(coll == null) {
      return null
    }else {
      var strobj__9482 = coll.strobj;
      if(strobj__9482 == null) {
        return cljs.core._lookup.call(null, coll, this__9479.k, null)
      }else {
        return strobj__9482[this__9479.k]
      }
    }
  };
  var G__9486__3 = function(this_sym9478, coll, not_found) {
    var this__9479 = this;
    var this_sym9478__9483 = this;
    var ___9484 = this_sym9478__9483;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__9479.k, not_found)
    }
  };
  G__9486 = function(this_sym9478, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9486__2.call(this, this_sym9478, coll);
      case 3:
        return G__9486__3.call(this, this_sym9478, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9486
}();
cljs.core.Keyword.prototype.apply = function(this_sym9475, args9476) {
  var this__9485 = this;
  return this_sym9475.call.apply(this_sym9475, [this_sym9475].concat(args9476.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__9495 = null;
  var G__9495__2 = function(this_sym9489, coll) {
    var this_sym9489__9491 = this;
    var this__9492 = this_sym9489__9491;
    return cljs.core._lookup.call(null, coll, this__9492.toString(), null)
  };
  var G__9495__3 = function(this_sym9490, coll, not_found) {
    var this_sym9490__9493 = this;
    var this__9494 = this_sym9490__9493;
    return cljs.core._lookup.call(null, coll, this__9494.toString(), not_found)
  };
  G__9495 = function(this_sym9490, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9495__2.call(this, this_sym9490, coll);
      case 3:
        return G__9495__3.call(this, this_sym9490, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__9495
}();
String.prototype.apply = function(this_sym9487, args9488) {
  return this_sym9487.call.apply(this_sym9487, [this_sym9487].concat(args9488.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__9497 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__9497
  }else {
    lazy_seq.x = x__9497.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__9498 = this;
  var h__2242__auto____9499 = this__9498.__hash;
  if(!(h__2242__auto____9499 == null)) {
    return h__2242__auto____9499
  }else {
    var h__2242__auto____9500 = cljs.core.hash_coll.call(null, coll);
    this__9498.__hash = h__2242__auto____9500;
    return h__2242__auto____9500
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__9501 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__9502 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__9503 = this;
  var this__9504 = this;
  return cljs.core.pr_str.call(null, this__9504)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9505 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9506 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9507 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9508 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__9509 = this;
  return new cljs.core.LazySeq(meta, this__9509.realized, this__9509.x, this__9509.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9510 = this;
  return this__9510.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__9511 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__9511.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9512 = this;
  return this__9512.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__9513 = this;
  var ___9514 = this;
  this__9513.buf[this__9513.end] = o;
  return this__9513.end = this__9513.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__9515 = this;
  var ___9516 = this;
  var ret__9517 = new cljs.core.ArrayChunk(this__9515.buf, 0, this__9515.end);
  this__9515.buf = null;
  return ret__9517
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__9518 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__9518.arr[this__9518.off], this__9518.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__9519 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__9519.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__9520 = this;
  if(this__9520.off === this__9520.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__9520.arr, this__9520.off + 1, this__9520.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__9521 = this;
  return this__9521.arr[this__9521.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__9522 = this;
  if(function() {
    var and__3822__auto____9523 = i >= 0;
    if(and__3822__auto____9523) {
      return i < this__9522.end - this__9522.off
    }else {
      return and__3822__auto____9523
    }
  }()) {
    return this__9522.arr[this__9522.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__9524 = this;
  return this__9524.end - this__9524.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__9525 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__9526 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__9527 = this;
  return cljs.core._nth.call(null, this__9527.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__9528 = this;
  if(cljs.core._count.call(null, this__9528.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__9528.chunk), this__9528.more, this__9528.meta)
  }else {
    if(this__9528.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__9528.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__9529 = this;
  if(this__9529.more == null) {
    return null
  }else {
    return this__9529.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__9530 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__9531 = this;
  return new cljs.core.ChunkedCons(this__9531.chunk, this__9531.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__9532 = this;
  return this__9532.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__9533 = this;
  return this__9533.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__9534 = this;
  if(this__9534.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__9534.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__9538__9539 = s;
    if(G__9538__9539) {
      if(cljs.core.truth_(function() {
        var or__3824__auto____9540 = null;
        if(cljs.core.truth_(or__3824__auto____9540)) {
          return or__3824__auto____9540
        }else {
          return G__9538__9539.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__9538__9539.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9538__9539)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__9538__9539)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__9543 = [];
  var s__9544 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__9544)) {
      ary__9543.push(cljs.core.first.call(null, s__9544));
      var G__9545 = cljs.core.next.call(null, s__9544);
      s__9544 = G__9545;
      continue
    }else {
      return ary__9543
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__9549 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__9550 = 0;
  var xs__9551 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__9551) {
      ret__9549[i__9550] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__9551));
      var G__9552 = i__9550 + 1;
      var G__9553 = cljs.core.next.call(null, xs__9551);
      i__9550 = G__9552;
      xs__9551 = G__9553;
      continue
    }else {
    }
    break
  }
  return ret__9549
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__9561 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9562 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9563 = 0;
      var s__9564 = s__9562;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9565 = s__9564;
          if(and__3822__auto____9565) {
            return i__9563 < size
          }else {
            return and__3822__auto____9565
          }
        }())) {
          a__9561[i__9563] = cljs.core.first.call(null, s__9564);
          var G__9568 = i__9563 + 1;
          var G__9569 = cljs.core.next.call(null, s__9564);
          i__9563 = G__9568;
          s__9564 = G__9569;
          continue
        }else {
          return a__9561
        }
        break
      }
    }else {
      var n__2577__auto____9566 = size;
      var i__9567 = 0;
      while(true) {
        if(i__9567 < n__2577__auto____9566) {
          a__9561[i__9567] = init_val_or_seq;
          var G__9570 = i__9567 + 1;
          i__9567 = G__9570;
          continue
        }else {
        }
        break
      }
      return a__9561
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__9578 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9579 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9580 = 0;
      var s__9581 = s__9579;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9582 = s__9581;
          if(and__3822__auto____9582) {
            return i__9580 < size
          }else {
            return and__3822__auto____9582
          }
        }())) {
          a__9578[i__9580] = cljs.core.first.call(null, s__9581);
          var G__9585 = i__9580 + 1;
          var G__9586 = cljs.core.next.call(null, s__9581);
          i__9580 = G__9585;
          s__9581 = G__9586;
          continue
        }else {
          return a__9578
        }
        break
      }
    }else {
      var n__2577__auto____9583 = size;
      var i__9584 = 0;
      while(true) {
        if(i__9584 < n__2577__auto____9583) {
          a__9578[i__9584] = init_val_or_seq;
          var G__9587 = i__9584 + 1;
          i__9584 = G__9587;
          continue
        }else {
        }
        break
      }
      return a__9578
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__9595 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__9596 = cljs.core.seq.call(null, init_val_or_seq);
      var i__9597 = 0;
      var s__9598 = s__9596;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3822__auto____9599 = s__9598;
          if(and__3822__auto____9599) {
            return i__9597 < size
          }else {
            return and__3822__auto____9599
          }
        }())) {
          a__9595[i__9597] = cljs.core.first.call(null, s__9598);
          var G__9602 = i__9597 + 1;
          var G__9603 = cljs.core.next.call(null, s__9598);
          i__9597 = G__9602;
          s__9598 = G__9603;
          continue
        }else {
          return a__9595
        }
        break
      }
    }else {
      var n__2577__auto____9600 = size;
      var i__9601 = 0;
      while(true) {
        if(i__9601 < n__2577__auto____9600) {
          a__9595[i__9601] = init_val_or_seq;
          var G__9604 = i__9601 + 1;
          i__9601 = G__9604;
          continue
        }else {
        }
        break
      }
      return a__9595
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__9609 = s;
    var i__9610 = n;
    var sum__9611 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____9612 = i__9610 > 0;
        if(and__3822__auto____9612) {
          return cljs.core.seq.call(null, s__9609)
        }else {
          return and__3822__auto____9612
        }
      }())) {
        var G__9613 = cljs.core.next.call(null, s__9609);
        var G__9614 = i__9610 - 1;
        var G__9615 = sum__9611 + 1;
        s__9609 = G__9613;
        i__9610 = G__9614;
        sum__9611 = G__9615;
        continue
      }else {
        return sum__9611
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__9620 = cljs.core.seq.call(null, x);
      if(s__9620) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9620)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__9620), concat.call(null, cljs.core.chunk_rest.call(null, s__9620), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__9620), concat.call(null, cljs.core.rest.call(null, s__9620), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__9624__delegate = function(x, y, zs) {
      var cat__9623 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__9622 = cljs.core.seq.call(null, xys);
          if(xys__9622) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__9622)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__9622), cat.call(null, cljs.core.chunk_rest.call(null, xys__9622), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__9622), cat.call(null, cljs.core.rest.call(null, xys__9622), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__9623.call(null, concat.call(null, x, y), zs)
    };
    var G__9624 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9624__delegate.call(this, x, y, zs)
    };
    G__9624.cljs$lang$maxFixedArity = 2;
    G__9624.cljs$lang$applyTo = function(arglist__9625) {
      var x = cljs.core.first(arglist__9625);
      var y = cljs.core.first(cljs.core.next(arglist__9625));
      var zs = cljs.core.rest(cljs.core.next(arglist__9625));
      return G__9624__delegate(x, y, zs)
    };
    G__9624.cljs$lang$arity$variadic = G__9624__delegate;
    return G__9624
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__9626__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__9626 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9626__delegate.call(this, a, b, c, d, more)
    };
    G__9626.cljs$lang$maxFixedArity = 4;
    G__9626.cljs$lang$applyTo = function(arglist__9627) {
      var a = cljs.core.first(arglist__9627);
      var b = cljs.core.first(cljs.core.next(arglist__9627));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9627)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9627))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9627))));
      return G__9626__delegate(a, b, c, d, more)
    };
    G__9626.cljs$lang$arity$variadic = G__9626__delegate;
    return G__9626
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__9669 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__9670 = cljs.core._first.call(null, args__9669);
    var args__9671 = cljs.core._rest.call(null, args__9669);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__9670)
      }else {
        return f.call(null, a__9670)
      }
    }else {
      var b__9672 = cljs.core._first.call(null, args__9671);
      var args__9673 = cljs.core._rest.call(null, args__9671);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__9670, b__9672)
        }else {
          return f.call(null, a__9670, b__9672)
        }
      }else {
        var c__9674 = cljs.core._first.call(null, args__9673);
        var args__9675 = cljs.core._rest.call(null, args__9673);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__9670, b__9672, c__9674)
          }else {
            return f.call(null, a__9670, b__9672, c__9674)
          }
        }else {
          var d__9676 = cljs.core._first.call(null, args__9675);
          var args__9677 = cljs.core._rest.call(null, args__9675);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__9670, b__9672, c__9674, d__9676)
            }else {
              return f.call(null, a__9670, b__9672, c__9674, d__9676)
            }
          }else {
            var e__9678 = cljs.core._first.call(null, args__9677);
            var args__9679 = cljs.core._rest.call(null, args__9677);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__9670, b__9672, c__9674, d__9676, e__9678)
              }else {
                return f.call(null, a__9670, b__9672, c__9674, d__9676, e__9678)
              }
            }else {
              var f__9680 = cljs.core._first.call(null, args__9679);
              var args__9681 = cljs.core._rest.call(null, args__9679);
              if(argc === 6) {
                if(f__9680.cljs$lang$arity$6) {
                  return f__9680.cljs$lang$arity$6(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680)
                }else {
                  return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680)
                }
              }else {
                var g__9682 = cljs.core._first.call(null, args__9681);
                var args__9683 = cljs.core._rest.call(null, args__9681);
                if(argc === 7) {
                  if(f__9680.cljs$lang$arity$7) {
                    return f__9680.cljs$lang$arity$7(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682)
                  }else {
                    return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682)
                  }
                }else {
                  var h__9684 = cljs.core._first.call(null, args__9683);
                  var args__9685 = cljs.core._rest.call(null, args__9683);
                  if(argc === 8) {
                    if(f__9680.cljs$lang$arity$8) {
                      return f__9680.cljs$lang$arity$8(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684)
                    }else {
                      return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684)
                    }
                  }else {
                    var i__9686 = cljs.core._first.call(null, args__9685);
                    var args__9687 = cljs.core._rest.call(null, args__9685);
                    if(argc === 9) {
                      if(f__9680.cljs$lang$arity$9) {
                        return f__9680.cljs$lang$arity$9(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686)
                      }else {
                        return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686)
                      }
                    }else {
                      var j__9688 = cljs.core._first.call(null, args__9687);
                      var args__9689 = cljs.core._rest.call(null, args__9687);
                      if(argc === 10) {
                        if(f__9680.cljs$lang$arity$10) {
                          return f__9680.cljs$lang$arity$10(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688)
                        }else {
                          return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688)
                        }
                      }else {
                        var k__9690 = cljs.core._first.call(null, args__9689);
                        var args__9691 = cljs.core._rest.call(null, args__9689);
                        if(argc === 11) {
                          if(f__9680.cljs$lang$arity$11) {
                            return f__9680.cljs$lang$arity$11(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690)
                          }else {
                            return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690)
                          }
                        }else {
                          var l__9692 = cljs.core._first.call(null, args__9691);
                          var args__9693 = cljs.core._rest.call(null, args__9691);
                          if(argc === 12) {
                            if(f__9680.cljs$lang$arity$12) {
                              return f__9680.cljs$lang$arity$12(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692)
                            }else {
                              return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692)
                            }
                          }else {
                            var m__9694 = cljs.core._first.call(null, args__9693);
                            var args__9695 = cljs.core._rest.call(null, args__9693);
                            if(argc === 13) {
                              if(f__9680.cljs$lang$arity$13) {
                                return f__9680.cljs$lang$arity$13(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694)
                              }else {
                                return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694)
                              }
                            }else {
                              var n__9696 = cljs.core._first.call(null, args__9695);
                              var args__9697 = cljs.core._rest.call(null, args__9695);
                              if(argc === 14) {
                                if(f__9680.cljs$lang$arity$14) {
                                  return f__9680.cljs$lang$arity$14(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696)
                                }else {
                                  return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696)
                                }
                              }else {
                                var o__9698 = cljs.core._first.call(null, args__9697);
                                var args__9699 = cljs.core._rest.call(null, args__9697);
                                if(argc === 15) {
                                  if(f__9680.cljs$lang$arity$15) {
                                    return f__9680.cljs$lang$arity$15(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698)
                                  }else {
                                    return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698)
                                  }
                                }else {
                                  var p__9700 = cljs.core._first.call(null, args__9699);
                                  var args__9701 = cljs.core._rest.call(null, args__9699);
                                  if(argc === 16) {
                                    if(f__9680.cljs$lang$arity$16) {
                                      return f__9680.cljs$lang$arity$16(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700)
                                    }else {
                                      return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700)
                                    }
                                  }else {
                                    var q__9702 = cljs.core._first.call(null, args__9701);
                                    var args__9703 = cljs.core._rest.call(null, args__9701);
                                    if(argc === 17) {
                                      if(f__9680.cljs$lang$arity$17) {
                                        return f__9680.cljs$lang$arity$17(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702)
                                      }else {
                                        return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702)
                                      }
                                    }else {
                                      var r__9704 = cljs.core._first.call(null, args__9703);
                                      var args__9705 = cljs.core._rest.call(null, args__9703);
                                      if(argc === 18) {
                                        if(f__9680.cljs$lang$arity$18) {
                                          return f__9680.cljs$lang$arity$18(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704)
                                        }else {
                                          return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704)
                                        }
                                      }else {
                                        var s__9706 = cljs.core._first.call(null, args__9705);
                                        var args__9707 = cljs.core._rest.call(null, args__9705);
                                        if(argc === 19) {
                                          if(f__9680.cljs$lang$arity$19) {
                                            return f__9680.cljs$lang$arity$19(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704, s__9706)
                                          }else {
                                            return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704, s__9706)
                                          }
                                        }else {
                                          var t__9708 = cljs.core._first.call(null, args__9707);
                                          var args__9709 = cljs.core._rest.call(null, args__9707);
                                          if(argc === 20) {
                                            if(f__9680.cljs$lang$arity$20) {
                                              return f__9680.cljs$lang$arity$20(a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704, s__9706, t__9708)
                                            }else {
                                              return f__9680.call(null, a__9670, b__9672, c__9674, d__9676, e__9678, f__9680, g__9682, h__9684, i__9686, j__9688, k__9690, l__9692, m__9694, n__9696, o__9698, p__9700, q__9702, r__9704, s__9706, t__9708)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__9724 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9725 = cljs.core.bounded_count.call(null, args, fixed_arity__9724 + 1);
      if(bc__9725 <= fixed_arity__9724) {
        return cljs.core.apply_to.call(null, f, bc__9725, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__9726 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__9727 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9728 = cljs.core.bounded_count.call(null, arglist__9726, fixed_arity__9727 + 1);
      if(bc__9728 <= fixed_arity__9727) {
        return cljs.core.apply_to.call(null, f, bc__9728, arglist__9726)
      }else {
        return f.cljs$lang$applyTo(arglist__9726)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9726))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__9729 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__9730 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9731 = cljs.core.bounded_count.call(null, arglist__9729, fixed_arity__9730 + 1);
      if(bc__9731 <= fixed_arity__9730) {
        return cljs.core.apply_to.call(null, f, bc__9731, arglist__9729)
      }else {
        return f.cljs$lang$applyTo(arglist__9729)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9729))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__9732 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__9733 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__9734 = cljs.core.bounded_count.call(null, arglist__9732, fixed_arity__9733 + 1);
      if(bc__9734 <= fixed_arity__9733) {
        return cljs.core.apply_to.call(null, f, bc__9734, arglist__9732)
      }else {
        return f.cljs$lang$applyTo(arglist__9732)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__9732))
    }
  };
  var apply__6 = function() {
    var G__9738__delegate = function(f, a, b, c, d, args) {
      var arglist__9735 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__9736 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__9737 = cljs.core.bounded_count.call(null, arglist__9735, fixed_arity__9736 + 1);
        if(bc__9737 <= fixed_arity__9736) {
          return cljs.core.apply_to.call(null, f, bc__9737, arglist__9735)
        }else {
          return f.cljs$lang$applyTo(arglist__9735)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__9735))
      }
    };
    var G__9738 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__9738__delegate.call(this, f, a, b, c, d, args)
    };
    G__9738.cljs$lang$maxFixedArity = 5;
    G__9738.cljs$lang$applyTo = function(arglist__9739) {
      var f = cljs.core.first(arglist__9739);
      var a = cljs.core.first(cljs.core.next(arglist__9739));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9739)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9739))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9739)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9739)))));
      return G__9738__delegate(f, a, b, c, d, args)
    };
    G__9738.cljs$lang$arity$variadic = G__9738__delegate;
    return G__9738
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__9740) {
    var obj = cljs.core.first(arglist__9740);
    var f = cljs.core.first(cljs.core.next(arglist__9740));
    var args = cljs.core.rest(cljs.core.next(arglist__9740));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__9741__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__9741 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__9741__delegate.call(this, x, y, more)
    };
    G__9741.cljs$lang$maxFixedArity = 2;
    G__9741.cljs$lang$applyTo = function(arglist__9742) {
      var x = cljs.core.first(arglist__9742);
      var y = cljs.core.first(cljs.core.next(arglist__9742));
      var more = cljs.core.rest(cljs.core.next(arglist__9742));
      return G__9741__delegate(x, y, more)
    };
    G__9741.cljs$lang$arity$variadic = G__9741__delegate;
    return G__9741
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__9743 = pred;
        var G__9744 = cljs.core.next.call(null, coll);
        pred = G__9743;
        coll = G__9744;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3824__auto____9746 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3824__auto____9746)) {
        return or__3824__auto____9746
      }else {
        var G__9747 = pred;
        var G__9748 = cljs.core.next.call(null, coll);
        pred = G__9747;
        coll = G__9748;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__9749 = null;
    var G__9749__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__9749__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__9749__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__9749__3 = function() {
      var G__9750__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__9750 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__9750__delegate.call(this, x, y, zs)
      };
      G__9750.cljs$lang$maxFixedArity = 2;
      G__9750.cljs$lang$applyTo = function(arglist__9751) {
        var x = cljs.core.first(arglist__9751);
        var y = cljs.core.first(cljs.core.next(arglist__9751));
        var zs = cljs.core.rest(cljs.core.next(arglist__9751));
        return G__9750__delegate(x, y, zs)
      };
      G__9750.cljs$lang$arity$variadic = G__9750__delegate;
      return G__9750
    }();
    G__9749 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__9749__0.call(this);
        case 1:
          return G__9749__1.call(this, x);
        case 2:
          return G__9749__2.call(this, x, y);
        default:
          return G__9749__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__9749.cljs$lang$maxFixedArity = 2;
    G__9749.cljs$lang$applyTo = G__9749__3.cljs$lang$applyTo;
    return G__9749
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__9752__delegate = function(args) {
      return x
    };
    var G__9752 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__9752__delegate.call(this, args)
    };
    G__9752.cljs$lang$maxFixedArity = 0;
    G__9752.cljs$lang$applyTo = function(arglist__9753) {
      var args = cljs.core.seq(arglist__9753);
      return G__9752__delegate(args)
    };
    G__9752.cljs$lang$arity$variadic = G__9752__delegate;
    return G__9752
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__9760 = null;
      var G__9760__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__9760__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__9760__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__9760__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__9760__4 = function() {
        var G__9761__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__9761 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9761__delegate.call(this, x, y, z, args)
        };
        G__9761.cljs$lang$maxFixedArity = 3;
        G__9761.cljs$lang$applyTo = function(arglist__9762) {
          var x = cljs.core.first(arglist__9762);
          var y = cljs.core.first(cljs.core.next(arglist__9762));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9762)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9762)));
          return G__9761__delegate(x, y, z, args)
        };
        G__9761.cljs$lang$arity$variadic = G__9761__delegate;
        return G__9761
      }();
      G__9760 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9760__0.call(this);
          case 1:
            return G__9760__1.call(this, x);
          case 2:
            return G__9760__2.call(this, x, y);
          case 3:
            return G__9760__3.call(this, x, y, z);
          default:
            return G__9760__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9760.cljs$lang$maxFixedArity = 3;
      G__9760.cljs$lang$applyTo = G__9760__4.cljs$lang$applyTo;
      return G__9760
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__9763 = null;
      var G__9763__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__9763__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__9763__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__9763__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__9763__4 = function() {
        var G__9764__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__9764 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9764__delegate.call(this, x, y, z, args)
        };
        G__9764.cljs$lang$maxFixedArity = 3;
        G__9764.cljs$lang$applyTo = function(arglist__9765) {
          var x = cljs.core.first(arglist__9765);
          var y = cljs.core.first(cljs.core.next(arglist__9765));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9765)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9765)));
          return G__9764__delegate(x, y, z, args)
        };
        G__9764.cljs$lang$arity$variadic = G__9764__delegate;
        return G__9764
      }();
      G__9763 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__9763__0.call(this);
          case 1:
            return G__9763__1.call(this, x);
          case 2:
            return G__9763__2.call(this, x, y);
          case 3:
            return G__9763__3.call(this, x, y, z);
          default:
            return G__9763__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9763.cljs$lang$maxFixedArity = 3;
      G__9763.cljs$lang$applyTo = G__9763__4.cljs$lang$applyTo;
      return G__9763
    }()
  };
  var comp__4 = function() {
    var G__9766__delegate = function(f1, f2, f3, fs) {
      var fs__9757 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__9767__delegate = function(args) {
          var ret__9758 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__9757), args);
          var fs__9759 = cljs.core.next.call(null, fs__9757);
          while(true) {
            if(fs__9759) {
              var G__9768 = cljs.core.first.call(null, fs__9759).call(null, ret__9758);
              var G__9769 = cljs.core.next.call(null, fs__9759);
              ret__9758 = G__9768;
              fs__9759 = G__9769;
              continue
            }else {
              return ret__9758
            }
            break
          }
        };
        var G__9767 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9767__delegate.call(this, args)
        };
        G__9767.cljs$lang$maxFixedArity = 0;
        G__9767.cljs$lang$applyTo = function(arglist__9770) {
          var args = cljs.core.seq(arglist__9770);
          return G__9767__delegate(args)
        };
        G__9767.cljs$lang$arity$variadic = G__9767__delegate;
        return G__9767
      }()
    };
    var G__9766 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__9766__delegate.call(this, f1, f2, f3, fs)
    };
    G__9766.cljs$lang$maxFixedArity = 3;
    G__9766.cljs$lang$applyTo = function(arglist__9771) {
      var f1 = cljs.core.first(arglist__9771);
      var f2 = cljs.core.first(cljs.core.next(arglist__9771));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9771)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9771)));
      return G__9766__delegate(f1, f2, f3, fs)
    };
    G__9766.cljs$lang$arity$variadic = G__9766__delegate;
    return G__9766
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__9772__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__9772 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9772__delegate.call(this, args)
      };
      G__9772.cljs$lang$maxFixedArity = 0;
      G__9772.cljs$lang$applyTo = function(arglist__9773) {
        var args = cljs.core.seq(arglist__9773);
        return G__9772__delegate(args)
      };
      G__9772.cljs$lang$arity$variadic = G__9772__delegate;
      return G__9772
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__9774__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__9774 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9774__delegate.call(this, args)
      };
      G__9774.cljs$lang$maxFixedArity = 0;
      G__9774.cljs$lang$applyTo = function(arglist__9775) {
        var args = cljs.core.seq(arglist__9775);
        return G__9774__delegate(args)
      };
      G__9774.cljs$lang$arity$variadic = G__9774__delegate;
      return G__9774
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__9776__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__9776 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__9776__delegate.call(this, args)
      };
      G__9776.cljs$lang$maxFixedArity = 0;
      G__9776.cljs$lang$applyTo = function(arglist__9777) {
        var args = cljs.core.seq(arglist__9777);
        return G__9776__delegate(args)
      };
      G__9776.cljs$lang$arity$variadic = G__9776__delegate;
      return G__9776
    }()
  };
  var partial__5 = function() {
    var G__9778__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__9779__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__9779 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__9779__delegate.call(this, args)
        };
        G__9779.cljs$lang$maxFixedArity = 0;
        G__9779.cljs$lang$applyTo = function(arglist__9780) {
          var args = cljs.core.seq(arglist__9780);
          return G__9779__delegate(args)
        };
        G__9779.cljs$lang$arity$variadic = G__9779__delegate;
        return G__9779
      }()
    };
    var G__9778 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__9778__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__9778.cljs$lang$maxFixedArity = 4;
    G__9778.cljs$lang$applyTo = function(arglist__9781) {
      var f = cljs.core.first(arglist__9781);
      var arg1 = cljs.core.first(cljs.core.next(arglist__9781));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9781)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9781))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__9781))));
      return G__9778__delegate(f, arg1, arg2, arg3, more)
    };
    G__9778.cljs$lang$arity$variadic = G__9778__delegate;
    return G__9778
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__9782 = null;
      var G__9782__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__9782__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__9782__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__9782__4 = function() {
        var G__9783__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__9783 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9783__delegate.call(this, a, b, c, ds)
        };
        G__9783.cljs$lang$maxFixedArity = 3;
        G__9783.cljs$lang$applyTo = function(arglist__9784) {
          var a = cljs.core.first(arglist__9784);
          var b = cljs.core.first(cljs.core.next(arglist__9784));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9784)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9784)));
          return G__9783__delegate(a, b, c, ds)
        };
        G__9783.cljs$lang$arity$variadic = G__9783__delegate;
        return G__9783
      }();
      G__9782 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__9782__1.call(this, a);
          case 2:
            return G__9782__2.call(this, a, b);
          case 3:
            return G__9782__3.call(this, a, b, c);
          default:
            return G__9782__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9782.cljs$lang$maxFixedArity = 3;
      G__9782.cljs$lang$applyTo = G__9782__4.cljs$lang$applyTo;
      return G__9782
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__9785 = null;
      var G__9785__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9785__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__9785__4 = function() {
        var G__9786__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__9786 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9786__delegate.call(this, a, b, c, ds)
        };
        G__9786.cljs$lang$maxFixedArity = 3;
        G__9786.cljs$lang$applyTo = function(arglist__9787) {
          var a = cljs.core.first(arglist__9787);
          var b = cljs.core.first(cljs.core.next(arglist__9787));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9787)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9787)));
          return G__9786__delegate(a, b, c, ds)
        };
        G__9786.cljs$lang$arity$variadic = G__9786__delegate;
        return G__9786
      }();
      G__9785 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9785__2.call(this, a, b);
          case 3:
            return G__9785__3.call(this, a, b, c);
          default:
            return G__9785__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9785.cljs$lang$maxFixedArity = 3;
      G__9785.cljs$lang$applyTo = G__9785__4.cljs$lang$applyTo;
      return G__9785
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__9788 = null;
      var G__9788__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__9788__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__9788__4 = function() {
        var G__9789__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__9789 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__9789__delegate.call(this, a, b, c, ds)
        };
        G__9789.cljs$lang$maxFixedArity = 3;
        G__9789.cljs$lang$applyTo = function(arglist__9790) {
          var a = cljs.core.first(arglist__9790);
          var b = cljs.core.first(cljs.core.next(arglist__9790));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__9790)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__9790)));
          return G__9789__delegate(a, b, c, ds)
        };
        G__9789.cljs$lang$arity$variadic = G__9789__delegate;
        return G__9789
      }();
      G__9788 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__9788__2.call(this, a, b);
          case 3:
            return G__9788__3.call(this, a, b, c);
          default:
            return G__9788__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__9788.cljs$lang$maxFixedArity = 3;
      G__9788.cljs$lang$applyTo = G__9788__4.cljs$lang$applyTo;
      return G__9788
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__9806 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9814 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9814) {
        var s__9815 = temp__3974__auto____9814;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9815)) {
          var c__9816 = cljs.core.chunk_first.call(null, s__9815);
          var size__9817 = cljs.core.count.call(null, c__9816);
          var b__9818 = cljs.core.chunk_buffer.call(null, size__9817);
          var n__2577__auto____9819 = size__9817;
          var i__9820 = 0;
          while(true) {
            if(i__9820 < n__2577__auto____9819) {
              cljs.core.chunk_append.call(null, b__9818, f.call(null, idx + i__9820, cljs.core._nth.call(null, c__9816, i__9820)));
              var G__9821 = i__9820 + 1;
              i__9820 = G__9821;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9818), mapi.call(null, idx + size__9817, cljs.core.chunk_rest.call(null, s__9815)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__9815)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__9815)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__9806.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____9831 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____9831) {
      var s__9832 = temp__3974__auto____9831;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__9832)) {
        var c__9833 = cljs.core.chunk_first.call(null, s__9832);
        var size__9834 = cljs.core.count.call(null, c__9833);
        var b__9835 = cljs.core.chunk_buffer.call(null, size__9834);
        var n__2577__auto____9836 = size__9834;
        var i__9837 = 0;
        while(true) {
          if(i__9837 < n__2577__auto____9836) {
            var x__9838 = f.call(null, cljs.core._nth.call(null, c__9833, i__9837));
            if(x__9838 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__9835, x__9838)
            }
            var G__9840 = i__9837 + 1;
            i__9837 = G__9840;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9835), keep.call(null, f, cljs.core.chunk_rest.call(null, s__9832)))
      }else {
        var x__9839 = f.call(null, cljs.core.first.call(null, s__9832));
        if(x__9839 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__9832))
        }else {
          return cljs.core.cons.call(null, x__9839, keep.call(null, f, cljs.core.rest.call(null, s__9832)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__9866 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____9876 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____9876) {
        var s__9877 = temp__3974__auto____9876;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__9877)) {
          var c__9878 = cljs.core.chunk_first.call(null, s__9877);
          var size__9879 = cljs.core.count.call(null, c__9878);
          var b__9880 = cljs.core.chunk_buffer.call(null, size__9879);
          var n__2577__auto____9881 = size__9879;
          var i__9882 = 0;
          while(true) {
            if(i__9882 < n__2577__auto____9881) {
              var x__9883 = f.call(null, idx + i__9882, cljs.core._nth.call(null, c__9878, i__9882));
              if(x__9883 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__9880, x__9883)
              }
              var G__9885 = i__9882 + 1;
              i__9882 = G__9885;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__9880), keepi.call(null, idx + size__9879, cljs.core.chunk_rest.call(null, s__9877)))
        }else {
          var x__9884 = f.call(null, idx, cljs.core.first.call(null, s__9877));
          if(x__9884 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9877))
          }else {
            return cljs.core.cons.call(null, x__9884, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__9877)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__9866.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9971 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9971)) {
            return p.call(null, y)
          }else {
            return and__3822__auto____9971
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9972 = p.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9972)) {
            var and__3822__auto____9973 = p.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9973)) {
              return p.call(null, z)
            }else {
              return and__3822__auto____9973
            }
          }else {
            return and__3822__auto____9972
          }
        }())
      };
      var ep1__4 = function() {
        var G__10042__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9974 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9974)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3822__auto____9974
            }
          }())
        };
        var G__10042 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10042__delegate.call(this, x, y, z, args)
        };
        G__10042.cljs$lang$maxFixedArity = 3;
        G__10042.cljs$lang$applyTo = function(arglist__10043) {
          var x = cljs.core.first(arglist__10043);
          var y = cljs.core.first(cljs.core.next(arglist__10043));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10043)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10043)));
          return G__10042__delegate(x, y, z, args)
        };
        G__10042.cljs$lang$arity$variadic = G__10042__delegate;
        return G__10042
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9986 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9986)) {
            return p2.call(null, x)
          }else {
            return and__3822__auto____9986
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9987 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9987)) {
            var and__3822__auto____9988 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9988)) {
              var and__3822__auto____9989 = p2.call(null, x);
              if(cljs.core.truth_(and__3822__auto____9989)) {
                return p2.call(null, y)
              }else {
                return and__3822__auto____9989
              }
            }else {
              return and__3822__auto____9988
            }
          }else {
            return and__3822__auto____9987
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____9990 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____9990)) {
            var and__3822__auto____9991 = p1.call(null, y);
            if(cljs.core.truth_(and__3822__auto____9991)) {
              var and__3822__auto____9992 = p1.call(null, z);
              if(cljs.core.truth_(and__3822__auto____9992)) {
                var and__3822__auto____9993 = p2.call(null, x);
                if(cljs.core.truth_(and__3822__auto____9993)) {
                  var and__3822__auto____9994 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____9994)) {
                    return p2.call(null, z)
                  }else {
                    return and__3822__auto____9994
                  }
                }else {
                  return and__3822__auto____9993
                }
              }else {
                return and__3822__auto____9992
              }
            }else {
              return and__3822__auto____9991
            }
          }else {
            return and__3822__auto____9990
          }
        }())
      };
      var ep2__4 = function() {
        var G__10044__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____9995 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____9995)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9841_SHARP_) {
                var and__3822__auto____9996 = p1.call(null, p1__9841_SHARP_);
                if(cljs.core.truth_(and__3822__auto____9996)) {
                  return p2.call(null, p1__9841_SHARP_)
                }else {
                  return and__3822__auto____9996
                }
              }, args)
            }else {
              return and__3822__auto____9995
            }
          }())
        };
        var G__10044 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10044__delegate.call(this, x, y, z, args)
        };
        G__10044.cljs$lang$maxFixedArity = 3;
        G__10044.cljs$lang$applyTo = function(arglist__10045) {
          var x = cljs.core.first(arglist__10045);
          var y = cljs.core.first(cljs.core.next(arglist__10045));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10045)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10045)));
          return G__10044__delegate(x, y, z, args)
        };
        G__10044.cljs$lang$arity$variadic = G__10044__delegate;
        return G__10044
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10015 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10015)) {
            var and__3822__auto____10016 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10016)) {
              return p3.call(null, x)
            }else {
              return and__3822__auto____10016
            }
          }else {
            return and__3822__auto____10015
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10017 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10017)) {
            var and__3822__auto____10018 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10018)) {
              var and__3822__auto____10019 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10019)) {
                var and__3822__auto____10020 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10020)) {
                  var and__3822__auto____10021 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10021)) {
                    return p3.call(null, y)
                  }else {
                    return and__3822__auto____10021
                  }
                }else {
                  return and__3822__auto____10020
                }
              }else {
                return and__3822__auto____10019
              }
            }else {
              return and__3822__auto____10018
            }
          }else {
            return and__3822__auto____10017
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3822__auto____10022 = p1.call(null, x);
          if(cljs.core.truth_(and__3822__auto____10022)) {
            var and__3822__auto____10023 = p2.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10023)) {
              var and__3822__auto____10024 = p3.call(null, x);
              if(cljs.core.truth_(and__3822__auto____10024)) {
                var and__3822__auto____10025 = p1.call(null, y);
                if(cljs.core.truth_(and__3822__auto____10025)) {
                  var and__3822__auto____10026 = p2.call(null, y);
                  if(cljs.core.truth_(and__3822__auto____10026)) {
                    var and__3822__auto____10027 = p3.call(null, y);
                    if(cljs.core.truth_(and__3822__auto____10027)) {
                      var and__3822__auto____10028 = p1.call(null, z);
                      if(cljs.core.truth_(and__3822__auto____10028)) {
                        var and__3822__auto____10029 = p2.call(null, z);
                        if(cljs.core.truth_(and__3822__auto____10029)) {
                          return p3.call(null, z)
                        }else {
                          return and__3822__auto____10029
                        }
                      }else {
                        return and__3822__auto____10028
                      }
                    }else {
                      return and__3822__auto____10027
                    }
                  }else {
                    return and__3822__auto____10026
                  }
                }else {
                  return and__3822__auto____10025
                }
              }else {
                return and__3822__auto____10024
              }
            }else {
              return and__3822__auto____10023
            }
          }else {
            return and__3822__auto____10022
          }
        }())
      };
      var ep3__4 = function() {
        var G__10046__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3822__auto____10030 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3822__auto____10030)) {
              return cljs.core.every_QMARK_.call(null, function(p1__9842_SHARP_) {
                var and__3822__auto____10031 = p1.call(null, p1__9842_SHARP_);
                if(cljs.core.truth_(and__3822__auto____10031)) {
                  var and__3822__auto____10032 = p2.call(null, p1__9842_SHARP_);
                  if(cljs.core.truth_(and__3822__auto____10032)) {
                    return p3.call(null, p1__9842_SHARP_)
                  }else {
                    return and__3822__auto____10032
                  }
                }else {
                  return and__3822__auto____10031
                }
              }, args)
            }else {
              return and__3822__auto____10030
            }
          }())
        };
        var G__10046 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10046__delegate.call(this, x, y, z, args)
        };
        G__10046.cljs$lang$maxFixedArity = 3;
        G__10046.cljs$lang$applyTo = function(arglist__10047) {
          var x = cljs.core.first(arglist__10047);
          var y = cljs.core.first(cljs.core.next(arglist__10047));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10047)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10047)));
          return G__10046__delegate(x, y, z, args)
        };
        G__10046.cljs$lang$arity$variadic = G__10046__delegate;
        return G__10046
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__10048__delegate = function(p1, p2, p3, ps) {
      var ps__10033 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__9843_SHARP_) {
            return p1__9843_SHARP_.call(null, x)
          }, ps__10033)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__9844_SHARP_) {
            var and__3822__auto____10038 = p1__9844_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10038)) {
              return p1__9844_SHARP_.call(null, y)
            }else {
              return and__3822__auto____10038
            }
          }, ps__10033)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__9845_SHARP_) {
            var and__3822__auto____10039 = p1__9845_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3822__auto____10039)) {
              var and__3822__auto____10040 = p1__9845_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3822__auto____10040)) {
                return p1__9845_SHARP_.call(null, z)
              }else {
                return and__3822__auto____10040
              }
            }else {
              return and__3822__auto____10039
            }
          }, ps__10033)
        };
        var epn__4 = function() {
          var G__10049__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3822__auto____10041 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3822__auto____10041)) {
                return cljs.core.every_QMARK_.call(null, function(p1__9846_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__9846_SHARP_, args)
                }, ps__10033)
              }else {
                return and__3822__auto____10041
              }
            }())
          };
          var G__10049 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10049__delegate.call(this, x, y, z, args)
          };
          G__10049.cljs$lang$maxFixedArity = 3;
          G__10049.cljs$lang$applyTo = function(arglist__10050) {
            var x = cljs.core.first(arglist__10050);
            var y = cljs.core.first(cljs.core.next(arglist__10050));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10050)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10050)));
            return G__10049__delegate(x, y, z, args)
          };
          G__10049.cljs$lang$arity$variadic = G__10049__delegate;
          return G__10049
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__10048 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10048__delegate.call(this, p1, p2, p3, ps)
    };
    G__10048.cljs$lang$maxFixedArity = 3;
    G__10048.cljs$lang$applyTo = function(arglist__10051) {
      var p1 = cljs.core.first(arglist__10051);
      var p2 = cljs.core.first(cljs.core.next(arglist__10051));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10051)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10051)));
      return G__10048__delegate(p1, p2, p3, ps)
    };
    G__10048.cljs$lang$arity$variadic = G__10048__delegate;
    return G__10048
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3824__auto____10132 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10132)) {
          return or__3824__auto____10132
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3824__auto____10133 = p.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10133)) {
          return or__3824__auto____10133
        }else {
          var or__3824__auto____10134 = p.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10134)) {
            return or__3824__auto____10134
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__10203__delegate = function(x, y, z, args) {
          var or__3824__auto____10135 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10135)) {
            return or__3824__auto____10135
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__10203 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10203__delegate.call(this, x, y, z, args)
        };
        G__10203.cljs$lang$maxFixedArity = 3;
        G__10203.cljs$lang$applyTo = function(arglist__10204) {
          var x = cljs.core.first(arglist__10204);
          var y = cljs.core.first(cljs.core.next(arglist__10204));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10204)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10204)));
          return G__10203__delegate(x, y, z, args)
        };
        G__10203.cljs$lang$arity$variadic = G__10203__delegate;
        return G__10203
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3824__auto____10147 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10147)) {
          return or__3824__auto____10147
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3824__auto____10148 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10148)) {
          return or__3824__auto____10148
        }else {
          var or__3824__auto____10149 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10149)) {
            return or__3824__auto____10149
          }else {
            var or__3824__auto____10150 = p2.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10150)) {
              return or__3824__auto____10150
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3824__auto____10151 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10151)) {
          return or__3824__auto____10151
        }else {
          var or__3824__auto____10152 = p1.call(null, y);
          if(cljs.core.truth_(or__3824__auto____10152)) {
            return or__3824__auto____10152
          }else {
            var or__3824__auto____10153 = p1.call(null, z);
            if(cljs.core.truth_(or__3824__auto____10153)) {
              return or__3824__auto____10153
            }else {
              var or__3824__auto____10154 = p2.call(null, x);
              if(cljs.core.truth_(or__3824__auto____10154)) {
                return or__3824__auto____10154
              }else {
                var or__3824__auto____10155 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10155)) {
                  return or__3824__auto____10155
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__10205__delegate = function(x, y, z, args) {
          var or__3824__auto____10156 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10156)) {
            return or__3824__auto____10156
          }else {
            return cljs.core.some.call(null, function(p1__9886_SHARP_) {
              var or__3824__auto____10157 = p1.call(null, p1__9886_SHARP_);
              if(cljs.core.truth_(or__3824__auto____10157)) {
                return or__3824__auto____10157
              }else {
                return p2.call(null, p1__9886_SHARP_)
              }
            }, args)
          }
        };
        var G__10205 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10205__delegate.call(this, x, y, z, args)
        };
        G__10205.cljs$lang$maxFixedArity = 3;
        G__10205.cljs$lang$applyTo = function(arglist__10206) {
          var x = cljs.core.first(arglist__10206);
          var y = cljs.core.first(cljs.core.next(arglist__10206));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10206)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10206)));
          return G__10205__delegate(x, y, z, args)
        };
        G__10205.cljs$lang$arity$variadic = G__10205__delegate;
        return G__10205
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3824__auto____10176 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10176)) {
          return or__3824__auto____10176
        }else {
          var or__3824__auto____10177 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10177)) {
            return or__3824__auto____10177
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3824__auto____10178 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10178)) {
          return or__3824__auto____10178
        }else {
          var or__3824__auto____10179 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10179)) {
            return or__3824__auto____10179
          }else {
            var or__3824__auto____10180 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10180)) {
              return or__3824__auto____10180
            }else {
              var or__3824__auto____10181 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10181)) {
                return or__3824__auto____10181
              }else {
                var or__3824__auto____10182 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10182)) {
                  return or__3824__auto____10182
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3824__auto____10183 = p1.call(null, x);
        if(cljs.core.truth_(or__3824__auto____10183)) {
          return or__3824__auto____10183
        }else {
          var or__3824__auto____10184 = p2.call(null, x);
          if(cljs.core.truth_(or__3824__auto____10184)) {
            return or__3824__auto____10184
          }else {
            var or__3824__auto____10185 = p3.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10185)) {
              return or__3824__auto____10185
            }else {
              var or__3824__auto____10186 = p1.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10186)) {
                return or__3824__auto____10186
              }else {
                var or__3824__auto____10187 = p2.call(null, y);
                if(cljs.core.truth_(or__3824__auto____10187)) {
                  return or__3824__auto____10187
                }else {
                  var or__3824__auto____10188 = p3.call(null, y);
                  if(cljs.core.truth_(or__3824__auto____10188)) {
                    return or__3824__auto____10188
                  }else {
                    var or__3824__auto____10189 = p1.call(null, z);
                    if(cljs.core.truth_(or__3824__auto____10189)) {
                      return or__3824__auto____10189
                    }else {
                      var or__3824__auto____10190 = p2.call(null, z);
                      if(cljs.core.truth_(or__3824__auto____10190)) {
                        return or__3824__auto____10190
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__10207__delegate = function(x, y, z, args) {
          var or__3824__auto____10191 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3824__auto____10191)) {
            return or__3824__auto____10191
          }else {
            return cljs.core.some.call(null, function(p1__9887_SHARP_) {
              var or__3824__auto____10192 = p1.call(null, p1__9887_SHARP_);
              if(cljs.core.truth_(or__3824__auto____10192)) {
                return or__3824__auto____10192
              }else {
                var or__3824__auto____10193 = p2.call(null, p1__9887_SHARP_);
                if(cljs.core.truth_(or__3824__auto____10193)) {
                  return or__3824__auto____10193
                }else {
                  return p3.call(null, p1__9887_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__10207 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__10207__delegate.call(this, x, y, z, args)
        };
        G__10207.cljs$lang$maxFixedArity = 3;
        G__10207.cljs$lang$applyTo = function(arglist__10208) {
          var x = cljs.core.first(arglist__10208);
          var y = cljs.core.first(cljs.core.next(arglist__10208));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10208)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10208)));
          return G__10207__delegate(x, y, z, args)
        };
        G__10207.cljs$lang$arity$variadic = G__10207__delegate;
        return G__10207
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__10209__delegate = function(p1, p2, p3, ps) {
      var ps__10194 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__9888_SHARP_) {
            return p1__9888_SHARP_.call(null, x)
          }, ps__10194)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__9889_SHARP_) {
            var or__3824__auto____10199 = p1__9889_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10199)) {
              return or__3824__auto____10199
            }else {
              return p1__9889_SHARP_.call(null, y)
            }
          }, ps__10194)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__9890_SHARP_) {
            var or__3824__auto____10200 = p1__9890_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3824__auto____10200)) {
              return or__3824__auto____10200
            }else {
              var or__3824__auto____10201 = p1__9890_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3824__auto____10201)) {
                return or__3824__auto____10201
              }else {
                return p1__9890_SHARP_.call(null, z)
              }
            }
          }, ps__10194)
        };
        var spn__4 = function() {
          var G__10210__delegate = function(x, y, z, args) {
            var or__3824__auto____10202 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3824__auto____10202)) {
              return or__3824__auto____10202
            }else {
              return cljs.core.some.call(null, function(p1__9891_SHARP_) {
                return cljs.core.some.call(null, p1__9891_SHARP_, args)
              }, ps__10194)
            }
          };
          var G__10210 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__10210__delegate.call(this, x, y, z, args)
          };
          G__10210.cljs$lang$maxFixedArity = 3;
          G__10210.cljs$lang$applyTo = function(arglist__10211) {
            var x = cljs.core.first(arglist__10211);
            var y = cljs.core.first(cljs.core.next(arglist__10211));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10211)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10211)));
            return G__10210__delegate(x, y, z, args)
          };
          G__10210.cljs$lang$arity$variadic = G__10210__delegate;
          return G__10210
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__10209 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__10209__delegate.call(this, p1, p2, p3, ps)
    };
    G__10209.cljs$lang$maxFixedArity = 3;
    G__10209.cljs$lang$applyTo = function(arglist__10212) {
      var p1 = cljs.core.first(arglist__10212);
      var p2 = cljs.core.first(cljs.core.next(arglist__10212));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10212)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10212)));
      return G__10209__delegate(p1, p2, p3, ps)
    };
    G__10209.cljs$lang$arity$variadic = G__10209__delegate;
    return G__10209
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10231 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10231) {
        var s__10232 = temp__3974__auto____10231;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__10232)) {
          var c__10233 = cljs.core.chunk_first.call(null, s__10232);
          var size__10234 = cljs.core.count.call(null, c__10233);
          var b__10235 = cljs.core.chunk_buffer.call(null, size__10234);
          var n__2577__auto____10236 = size__10234;
          var i__10237 = 0;
          while(true) {
            if(i__10237 < n__2577__auto____10236) {
              cljs.core.chunk_append.call(null, b__10235, f.call(null, cljs.core._nth.call(null, c__10233, i__10237)));
              var G__10249 = i__10237 + 1;
              i__10237 = G__10249;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10235), map.call(null, f, cljs.core.chunk_rest.call(null, s__10232)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__10232)), map.call(null, f, cljs.core.rest.call(null, s__10232)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10238 = cljs.core.seq.call(null, c1);
      var s2__10239 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____10240 = s1__10238;
        if(and__3822__auto____10240) {
          return s2__10239
        }else {
          return and__3822__auto____10240
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__10238), cljs.core.first.call(null, s2__10239)), map.call(null, f, cljs.core.rest.call(null, s1__10238), cljs.core.rest.call(null, s2__10239)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10241 = cljs.core.seq.call(null, c1);
      var s2__10242 = cljs.core.seq.call(null, c2);
      var s3__10243 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3822__auto____10244 = s1__10241;
        if(and__3822__auto____10244) {
          var and__3822__auto____10245 = s2__10242;
          if(and__3822__auto____10245) {
            return s3__10243
          }else {
            return and__3822__auto____10245
          }
        }else {
          return and__3822__auto____10244
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__10241), cljs.core.first.call(null, s2__10242), cljs.core.first.call(null, s3__10243)), map.call(null, f, cljs.core.rest.call(null, s1__10241), cljs.core.rest.call(null, s2__10242), cljs.core.rest.call(null, s3__10243)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__10250__delegate = function(f, c1, c2, c3, colls) {
      var step__10248 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__10247 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__10247)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__10247), step.call(null, map.call(null, cljs.core.rest, ss__10247)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__10052_SHARP_) {
        return cljs.core.apply.call(null, f, p1__10052_SHARP_)
      }, step__10248.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__10250 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10250__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10250.cljs$lang$maxFixedArity = 4;
    G__10250.cljs$lang$applyTo = function(arglist__10251) {
      var f = cljs.core.first(arglist__10251);
      var c1 = cljs.core.first(cljs.core.next(arglist__10251));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10251)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10251))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10251))));
      return G__10250__delegate(f, c1, c2, c3, colls)
    };
    G__10250.cljs$lang$arity$variadic = G__10250__delegate;
    return G__10250
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__3974__auto____10254 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10254) {
        var s__10255 = temp__3974__auto____10254;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__10255), take.call(null, n - 1, cljs.core.rest.call(null, s__10255)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__10261 = function(n, coll) {
    while(true) {
      var s__10259 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____10260 = n > 0;
        if(and__3822__auto____10260) {
          return s__10259
        }else {
          return and__3822__auto____10260
        }
      }())) {
        var G__10262 = n - 1;
        var G__10263 = cljs.core.rest.call(null, s__10259);
        n = G__10262;
        coll = G__10263;
        continue
      }else {
        return s__10259
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__10261.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__10266 = cljs.core.seq.call(null, coll);
  var lead__10267 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__10267) {
      var G__10268 = cljs.core.next.call(null, s__10266);
      var G__10269 = cljs.core.next.call(null, lead__10267);
      s__10266 = G__10268;
      lead__10267 = G__10269;
      continue
    }else {
      return s__10266
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__10275 = function(pred, coll) {
    while(true) {
      var s__10273 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3822__auto____10274 = s__10273;
        if(and__3822__auto____10274) {
          return pred.call(null, cljs.core.first.call(null, s__10273))
        }else {
          return and__3822__auto____10274
        }
      }())) {
        var G__10276 = pred;
        var G__10277 = cljs.core.rest.call(null, s__10273);
        pred = G__10276;
        coll = G__10277;
        continue
      }else {
        return s__10273
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__10275.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10280 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10280) {
      var s__10281 = temp__3974__auto____10280;
      return cljs.core.concat.call(null, s__10281, cycle.call(null, s__10281))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__10286 = cljs.core.seq.call(null, c1);
      var s2__10287 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3822__auto____10288 = s1__10286;
        if(and__3822__auto____10288) {
          return s2__10287
        }else {
          return and__3822__auto____10288
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__10286), cljs.core.cons.call(null, cljs.core.first.call(null, s2__10287), interleave.call(null, cljs.core.rest.call(null, s1__10286), cljs.core.rest.call(null, s2__10287))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__10290__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__10289 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__10289)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__10289), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__10289)))
        }else {
          return null
        }
      }, null)
    };
    var G__10290 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10290__delegate.call(this, c1, c2, colls)
    };
    G__10290.cljs$lang$maxFixedArity = 2;
    G__10290.cljs$lang$applyTo = function(arglist__10291) {
      var c1 = cljs.core.first(arglist__10291);
      var c2 = cljs.core.first(cljs.core.next(arglist__10291));
      var colls = cljs.core.rest(cljs.core.next(arglist__10291));
      return G__10290__delegate(c1, c2, colls)
    };
    G__10290.cljs$lang$arity$variadic = G__10290__delegate;
    return G__10290
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__10301 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____10299 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____10299) {
        var coll__10300 = temp__3971__auto____10299;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__10300), cat.call(null, cljs.core.rest.call(null, coll__10300), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__10301.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__10302__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__10302 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__10302__delegate.call(this, f, coll, colls)
    };
    G__10302.cljs$lang$maxFixedArity = 2;
    G__10302.cljs$lang$applyTo = function(arglist__10303) {
      var f = cljs.core.first(arglist__10303);
      var coll = cljs.core.first(cljs.core.next(arglist__10303));
      var colls = cljs.core.rest(cljs.core.next(arglist__10303));
      return G__10302__delegate(f, coll, colls)
    };
    G__10302.cljs$lang$arity$variadic = G__10302__delegate;
    return G__10302
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____10313 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____10313) {
      var s__10314 = temp__3974__auto____10313;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__10314)) {
        var c__10315 = cljs.core.chunk_first.call(null, s__10314);
        var size__10316 = cljs.core.count.call(null, c__10315);
        var b__10317 = cljs.core.chunk_buffer.call(null, size__10316);
        var n__2577__auto____10318 = size__10316;
        var i__10319 = 0;
        while(true) {
          if(i__10319 < n__2577__auto____10318) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__10315, i__10319)))) {
              cljs.core.chunk_append.call(null, b__10317, cljs.core._nth.call(null, c__10315, i__10319))
            }else {
            }
            var G__10322 = i__10319 + 1;
            i__10319 = G__10322;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__10317), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__10314)))
      }else {
        var f__10320 = cljs.core.first.call(null, s__10314);
        var r__10321 = cljs.core.rest.call(null, s__10314);
        if(cljs.core.truth_(pred.call(null, f__10320))) {
          return cljs.core.cons.call(null, f__10320, filter.call(null, pred, r__10321))
        }else {
          return filter.call(null, pred, r__10321)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__10325 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__10325.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__10323_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__10323_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__10329__10330 = to;
    if(G__10329__10330) {
      if(function() {
        var or__3824__auto____10331 = G__10329__10330.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3824__auto____10331) {
          return or__3824__auto____10331
        }else {
          return G__10329__10330.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__10329__10330.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10329__10330)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__10329__10330)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__10332__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__10332 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__10332__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__10332.cljs$lang$maxFixedArity = 4;
    G__10332.cljs$lang$applyTo = function(arglist__10333) {
      var f = cljs.core.first(arglist__10333);
      var c1 = cljs.core.first(cljs.core.next(arglist__10333));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10333)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10333))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__10333))));
      return G__10332__delegate(f, c1, c2, c3, colls)
    };
    G__10332.cljs$lang$arity$variadic = G__10332__delegate;
    return G__10332
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10340 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10340) {
        var s__10341 = temp__3974__auto____10340;
        var p__10342 = cljs.core.take.call(null, n, s__10341);
        if(n === cljs.core.count.call(null, p__10342)) {
          return cljs.core.cons.call(null, p__10342, partition.call(null, n, step, cljs.core.drop.call(null, step, s__10341)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____10343 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____10343) {
        var s__10344 = temp__3974__auto____10343;
        var p__10345 = cljs.core.take.call(null, n, s__10344);
        if(n === cljs.core.count.call(null, p__10345)) {
          return cljs.core.cons.call(null, p__10345, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__10344)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__10345, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__10350 = cljs.core.lookup_sentinel;
    var m__10351 = m;
    var ks__10352 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__10352) {
        var m__10353 = cljs.core._lookup.call(null, m__10351, cljs.core.first.call(null, ks__10352), sentinel__10350);
        if(sentinel__10350 === m__10353) {
          return not_found
        }else {
          var G__10354 = sentinel__10350;
          var G__10355 = m__10353;
          var G__10356 = cljs.core.next.call(null, ks__10352);
          sentinel__10350 = G__10354;
          m__10351 = G__10355;
          ks__10352 = G__10356;
          continue
        }
      }else {
        return m__10351
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__10357, v) {
  var vec__10362__10363 = p__10357;
  var k__10364 = cljs.core.nth.call(null, vec__10362__10363, 0, null);
  var ks__10365 = cljs.core.nthnext.call(null, vec__10362__10363, 1);
  if(cljs.core.truth_(ks__10365)) {
    return cljs.core.assoc.call(null, m, k__10364, assoc_in.call(null, cljs.core._lookup.call(null, m, k__10364, null), ks__10365, v))
  }else {
    return cljs.core.assoc.call(null, m, k__10364, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__10366, f, args) {
    var vec__10371__10372 = p__10366;
    var k__10373 = cljs.core.nth.call(null, vec__10371__10372, 0, null);
    var ks__10374 = cljs.core.nthnext.call(null, vec__10371__10372, 1);
    if(cljs.core.truth_(ks__10374)) {
      return cljs.core.assoc.call(null, m, k__10373, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__10373, null), ks__10374, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__10373, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__10373, null), args))
    }
  };
  var update_in = function(m, p__10366, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__10366, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__10375) {
    var m = cljs.core.first(arglist__10375);
    var p__10366 = cljs.core.first(cljs.core.next(arglist__10375));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__10375)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__10375)));
    return update_in__delegate(m, p__10366, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10378 = this;
  var h__2242__auto____10379 = this__10378.__hash;
  if(!(h__2242__auto____10379 == null)) {
    return h__2242__auto____10379
  }else {
    var h__2242__auto____10380 = cljs.core.hash_coll.call(null, coll);
    this__10378.__hash = h__2242__auto____10380;
    return h__2242__auto____10380
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10381 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10382 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10383 = this;
  var new_array__10384 = this__10383.array.slice();
  new_array__10384[k] = v;
  return new cljs.core.Vector(this__10383.meta, new_array__10384, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__10415 = null;
  var G__10415__2 = function(this_sym10385, k) {
    var this__10387 = this;
    var this_sym10385__10388 = this;
    var coll__10389 = this_sym10385__10388;
    return coll__10389.cljs$core$ILookup$_lookup$arity$2(coll__10389, k)
  };
  var G__10415__3 = function(this_sym10386, k, not_found) {
    var this__10387 = this;
    var this_sym10386__10390 = this;
    var coll__10391 = this_sym10386__10390;
    return coll__10391.cljs$core$ILookup$_lookup$arity$3(coll__10391, k, not_found)
  };
  G__10415 = function(this_sym10386, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10415__2.call(this, this_sym10386, k);
      case 3:
        return G__10415__3.call(this, this_sym10386, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10415
}();
cljs.core.Vector.prototype.apply = function(this_sym10376, args10377) {
  var this__10392 = this;
  return this_sym10376.call.apply(this_sym10376, [this_sym10376].concat(args10377.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10393 = this;
  var new_array__10394 = this__10393.array.slice();
  new_array__10394.push(o);
  return new cljs.core.Vector(this__10393.meta, new_array__10394, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__10395 = this;
  var this__10396 = this;
  return cljs.core.pr_str.call(null, this__10396)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10397 = this;
  return cljs.core.ci_reduce.call(null, this__10397.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10398 = this;
  return cljs.core.ci_reduce.call(null, this__10398.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10399 = this;
  if(this__10399.array.length > 0) {
    var vector_seq__10400 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__10399.array.length) {
          return cljs.core.cons.call(null, this__10399.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__10400.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10401 = this;
  return this__10401.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10402 = this;
  var count__10403 = this__10402.array.length;
  if(count__10403 > 0) {
    return this__10402.array[count__10403 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10404 = this;
  if(this__10404.array.length > 0) {
    var new_array__10405 = this__10404.array.slice();
    new_array__10405.pop();
    return new cljs.core.Vector(this__10404.meta, new_array__10405, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10406 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10407 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10408 = this;
  return new cljs.core.Vector(meta, this__10408.array, this__10408.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10409 = this;
  return this__10409.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10410 = this;
  if(function() {
    var and__3822__auto____10411 = 0 <= n;
    if(and__3822__auto____10411) {
      return n < this__10410.array.length
    }else {
      return and__3822__auto____10411
    }
  }()) {
    return this__10410.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10412 = this;
  if(function() {
    var and__3822__auto____10413 = 0 <= n;
    if(and__3822__auto____10413) {
      return n < this__10412.array.length
    }else {
      return and__3822__auto____10413
    }
  }()) {
    return this__10412.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10414 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10414.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2360__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__10417 = pv.cnt;
  if(cnt__10417 < 32) {
    return 0
  }else {
    return cnt__10417 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__10423 = level;
  var ret__10424 = node;
  while(true) {
    if(ll__10423 === 0) {
      return ret__10424
    }else {
      var embed__10425 = ret__10424;
      var r__10426 = cljs.core.pv_fresh_node.call(null, edit);
      var ___10427 = cljs.core.pv_aset.call(null, r__10426, 0, embed__10425);
      var G__10428 = ll__10423 - 5;
      var G__10429 = r__10426;
      ll__10423 = G__10428;
      ret__10424 = G__10429;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__10435 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__10436 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__10435, subidx__10436, tailnode);
    return ret__10435
  }else {
    var child__10437 = cljs.core.pv_aget.call(null, parent, subidx__10436);
    if(!(child__10437 == null)) {
      var node_to_insert__10438 = push_tail.call(null, pv, level - 5, child__10437, tailnode);
      cljs.core.pv_aset.call(null, ret__10435, subidx__10436, node_to_insert__10438);
      return ret__10435
    }else {
      var node_to_insert__10439 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__10435, subidx__10436, node_to_insert__10439);
      return ret__10435
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3822__auto____10443 = 0 <= i;
    if(and__3822__auto____10443) {
      return i < pv.cnt
    }else {
      return and__3822__auto____10443
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__10444 = pv.root;
      var level__10445 = pv.shift;
      while(true) {
        if(level__10445 > 0) {
          var G__10446 = cljs.core.pv_aget.call(null, node__10444, i >>> level__10445 & 31);
          var G__10447 = level__10445 - 5;
          node__10444 = G__10446;
          level__10445 = G__10447;
          continue
        }else {
          return node__10444.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__10450 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__10450, i & 31, val);
    return ret__10450
  }else {
    var subidx__10451 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__10450, subidx__10451, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10451), i, val));
    return ret__10450
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__10457 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10458 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__10457));
    if(function() {
      var and__3822__auto____10459 = new_child__10458 == null;
      if(and__3822__auto____10459) {
        return subidx__10457 === 0
      }else {
        return and__3822__auto____10459
      }
    }()) {
      return null
    }else {
      var ret__10460 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__10460, subidx__10457, new_child__10458);
      return ret__10460
    }
  }else {
    if(subidx__10457 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__10461 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__10461, subidx__10457, null);
        return ret__10461
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10464 = this;
  return new cljs.core.TransientVector(this__10464.cnt, this__10464.shift, cljs.core.tv_editable_root.call(null, this__10464.root), cljs.core.tv_editable_tail.call(null, this__10464.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10465 = this;
  var h__2242__auto____10466 = this__10465.__hash;
  if(!(h__2242__auto____10466 == null)) {
    return h__2242__auto____10466
  }else {
    var h__2242__auto____10467 = cljs.core.hash_coll.call(null, coll);
    this__10465.__hash = h__2242__auto____10467;
    return h__2242__auto____10467
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10468 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10469 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10470 = this;
  if(function() {
    var and__3822__auto____10471 = 0 <= k;
    if(and__3822__auto____10471) {
      return k < this__10470.cnt
    }else {
      return and__3822__auto____10471
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__10472 = this__10470.tail.slice();
      new_tail__10472[k & 31] = v;
      return new cljs.core.PersistentVector(this__10470.meta, this__10470.cnt, this__10470.shift, this__10470.root, new_tail__10472, null)
    }else {
      return new cljs.core.PersistentVector(this__10470.meta, this__10470.cnt, this__10470.shift, cljs.core.do_assoc.call(null, coll, this__10470.shift, this__10470.root, k, v), this__10470.tail, null)
    }
  }else {
    if(k === this__10470.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__10470.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10520 = null;
  var G__10520__2 = function(this_sym10473, k) {
    var this__10475 = this;
    var this_sym10473__10476 = this;
    var coll__10477 = this_sym10473__10476;
    return coll__10477.cljs$core$ILookup$_lookup$arity$2(coll__10477, k)
  };
  var G__10520__3 = function(this_sym10474, k, not_found) {
    var this__10475 = this;
    var this_sym10474__10478 = this;
    var coll__10479 = this_sym10474__10478;
    return coll__10479.cljs$core$ILookup$_lookup$arity$3(coll__10479, k, not_found)
  };
  G__10520 = function(this_sym10474, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10520__2.call(this, this_sym10474, k);
      case 3:
        return G__10520__3.call(this, this_sym10474, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10520
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym10462, args10463) {
  var this__10480 = this;
  return this_sym10462.call.apply(this_sym10462, [this_sym10462].concat(args10463.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__10481 = this;
  var step_init__10482 = [0, init];
  var i__10483 = 0;
  while(true) {
    if(i__10483 < this__10481.cnt) {
      var arr__10484 = cljs.core.array_for.call(null, v, i__10483);
      var len__10485 = arr__10484.length;
      var init__10489 = function() {
        var j__10486 = 0;
        var init__10487 = step_init__10482[1];
        while(true) {
          if(j__10486 < len__10485) {
            var init__10488 = f.call(null, init__10487, j__10486 + i__10483, arr__10484[j__10486]);
            if(cljs.core.reduced_QMARK_.call(null, init__10488)) {
              return init__10488
            }else {
              var G__10521 = j__10486 + 1;
              var G__10522 = init__10488;
              j__10486 = G__10521;
              init__10487 = G__10522;
              continue
            }
          }else {
            step_init__10482[0] = len__10485;
            step_init__10482[1] = init__10487;
            return init__10487
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10489)) {
        return cljs.core.deref.call(null, init__10489)
      }else {
        var G__10523 = i__10483 + step_init__10482[0];
        i__10483 = G__10523;
        continue
      }
    }else {
      return step_init__10482[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10490 = this;
  if(this__10490.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__10491 = this__10490.tail.slice();
    new_tail__10491.push(o);
    return new cljs.core.PersistentVector(this__10490.meta, this__10490.cnt + 1, this__10490.shift, this__10490.root, new_tail__10491, null)
  }else {
    var root_overflow_QMARK___10492 = this__10490.cnt >>> 5 > 1 << this__10490.shift;
    var new_shift__10493 = root_overflow_QMARK___10492 ? this__10490.shift + 5 : this__10490.shift;
    var new_root__10495 = root_overflow_QMARK___10492 ? function() {
      var n_r__10494 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__10494, 0, this__10490.root);
      cljs.core.pv_aset.call(null, n_r__10494, 1, cljs.core.new_path.call(null, null, this__10490.shift, new cljs.core.VectorNode(null, this__10490.tail)));
      return n_r__10494
    }() : cljs.core.push_tail.call(null, coll, this__10490.shift, this__10490.root, new cljs.core.VectorNode(null, this__10490.tail));
    return new cljs.core.PersistentVector(this__10490.meta, this__10490.cnt + 1, new_shift__10493, new_root__10495, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__10496 = this;
  if(this__10496.cnt > 0) {
    return new cljs.core.RSeq(coll, this__10496.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__10497 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__10498 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__10499 = this;
  var this__10500 = this;
  return cljs.core.pr_str.call(null, this__10500)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__10501 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__10502 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10503 = this;
  if(this__10503.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10504 = this;
  return this__10504.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10505 = this;
  if(this__10505.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__10505.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10506 = this;
  if(this__10506.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__10506.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10506.meta)
    }else {
      if(1 < this__10506.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__10506.meta, this__10506.cnt - 1, this__10506.shift, this__10506.root, this__10506.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__10507 = cljs.core.array_for.call(null, coll, this__10506.cnt - 2);
          var nr__10508 = cljs.core.pop_tail.call(null, coll, this__10506.shift, this__10506.root);
          var new_root__10509 = nr__10508 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__10508;
          var cnt_1__10510 = this__10506.cnt - 1;
          if(function() {
            var and__3822__auto____10511 = 5 < this__10506.shift;
            if(and__3822__auto____10511) {
              return cljs.core.pv_aget.call(null, new_root__10509, 1) == null
            }else {
              return and__3822__auto____10511
            }
          }()) {
            return new cljs.core.PersistentVector(this__10506.meta, cnt_1__10510, this__10506.shift - 5, cljs.core.pv_aget.call(null, new_root__10509, 0), new_tail__10507, null)
          }else {
            return new cljs.core.PersistentVector(this__10506.meta, cnt_1__10510, this__10506.shift, new_root__10509, new_tail__10507, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10512 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10513 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10514 = this;
  return new cljs.core.PersistentVector(meta, this__10514.cnt, this__10514.shift, this__10514.root, this__10514.tail, this__10514.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10515 = this;
  return this__10515.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10516 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10517 = this;
  if(function() {
    var and__3822__auto____10518 = 0 <= n;
    if(and__3822__auto____10518) {
      return n < this__10517.cnt
    }else {
      return and__3822__auto____10518
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10519 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10519.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__10524 = xs.length;
  var xs__10525 = no_clone === true ? xs : xs.slice();
  if(l__10524 < 32) {
    return new cljs.core.PersistentVector(null, l__10524, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__10525, null)
  }else {
    var node__10526 = xs__10525.slice(0, 32);
    var v__10527 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__10526, null);
    var i__10528 = 32;
    var out__10529 = cljs.core._as_transient.call(null, v__10527);
    while(true) {
      if(i__10528 < l__10524) {
        var G__10530 = i__10528 + 1;
        var G__10531 = cljs.core.conj_BANG_.call(null, out__10529, xs__10525[i__10528]);
        i__10528 = G__10530;
        out__10529 = G__10531;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__10529)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__10532) {
    var args = cljs.core.seq(arglist__10532);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__10533 = this;
  if(this__10533.off + 1 < this__10533.node.length) {
    var s__10534 = cljs.core.chunked_seq.call(null, this__10533.vec, this__10533.node, this__10533.i, this__10533.off + 1);
    if(s__10534 == null) {
      return null
    }else {
      return s__10534
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10535 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10536 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10537 = this;
  return this__10537.node[this__10537.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10538 = this;
  if(this__10538.off + 1 < this__10538.node.length) {
    var s__10539 = cljs.core.chunked_seq.call(null, this__10538.vec, this__10538.node, this__10538.i, this__10538.off + 1);
    if(s__10539 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__10539
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__10540 = this;
  var l__10541 = this__10540.node.length;
  var s__10542 = this__10540.i + l__10541 < cljs.core._count.call(null, this__10540.vec) ? cljs.core.chunked_seq.call(null, this__10540.vec, this__10540.i + l__10541, 0) : null;
  if(s__10542 == null) {
    return null
  }else {
    return s__10542
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10543 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__10544 = this;
  return cljs.core.chunked_seq.call(null, this__10544.vec, this__10544.node, this__10544.i, this__10544.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__10545 = this;
  return this__10545.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10546 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__10546.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__10547 = this;
  return cljs.core.array_chunk.call(null, this__10547.node, this__10547.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__10548 = this;
  var l__10549 = this__10548.node.length;
  var s__10550 = this__10548.i + l__10549 < cljs.core._count.call(null, this__10548.vec) ? cljs.core.chunked_seq.call(null, this__10548.vec, this__10548.i + l__10549, 0) : null;
  if(s__10550 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__10550
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10553 = this;
  var h__2242__auto____10554 = this__10553.__hash;
  if(!(h__2242__auto____10554 == null)) {
    return h__2242__auto____10554
  }else {
    var h__2242__auto____10555 = cljs.core.hash_coll.call(null, coll);
    this__10553.__hash = h__2242__auto____10555;
    return h__2242__auto____10555
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10556 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10557 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__10558 = this;
  var v_pos__10559 = this__10558.start + key;
  return new cljs.core.Subvec(this__10558.meta, cljs.core._assoc.call(null, this__10558.v, v_pos__10559, val), this__10558.start, this__10558.end > v_pos__10559 + 1 ? this__10558.end : v_pos__10559 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__10585 = null;
  var G__10585__2 = function(this_sym10560, k) {
    var this__10562 = this;
    var this_sym10560__10563 = this;
    var coll__10564 = this_sym10560__10563;
    return coll__10564.cljs$core$ILookup$_lookup$arity$2(coll__10564, k)
  };
  var G__10585__3 = function(this_sym10561, k, not_found) {
    var this__10562 = this;
    var this_sym10561__10565 = this;
    var coll__10566 = this_sym10561__10565;
    return coll__10566.cljs$core$ILookup$_lookup$arity$3(coll__10566, k, not_found)
  };
  G__10585 = function(this_sym10561, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10585__2.call(this, this_sym10561, k);
      case 3:
        return G__10585__3.call(this, this_sym10561, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10585
}();
cljs.core.Subvec.prototype.apply = function(this_sym10551, args10552) {
  var this__10567 = this;
  return this_sym10551.call.apply(this_sym10551, [this_sym10551].concat(args10552.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10568 = this;
  return new cljs.core.Subvec(this__10568.meta, cljs.core._assoc_n.call(null, this__10568.v, this__10568.end, o), this__10568.start, this__10568.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__10569 = this;
  var this__10570 = this;
  return cljs.core.pr_str.call(null, this__10570)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__10571 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__10572 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10573 = this;
  var subvec_seq__10574 = function subvec_seq(i) {
    if(i === this__10573.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__10573.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__10574.call(null, this__10573.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10575 = this;
  return this__10575.end - this__10575.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10576 = this;
  return cljs.core._nth.call(null, this__10576.v, this__10576.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10577 = this;
  if(this__10577.start === this__10577.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__10577.meta, this__10577.v, this__10577.start, this__10577.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__10578 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10579 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10580 = this;
  return new cljs.core.Subvec(meta, this__10580.v, this__10580.start, this__10580.end, this__10580.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10581 = this;
  return this__10581.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10582 = this;
  return cljs.core._nth.call(null, this__10582.v, this__10582.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10583 = this;
  return cljs.core._nth.call(null, this__10583.v, this__10583.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10584 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__10584.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__10587 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__10587, 0, tl.length);
  return ret__10587
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__10591 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__10592 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__10591, subidx__10592, level === 5 ? tail_node : function() {
    var child__10593 = cljs.core.pv_aget.call(null, ret__10591, subidx__10592);
    if(!(child__10593 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__10593, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__10591
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__10598 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__10599 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__10600 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__10598, subidx__10599));
    if(function() {
      var and__3822__auto____10601 = new_child__10600 == null;
      if(and__3822__auto____10601) {
        return subidx__10599 === 0
      }else {
        return and__3822__auto____10601
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__10598, subidx__10599, new_child__10600);
      return node__10598
    }
  }else {
    if(subidx__10599 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__10598, subidx__10599, null);
        return node__10598
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3822__auto____10606 = 0 <= i;
    if(and__3822__auto____10606) {
      return i < tv.cnt
    }else {
      return and__3822__auto____10606
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__10607 = tv.root;
      var node__10608 = root__10607;
      var level__10609 = tv.shift;
      while(true) {
        if(level__10609 > 0) {
          var G__10610 = cljs.core.tv_ensure_editable.call(null, root__10607.edit, cljs.core.pv_aget.call(null, node__10608, i >>> level__10609 & 31));
          var G__10611 = level__10609 - 5;
          node__10608 = G__10610;
          level__10609 = G__10611;
          continue
        }else {
          return node__10608.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10651 = null;
  var G__10651__2 = function(this_sym10614, k) {
    var this__10616 = this;
    var this_sym10614__10617 = this;
    var coll__10618 = this_sym10614__10617;
    return coll__10618.cljs$core$ILookup$_lookup$arity$2(coll__10618, k)
  };
  var G__10651__3 = function(this_sym10615, k, not_found) {
    var this__10616 = this;
    var this_sym10615__10619 = this;
    var coll__10620 = this_sym10615__10619;
    return coll__10620.cljs$core$ILookup$_lookup$arity$3(coll__10620, k, not_found)
  };
  G__10651 = function(this_sym10615, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10651__2.call(this, this_sym10615, k);
      case 3:
        return G__10651__3.call(this, this_sym10615, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10651
}();
cljs.core.TransientVector.prototype.apply = function(this_sym10612, args10613) {
  var this__10621 = this;
  return this_sym10612.call.apply(this_sym10612, [this_sym10612].concat(args10613.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10622 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10623 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__10624 = this;
  if(this__10624.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__10625 = this;
  if(function() {
    var and__3822__auto____10626 = 0 <= n;
    if(and__3822__auto____10626) {
      return n < this__10625.cnt
    }else {
      return and__3822__auto____10626
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10627 = this;
  if(this__10627.root.edit) {
    return this__10627.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__10628 = this;
  if(this__10628.root.edit) {
    if(function() {
      var and__3822__auto____10629 = 0 <= n;
      if(and__3822__auto____10629) {
        return n < this__10628.cnt
      }else {
        return and__3822__auto____10629
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__10628.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__10634 = function go(level, node) {
          var node__10632 = cljs.core.tv_ensure_editable.call(null, this__10628.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__10632, n & 31, val);
            return node__10632
          }else {
            var subidx__10633 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__10632, subidx__10633, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__10632, subidx__10633)));
            return node__10632
          }
        }.call(null, this__10628.shift, this__10628.root);
        this__10628.root = new_root__10634;
        return tcoll
      }
    }else {
      if(n === this__10628.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__10628.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__10635 = this;
  if(this__10635.root.edit) {
    if(this__10635.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__10635.cnt) {
        this__10635.cnt = 0;
        return tcoll
      }else {
        if((this__10635.cnt - 1 & 31) > 0) {
          this__10635.cnt = this__10635.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__10636 = cljs.core.editable_array_for.call(null, tcoll, this__10635.cnt - 2);
            var new_root__10638 = function() {
              var nr__10637 = cljs.core.tv_pop_tail.call(null, tcoll, this__10635.shift, this__10635.root);
              if(!(nr__10637 == null)) {
                return nr__10637
              }else {
                return new cljs.core.VectorNode(this__10635.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3822__auto____10639 = 5 < this__10635.shift;
              if(and__3822__auto____10639) {
                return cljs.core.pv_aget.call(null, new_root__10638, 1) == null
              }else {
                return and__3822__auto____10639
              }
            }()) {
              var new_root__10640 = cljs.core.tv_ensure_editable.call(null, this__10635.root.edit, cljs.core.pv_aget.call(null, new_root__10638, 0));
              this__10635.root = new_root__10640;
              this__10635.shift = this__10635.shift - 5;
              this__10635.cnt = this__10635.cnt - 1;
              this__10635.tail = new_tail__10636;
              return tcoll
            }else {
              this__10635.root = new_root__10638;
              this__10635.cnt = this__10635.cnt - 1;
              this__10635.tail = new_tail__10636;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10641 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10642 = this;
  if(this__10642.root.edit) {
    if(this__10642.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__10642.tail[this__10642.cnt & 31] = o;
      this__10642.cnt = this__10642.cnt + 1;
      return tcoll
    }else {
      var tail_node__10643 = new cljs.core.VectorNode(this__10642.root.edit, this__10642.tail);
      var new_tail__10644 = cljs.core.make_array.call(null, 32);
      new_tail__10644[0] = o;
      this__10642.tail = new_tail__10644;
      if(this__10642.cnt >>> 5 > 1 << this__10642.shift) {
        var new_root_array__10645 = cljs.core.make_array.call(null, 32);
        var new_shift__10646 = this__10642.shift + 5;
        new_root_array__10645[0] = this__10642.root;
        new_root_array__10645[1] = cljs.core.new_path.call(null, this__10642.root.edit, this__10642.shift, tail_node__10643);
        this__10642.root = new cljs.core.VectorNode(this__10642.root.edit, new_root_array__10645);
        this__10642.shift = new_shift__10646;
        this__10642.cnt = this__10642.cnt + 1;
        return tcoll
      }else {
        var new_root__10647 = cljs.core.tv_push_tail.call(null, tcoll, this__10642.shift, this__10642.root, tail_node__10643);
        this__10642.root = new_root__10647;
        this__10642.cnt = this__10642.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10648 = this;
  if(this__10648.root.edit) {
    this__10648.root.edit = null;
    var len__10649 = this__10648.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__10650 = cljs.core.make_array.call(null, len__10649);
    cljs.core.array_copy.call(null, this__10648.tail, 0, trimmed_tail__10650, 0, len__10649);
    return new cljs.core.PersistentVector(null, this__10648.cnt, this__10648.shift, this__10648.root, trimmed_tail__10650, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10652 = this;
  var h__2242__auto____10653 = this__10652.__hash;
  if(!(h__2242__auto____10653 == null)) {
    return h__2242__auto____10653
  }else {
    var h__2242__auto____10654 = cljs.core.hash_coll.call(null, coll);
    this__10652.__hash = h__2242__auto____10654;
    return h__2242__auto____10654
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10655 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__10656 = this;
  var this__10657 = this;
  return cljs.core.pr_str.call(null, this__10657)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10658 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10659 = this;
  return cljs.core._first.call(null, this__10659.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10660 = this;
  var temp__3971__auto____10661 = cljs.core.next.call(null, this__10660.front);
  if(temp__3971__auto____10661) {
    var f1__10662 = temp__3971__auto____10661;
    return new cljs.core.PersistentQueueSeq(this__10660.meta, f1__10662, this__10660.rear, null)
  }else {
    if(this__10660.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__10660.meta, this__10660.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10663 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10664 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__10664.front, this__10664.rear, this__10664.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10665 = this;
  return this__10665.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10666 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__10666.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10667 = this;
  var h__2242__auto____10668 = this__10667.__hash;
  if(!(h__2242__auto____10668 == null)) {
    return h__2242__auto____10668
  }else {
    var h__2242__auto____10669 = cljs.core.hash_coll.call(null, coll);
    this__10667.__hash = h__2242__auto____10669;
    return h__2242__auto____10669
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__10670 = this;
  if(cljs.core.truth_(this__10670.front)) {
    return new cljs.core.PersistentQueue(this__10670.meta, this__10670.count + 1, this__10670.front, cljs.core.conj.call(null, function() {
      var or__3824__auto____10671 = this__10670.rear;
      if(cljs.core.truth_(or__3824__auto____10671)) {
        return or__3824__auto____10671
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__10670.meta, this__10670.count + 1, cljs.core.conj.call(null, this__10670.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__10672 = this;
  var this__10673 = this;
  return cljs.core.pr_str.call(null, this__10673)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10674 = this;
  var rear__10675 = cljs.core.seq.call(null, this__10674.rear);
  if(cljs.core.truth_(function() {
    var or__3824__auto____10676 = this__10674.front;
    if(cljs.core.truth_(or__3824__auto____10676)) {
      return or__3824__auto____10676
    }else {
      return rear__10675
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__10674.front, cljs.core.seq.call(null, rear__10675), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10677 = this;
  return this__10677.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__10678 = this;
  return cljs.core._first.call(null, this__10678.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__10679 = this;
  if(cljs.core.truth_(this__10679.front)) {
    var temp__3971__auto____10680 = cljs.core.next.call(null, this__10679.front);
    if(temp__3971__auto____10680) {
      var f1__10681 = temp__3971__auto____10680;
      return new cljs.core.PersistentQueue(this__10679.meta, this__10679.count - 1, f1__10681, this__10679.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__10679.meta, this__10679.count - 1, cljs.core.seq.call(null, this__10679.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__10682 = this;
  return cljs.core.first.call(null, this__10682.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__10683 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10684 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10685 = this;
  return new cljs.core.PersistentQueue(meta, this__10685.count, this__10685.front, this__10685.rear, this__10685.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10686 = this;
  return this__10686.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10687 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__10688 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__10691 = array.length;
  var i__10692 = 0;
  while(true) {
    if(i__10692 < len__10691) {
      if(k === array[i__10692]) {
        return i__10692
      }else {
        var G__10693 = i__10692 + incr;
        i__10692 = G__10693;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__10696 = cljs.core.hash.call(null, a);
  var b__10697 = cljs.core.hash.call(null, b);
  if(a__10696 < b__10697) {
    return-1
  }else {
    if(a__10696 > b__10697) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__10705 = m.keys;
  var len__10706 = ks__10705.length;
  var so__10707 = m.strobj;
  var out__10708 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__10709 = 0;
  var out__10710 = cljs.core.transient$.call(null, out__10708);
  while(true) {
    if(i__10709 < len__10706) {
      var k__10711 = ks__10705[i__10709];
      var G__10712 = i__10709 + 1;
      var G__10713 = cljs.core.assoc_BANG_.call(null, out__10710, k__10711, so__10707[k__10711]);
      i__10709 = G__10712;
      out__10710 = G__10713;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__10710, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__10719 = {};
  var l__10720 = ks.length;
  var i__10721 = 0;
  while(true) {
    if(i__10721 < l__10720) {
      var k__10722 = ks[i__10721];
      new_obj__10719[k__10722] = obj[k__10722];
      var G__10723 = i__10721 + 1;
      i__10721 = G__10723;
      continue
    }else {
    }
    break
  }
  return new_obj__10719
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10726 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10727 = this;
  var h__2242__auto____10728 = this__10727.__hash;
  if(!(h__2242__auto____10728 == null)) {
    return h__2242__auto____10728
  }else {
    var h__2242__auto____10729 = cljs.core.hash_imap.call(null, coll);
    this__10727.__hash = h__2242__auto____10729;
    return h__2242__auto____10729
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10730 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10731 = this;
  if(function() {
    var and__3822__auto____10732 = goog.isString(k);
    if(and__3822__auto____10732) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10731.keys) == null)
    }else {
      return and__3822__auto____10732
    }
  }()) {
    return this__10731.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10733 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3824__auto____10734 = this__10733.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3824__auto____10734) {
        return or__3824__auto____10734
      }else {
        return this__10733.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__10733.keys) == null)) {
        var new_strobj__10735 = cljs.core.obj_clone.call(null, this__10733.strobj, this__10733.keys);
        new_strobj__10735[k] = v;
        return new cljs.core.ObjMap(this__10733.meta, this__10733.keys, new_strobj__10735, this__10733.update_count + 1, null)
      }else {
        var new_strobj__10736 = cljs.core.obj_clone.call(null, this__10733.strobj, this__10733.keys);
        var new_keys__10737 = this__10733.keys.slice();
        new_strobj__10736[k] = v;
        new_keys__10737.push(k);
        return new cljs.core.ObjMap(this__10733.meta, new_keys__10737, new_strobj__10736, this__10733.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10738 = this;
  if(function() {
    var and__3822__auto____10739 = goog.isString(k);
    if(and__3822__auto____10739) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10738.keys) == null)
    }else {
      return and__3822__auto____10739
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10761 = null;
  var G__10761__2 = function(this_sym10740, k) {
    var this__10742 = this;
    var this_sym10740__10743 = this;
    var coll__10744 = this_sym10740__10743;
    return coll__10744.cljs$core$ILookup$_lookup$arity$2(coll__10744, k)
  };
  var G__10761__3 = function(this_sym10741, k, not_found) {
    var this__10742 = this;
    var this_sym10741__10745 = this;
    var coll__10746 = this_sym10741__10745;
    return coll__10746.cljs$core$ILookup$_lookup$arity$3(coll__10746, k, not_found)
  };
  G__10761 = function(this_sym10741, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10761__2.call(this, this_sym10741, k);
      case 3:
        return G__10761__3.call(this, this_sym10741, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10761
}();
cljs.core.ObjMap.prototype.apply = function(this_sym10724, args10725) {
  var this__10747 = this;
  return this_sym10724.call.apply(this_sym10724, [this_sym10724].concat(args10725.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10748 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__10749 = this;
  var this__10750 = this;
  return cljs.core.pr_str.call(null, this__10750)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10751 = this;
  if(this__10751.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__10714_SHARP_) {
      return cljs.core.vector.call(null, p1__10714_SHARP_, this__10751.strobj[p1__10714_SHARP_])
    }, this__10751.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10752 = this;
  return this__10752.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10753 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10754 = this;
  return new cljs.core.ObjMap(meta, this__10754.keys, this__10754.strobj, this__10754.update_count, this__10754.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10755 = this;
  return this__10755.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10756 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__10756.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10757 = this;
  if(function() {
    var and__3822__auto____10758 = goog.isString(k);
    if(and__3822__auto____10758) {
      return!(cljs.core.scan_array.call(null, 1, k, this__10757.keys) == null)
    }else {
      return and__3822__auto____10758
    }
  }()) {
    var new_keys__10759 = this__10757.keys.slice();
    var new_strobj__10760 = cljs.core.obj_clone.call(null, this__10757.strobj, this__10757.keys);
    new_keys__10759.splice(cljs.core.scan_array.call(null, 1, k, new_keys__10759), 1);
    cljs.core.js_delete.call(null, new_strobj__10760, k);
    return new cljs.core.ObjMap(this__10757.meta, new_keys__10759, new_strobj__10760, this__10757.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10765 = this;
  var h__2242__auto____10766 = this__10765.__hash;
  if(!(h__2242__auto____10766 == null)) {
    return h__2242__auto____10766
  }else {
    var h__2242__auto____10767 = cljs.core.hash_imap.call(null, coll);
    this__10765.__hash = h__2242__auto____10767;
    return h__2242__auto____10767
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10768 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10769 = this;
  var bucket__10770 = this__10769.hashobj[cljs.core.hash.call(null, k)];
  var i__10771 = cljs.core.truth_(bucket__10770) ? cljs.core.scan_array.call(null, 2, k, bucket__10770) : null;
  if(cljs.core.truth_(i__10771)) {
    return bucket__10770[i__10771 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10772 = this;
  var h__10773 = cljs.core.hash.call(null, k);
  var bucket__10774 = this__10772.hashobj[h__10773];
  if(cljs.core.truth_(bucket__10774)) {
    var new_bucket__10775 = bucket__10774.slice();
    var new_hashobj__10776 = goog.object.clone(this__10772.hashobj);
    new_hashobj__10776[h__10773] = new_bucket__10775;
    var temp__3971__auto____10777 = cljs.core.scan_array.call(null, 2, k, new_bucket__10775);
    if(cljs.core.truth_(temp__3971__auto____10777)) {
      var i__10778 = temp__3971__auto____10777;
      new_bucket__10775[i__10778 + 1] = v;
      return new cljs.core.HashMap(this__10772.meta, this__10772.count, new_hashobj__10776, null)
    }else {
      new_bucket__10775.push(k, v);
      return new cljs.core.HashMap(this__10772.meta, this__10772.count + 1, new_hashobj__10776, null)
    }
  }else {
    var new_hashobj__10779 = goog.object.clone(this__10772.hashobj);
    new_hashobj__10779[h__10773] = [k, v];
    return new cljs.core.HashMap(this__10772.meta, this__10772.count + 1, new_hashobj__10779, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10780 = this;
  var bucket__10781 = this__10780.hashobj[cljs.core.hash.call(null, k)];
  var i__10782 = cljs.core.truth_(bucket__10781) ? cljs.core.scan_array.call(null, 2, k, bucket__10781) : null;
  if(cljs.core.truth_(i__10782)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__10807 = null;
  var G__10807__2 = function(this_sym10783, k) {
    var this__10785 = this;
    var this_sym10783__10786 = this;
    var coll__10787 = this_sym10783__10786;
    return coll__10787.cljs$core$ILookup$_lookup$arity$2(coll__10787, k)
  };
  var G__10807__3 = function(this_sym10784, k, not_found) {
    var this__10785 = this;
    var this_sym10784__10788 = this;
    var coll__10789 = this_sym10784__10788;
    return coll__10789.cljs$core$ILookup$_lookup$arity$3(coll__10789, k, not_found)
  };
  G__10807 = function(this_sym10784, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10807__2.call(this, this_sym10784, k);
      case 3:
        return G__10807__3.call(this, this_sym10784, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10807
}();
cljs.core.HashMap.prototype.apply = function(this_sym10763, args10764) {
  var this__10790 = this;
  return this_sym10763.call.apply(this_sym10763, [this_sym10763].concat(args10764.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10791 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__10792 = this;
  var this__10793 = this;
  return cljs.core.pr_str.call(null, this__10793)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10794 = this;
  if(this__10794.count > 0) {
    var hashes__10795 = cljs.core.js_keys.call(null, this__10794.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__10762_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__10794.hashobj[p1__10762_SHARP_]))
    }, hashes__10795)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10796 = this;
  return this__10796.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10797 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10798 = this;
  return new cljs.core.HashMap(meta, this__10798.count, this__10798.hashobj, this__10798.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10799 = this;
  return this__10799.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10800 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__10800.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10801 = this;
  var h__10802 = cljs.core.hash.call(null, k);
  var bucket__10803 = this__10801.hashobj[h__10802];
  var i__10804 = cljs.core.truth_(bucket__10803) ? cljs.core.scan_array.call(null, 2, k, bucket__10803) : null;
  if(cljs.core.not.call(null, i__10804)) {
    return coll
  }else {
    var new_hashobj__10805 = goog.object.clone(this__10801.hashobj);
    if(3 > bucket__10803.length) {
      cljs.core.js_delete.call(null, new_hashobj__10805, h__10802)
    }else {
      var new_bucket__10806 = bucket__10803.slice();
      new_bucket__10806.splice(i__10804, 2);
      new_hashobj__10805[h__10802] = new_bucket__10806
    }
    return new cljs.core.HashMap(this__10801.meta, this__10801.count - 1, new_hashobj__10805, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__10808 = ks.length;
  var i__10809 = 0;
  var out__10810 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__10809 < len__10808) {
      var G__10811 = i__10809 + 1;
      var G__10812 = cljs.core.assoc.call(null, out__10810, ks[i__10809], vs[i__10809]);
      i__10809 = G__10811;
      out__10810 = G__10812;
      continue
    }else {
      return out__10810
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__10816 = m.arr;
  var len__10817 = arr__10816.length;
  var i__10818 = 0;
  while(true) {
    if(len__10817 <= i__10818) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__10816[i__10818], k)) {
        return i__10818
      }else {
        if("\ufdd0'else") {
          var G__10819 = i__10818 + 2;
          i__10818 = G__10819;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__10822 = this;
  return new cljs.core.TransientArrayMap({}, this__10822.arr.length, this__10822.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__10823 = this;
  var h__2242__auto____10824 = this__10823.__hash;
  if(!(h__2242__auto____10824 == null)) {
    return h__2242__auto____10824
  }else {
    var h__2242__auto____10825 = cljs.core.hash_imap.call(null, coll);
    this__10823.__hash = h__2242__auto____10825;
    return h__2242__auto____10825
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__10826 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__10827 = this;
  var idx__10828 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10828 === -1) {
    return not_found
  }else {
    return this__10827.arr[idx__10828 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__10829 = this;
  var idx__10830 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10830 === -1) {
    if(this__10829.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__10829.meta, this__10829.cnt + 1, function() {
        var G__10831__10832 = this__10829.arr.slice();
        G__10831__10832.push(k);
        G__10831__10832.push(v);
        return G__10831__10832
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__10829.arr[idx__10830 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__10829.meta, this__10829.cnt, function() {
          var G__10833__10834 = this__10829.arr.slice();
          G__10833__10834[idx__10830 + 1] = v;
          return G__10833__10834
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__10835 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10867 = null;
  var G__10867__2 = function(this_sym10836, k) {
    var this__10838 = this;
    var this_sym10836__10839 = this;
    var coll__10840 = this_sym10836__10839;
    return coll__10840.cljs$core$ILookup$_lookup$arity$2(coll__10840, k)
  };
  var G__10867__3 = function(this_sym10837, k, not_found) {
    var this__10838 = this;
    var this_sym10837__10841 = this;
    var coll__10842 = this_sym10837__10841;
    return coll__10842.cljs$core$ILookup$_lookup$arity$3(coll__10842, k, not_found)
  };
  G__10867 = function(this_sym10837, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10867__2.call(this, this_sym10837, k);
      case 3:
        return G__10867__3.call(this, this_sym10837, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__10867
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym10820, args10821) {
  var this__10843 = this;
  return this_sym10820.call.apply(this_sym10820, [this_sym10820].concat(args10821.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__10844 = this;
  var len__10845 = this__10844.arr.length;
  var i__10846 = 0;
  var init__10847 = init;
  while(true) {
    if(i__10846 < len__10845) {
      var init__10848 = f.call(null, init__10847, this__10844.arr[i__10846], this__10844.arr[i__10846 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__10848)) {
        return cljs.core.deref.call(null, init__10848)
      }else {
        var G__10868 = i__10846 + 2;
        var G__10869 = init__10848;
        i__10846 = G__10868;
        init__10847 = G__10869;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__10849 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__10850 = this;
  var this__10851 = this;
  return cljs.core.pr_str.call(null, this__10851)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__10852 = this;
  if(this__10852.cnt > 0) {
    var len__10853 = this__10852.arr.length;
    var array_map_seq__10854 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__10853) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__10852.arr[i], this__10852.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__10854.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__10855 = this;
  return this__10855.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__10856 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__10857 = this;
  return new cljs.core.PersistentArrayMap(meta, this__10857.cnt, this__10857.arr, this__10857.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__10858 = this;
  return this__10858.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__10859 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__10859.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__10860 = this;
  var idx__10861 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__10861 >= 0) {
    var len__10862 = this__10860.arr.length;
    var new_len__10863 = len__10862 - 2;
    if(new_len__10863 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__10864 = cljs.core.make_array.call(null, new_len__10863);
      var s__10865 = 0;
      var d__10866 = 0;
      while(true) {
        if(s__10865 >= len__10862) {
          return new cljs.core.PersistentArrayMap(this__10860.meta, this__10860.cnt - 1, new_arr__10864, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__10860.arr[s__10865])) {
            var G__10870 = s__10865 + 2;
            var G__10871 = d__10866;
            s__10865 = G__10870;
            d__10866 = G__10871;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__10864[d__10866] = this__10860.arr[s__10865];
              new_arr__10864[d__10866 + 1] = this__10860.arr[s__10865 + 1];
              var G__10872 = s__10865 + 2;
              var G__10873 = d__10866 + 2;
              s__10865 = G__10872;
              d__10866 = G__10873;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__10874 = cljs.core.count.call(null, ks);
  var i__10875 = 0;
  var out__10876 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__10875 < len__10874) {
      var G__10877 = i__10875 + 1;
      var G__10878 = cljs.core.assoc_BANG_.call(null, out__10876, ks[i__10875], vs[i__10875]);
      i__10875 = G__10877;
      out__10876 = G__10878;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__10876)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__10879 = this;
  if(cljs.core.truth_(this__10879.editable_QMARK_)) {
    var idx__10880 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10880 >= 0) {
      this__10879.arr[idx__10880] = this__10879.arr[this__10879.len - 2];
      this__10879.arr[idx__10880 + 1] = this__10879.arr[this__10879.len - 1];
      var G__10881__10882 = this__10879.arr;
      G__10881__10882.pop();
      G__10881__10882.pop();
      G__10881__10882;
      this__10879.len = this__10879.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__10883 = this;
  if(cljs.core.truth_(this__10883.editable_QMARK_)) {
    var idx__10884 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__10884 === -1) {
      if(this__10883.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__10883.len = this__10883.len + 2;
        this__10883.arr.push(key);
        this__10883.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__10883.len, this__10883.arr), key, val)
      }
    }else {
      if(val === this__10883.arr[idx__10884 + 1]) {
        return tcoll
      }else {
        this__10883.arr[idx__10884 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__10885 = this;
  if(cljs.core.truth_(this__10885.editable_QMARK_)) {
    if(function() {
      var G__10886__10887 = o;
      if(G__10886__10887) {
        if(function() {
          var or__3824__auto____10888 = G__10886__10887.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____10888) {
            return or__3824__auto____10888
          }else {
            return G__10886__10887.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__10886__10887.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10886__10887)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__10886__10887)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__10889 = cljs.core.seq.call(null, o);
      var tcoll__10890 = tcoll;
      while(true) {
        var temp__3971__auto____10891 = cljs.core.first.call(null, es__10889);
        if(cljs.core.truth_(temp__3971__auto____10891)) {
          var e__10892 = temp__3971__auto____10891;
          var G__10898 = cljs.core.next.call(null, es__10889);
          var G__10899 = tcoll__10890.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__10890, cljs.core.key.call(null, e__10892), cljs.core.val.call(null, e__10892));
          es__10889 = G__10898;
          tcoll__10890 = G__10899;
          continue
        }else {
          return tcoll__10890
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__10893 = this;
  if(cljs.core.truth_(this__10893.editable_QMARK_)) {
    this__10893.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__10893.len, 2), this__10893.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__10894 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__10895 = this;
  if(cljs.core.truth_(this__10895.editable_QMARK_)) {
    var idx__10896 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__10896 === -1) {
      return not_found
    }else {
      return this__10895.arr[idx__10896 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__10897 = this;
  if(cljs.core.truth_(this__10897.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__10897.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__10902 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__10903 = 0;
  while(true) {
    if(i__10903 < len) {
      var G__10904 = cljs.core.assoc_BANG_.call(null, out__10902, arr[i__10903], arr[i__10903 + 1]);
      var G__10905 = i__10903 + 2;
      out__10902 = G__10904;
      i__10903 = G__10905;
      continue
    }else {
      return out__10902
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2360__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__10910__10911 = arr.slice();
    G__10910__10911[i] = a;
    return G__10910__10911
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__10912__10913 = arr.slice();
    G__10912__10913[i] = a;
    G__10912__10913[j] = b;
    return G__10912__10913
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__10915 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__10915, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__10915, 2 * i, new_arr__10915.length - 2 * i);
  return new_arr__10915
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__10918 = inode.ensure_editable(edit);
    editable__10918.arr[i] = a;
    return editable__10918
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__10919 = inode.ensure_editable(edit);
    editable__10919.arr[i] = a;
    editable__10919.arr[j] = b;
    return editable__10919
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__10926 = arr.length;
  var i__10927 = 0;
  var init__10928 = init;
  while(true) {
    if(i__10927 < len__10926) {
      var init__10931 = function() {
        var k__10929 = arr[i__10927];
        if(!(k__10929 == null)) {
          return f.call(null, init__10928, k__10929, arr[i__10927 + 1])
        }else {
          var node__10930 = arr[i__10927 + 1];
          if(!(node__10930 == null)) {
            return node__10930.kv_reduce(f, init__10928)
          }else {
            return init__10928
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__10931)) {
        return cljs.core.deref.call(null, init__10931)
      }else {
        var G__10932 = i__10927 + 2;
        var G__10933 = init__10931;
        i__10927 = G__10932;
        init__10928 = G__10933;
        continue
      }
    }else {
      return init__10928
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__10934 = this;
  var inode__10935 = this;
  if(this__10934.bitmap === bit) {
    return null
  }else {
    var editable__10936 = inode__10935.ensure_editable(e);
    var earr__10937 = editable__10936.arr;
    var len__10938 = earr__10937.length;
    editable__10936.bitmap = bit ^ editable__10936.bitmap;
    cljs.core.array_copy.call(null, earr__10937, 2 * (i + 1), earr__10937, 2 * i, len__10938 - 2 * (i + 1));
    earr__10937[len__10938 - 2] = null;
    earr__10937[len__10938 - 1] = null;
    return editable__10936
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__10939 = this;
  var inode__10940 = this;
  var bit__10941 = 1 << (hash >>> shift & 31);
  var idx__10942 = cljs.core.bitmap_indexed_node_index.call(null, this__10939.bitmap, bit__10941);
  if((this__10939.bitmap & bit__10941) === 0) {
    var n__10943 = cljs.core.bit_count.call(null, this__10939.bitmap);
    if(2 * n__10943 < this__10939.arr.length) {
      var editable__10944 = inode__10940.ensure_editable(edit);
      var earr__10945 = editable__10944.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__10945, 2 * idx__10942, earr__10945, 2 * (idx__10942 + 1), 2 * (n__10943 - idx__10942));
      earr__10945[2 * idx__10942] = key;
      earr__10945[2 * idx__10942 + 1] = val;
      editable__10944.bitmap = editable__10944.bitmap | bit__10941;
      return editable__10944
    }else {
      if(n__10943 >= 16) {
        var nodes__10946 = cljs.core.make_array.call(null, 32);
        var jdx__10947 = hash >>> shift & 31;
        nodes__10946[jdx__10947] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__10948 = 0;
        var j__10949 = 0;
        while(true) {
          if(i__10948 < 32) {
            if((this__10939.bitmap >>> i__10948 & 1) === 0) {
              var G__11002 = i__10948 + 1;
              var G__11003 = j__10949;
              i__10948 = G__11002;
              j__10949 = G__11003;
              continue
            }else {
              nodes__10946[i__10948] = !(this__10939.arr[j__10949] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__10939.arr[j__10949]), this__10939.arr[j__10949], this__10939.arr[j__10949 + 1], added_leaf_QMARK_) : this__10939.arr[j__10949 + 1];
              var G__11004 = i__10948 + 1;
              var G__11005 = j__10949 + 2;
              i__10948 = G__11004;
              j__10949 = G__11005;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__10943 + 1, nodes__10946)
      }else {
        if("\ufdd0'else") {
          var new_arr__10950 = cljs.core.make_array.call(null, 2 * (n__10943 + 4));
          cljs.core.array_copy.call(null, this__10939.arr, 0, new_arr__10950, 0, 2 * idx__10942);
          new_arr__10950[2 * idx__10942] = key;
          new_arr__10950[2 * idx__10942 + 1] = val;
          cljs.core.array_copy.call(null, this__10939.arr, 2 * idx__10942, new_arr__10950, 2 * (idx__10942 + 1), 2 * (n__10943 - idx__10942));
          added_leaf_QMARK_.val = true;
          var editable__10951 = inode__10940.ensure_editable(edit);
          editable__10951.arr = new_arr__10950;
          editable__10951.bitmap = editable__10951.bitmap | bit__10941;
          return editable__10951
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__10952 = this__10939.arr[2 * idx__10942];
    var val_or_node__10953 = this__10939.arr[2 * idx__10942 + 1];
    if(key_or_nil__10952 == null) {
      var n__10954 = val_or_node__10953.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10954 === val_or_node__10953) {
        return inode__10940
      }else {
        return cljs.core.edit_and_set.call(null, inode__10940, edit, 2 * idx__10942 + 1, n__10954)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10952)) {
        if(val === val_or_node__10953) {
          return inode__10940
        }else {
          return cljs.core.edit_and_set.call(null, inode__10940, edit, 2 * idx__10942 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__10940, edit, 2 * idx__10942, null, 2 * idx__10942 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__10952, val_or_node__10953, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__10955 = this;
  var inode__10956 = this;
  return cljs.core.create_inode_seq.call(null, this__10955.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__10957 = this;
  var inode__10958 = this;
  var bit__10959 = 1 << (hash >>> shift & 31);
  if((this__10957.bitmap & bit__10959) === 0) {
    return inode__10958
  }else {
    var idx__10960 = cljs.core.bitmap_indexed_node_index.call(null, this__10957.bitmap, bit__10959);
    var key_or_nil__10961 = this__10957.arr[2 * idx__10960];
    var val_or_node__10962 = this__10957.arr[2 * idx__10960 + 1];
    if(key_or_nil__10961 == null) {
      var n__10963 = val_or_node__10962.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__10963 === val_or_node__10962) {
        return inode__10958
      }else {
        if(!(n__10963 == null)) {
          return cljs.core.edit_and_set.call(null, inode__10958, edit, 2 * idx__10960 + 1, n__10963)
        }else {
          if(this__10957.bitmap === bit__10959) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__10958.edit_and_remove_pair(edit, bit__10959, idx__10960)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10961)) {
        removed_leaf_QMARK_[0] = true;
        return inode__10958.edit_and_remove_pair(edit, bit__10959, idx__10960)
      }else {
        if("\ufdd0'else") {
          return inode__10958
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__10964 = this;
  var inode__10965 = this;
  if(e === this__10964.edit) {
    return inode__10965
  }else {
    var n__10966 = cljs.core.bit_count.call(null, this__10964.bitmap);
    var new_arr__10967 = cljs.core.make_array.call(null, n__10966 < 0 ? 4 : 2 * (n__10966 + 1));
    cljs.core.array_copy.call(null, this__10964.arr, 0, new_arr__10967, 0, 2 * n__10966);
    return new cljs.core.BitmapIndexedNode(e, this__10964.bitmap, new_arr__10967)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__10968 = this;
  var inode__10969 = this;
  return cljs.core.inode_kv_reduce.call(null, this__10968.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__10970 = this;
  var inode__10971 = this;
  var bit__10972 = 1 << (hash >>> shift & 31);
  if((this__10970.bitmap & bit__10972) === 0) {
    return not_found
  }else {
    var idx__10973 = cljs.core.bitmap_indexed_node_index.call(null, this__10970.bitmap, bit__10972);
    var key_or_nil__10974 = this__10970.arr[2 * idx__10973];
    var val_or_node__10975 = this__10970.arr[2 * idx__10973 + 1];
    if(key_or_nil__10974 == null) {
      return val_or_node__10975.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10974)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__10974, val_or_node__10975], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__10976 = this;
  var inode__10977 = this;
  var bit__10978 = 1 << (hash >>> shift & 31);
  if((this__10976.bitmap & bit__10978) === 0) {
    return inode__10977
  }else {
    var idx__10979 = cljs.core.bitmap_indexed_node_index.call(null, this__10976.bitmap, bit__10978);
    var key_or_nil__10980 = this__10976.arr[2 * idx__10979];
    var val_or_node__10981 = this__10976.arr[2 * idx__10979 + 1];
    if(key_or_nil__10980 == null) {
      var n__10982 = val_or_node__10981.inode_without(shift + 5, hash, key);
      if(n__10982 === val_or_node__10981) {
        return inode__10977
      }else {
        if(!(n__10982 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__10976.bitmap, cljs.core.clone_and_set.call(null, this__10976.arr, 2 * idx__10979 + 1, n__10982))
        }else {
          if(this__10976.bitmap === bit__10978) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__10976.bitmap ^ bit__10978, cljs.core.remove_pair.call(null, this__10976.arr, idx__10979))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10980)) {
        return new cljs.core.BitmapIndexedNode(null, this__10976.bitmap ^ bit__10978, cljs.core.remove_pair.call(null, this__10976.arr, idx__10979))
      }else {
        if("\ufdd0'else") {
          return inode__10977
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__10983 = this;
  var inode__10984 = this;
  var bit__10985 = 1 << (hash >>> shift & 31);
  var idx__10986 = cljs.core.bitmap_indexed_node_index.call(null, this__10983.bitmap, bit__10985);
  if((this__10983.bitmap & bit__10985) === 0) {
    var n__10987 = cljs.core.bit_count.call(null, this__10983.bitmap);
    if(n__10987 >= 16) {
      var nodes__10988 = cljs.core.make_array.call(null, 32);
      var jdx__10989 = hash >>> shift & 31;
      nodes__10988[jdx__10989] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__10990 = 0;
      var j__10991 = 0;
      while(true) {
        if(i__10990 < 32) {
          if((this__10983.bitmap >>> i__10990 & 1) === 0) {
            var G__11006 = i__10990 + 1;
            var G__11007 = j__10991;
            i__10990 = G__11006;
            j__10991 = G__11007;
            continue
          }else {
            nodes__10988[i__10990] = !(this__10983.arr[j__10991] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__10983.arr[j__10991]), this__10983.arr[j__10991], this__10983.arr[j__10991 + 1], added_leaf_QMARK_) : this__10983.arr[j__10991 + 1];
            var G__11008 = i__10990 + 1;
            var G__11009 = j__10991 + 2;
            i__10990 = G__11008;
            j__10991 = G__11009;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__10987 + 1, nodes__10988)
    }else {
      var new_arr__10992 = cljs.core.make_array.call(null, 2 * (n__10987 + 1));
      cljs.core.array_copy.call(null, this__10983.arr, 0, new_arr__10992, 0, 2 * idx__10986);
      new_arr__10992[2 * idx__10986] = key;
      new_arr__10992[2 * idx__10986 + 1] = val;
      cljs.core.array_copy.call(null, this__10983.arr, 2 * idx__10986, new_arr__10992, 2 * (idx__10986 + 1), 2 * (n__10987 - idx__10986));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__10983.bitmap | bit__10985, new_arr__10992)
    }
  }else {
    var key_or_nil__10993 = this__10983.arr[2 * idx__10986];
    var val_or_node__10994 = this__10983.arr[2 * idx__10986 + 1];
    if(key_or_nil__10993 == null) {
      var n__10995 = val_or_node__10994.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__10995 === val_or_node__10994) {
        return inode__10984
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__10983.bitmap, cljs.core.clone_and_set.call(null, this__10983.arr, 2 * idx__10986 + 1, n__10995))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__10993)) {
        if(val === val_or_node__10994) {
          return inode__10984
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__10983.bitmap, cljs.core.clone_and_set.call(null, this__10983.arr, 2 * idx__10986 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__10983.bitmap, cljs.core.clone_and_set.call(null, this__10983.arr, 2 * idx__10986, null, 2 * idx__10986 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__10993, val_or_node__10994, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__10996 = this;
  var inode__10997 = this;
  var bit__10998 = 1 << (hash >>> shift & 31);
  if((this__10996.bitmap & bit__10998) === 0) {
    return not_found
  }else {
    var idx__10999 = cljs.core.bitmap_indexed_node_index.call(null, this__10996.bitmap, bit__10998);
    var key_or_nil__11000 = this__10996.arr[2 * idx__10999];
    var val_or_node__11001 = this__10996.arr[2 * idx__10999 + 1];
    if(key_or_nil__11000 == null) {
      return val_or_node__11001.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__11000)) {
        return val_or_node__11001
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__11017 = array_node.arr;
  var len__11018 = 2 * (array_node.cnt - 1);
  var new_arr__11019 = cljs.core.make_array.call(null, len__11018);
  var i__11020 = 0;
  var j__11021 = 1;
  var bitmap__11022 = 0;
  while(true) {
    if(i__11020 < len__11018) {
      if(function() {
        var and__3822__auto____11023 = !(i__11020 === idx);
        if(and__3822__auto____11023) {
          return!(arr__11017[i__11020] == null)
        }else {
          return and__3822__auto____11023
        }
      }()) {
        new_arr__11019[j__11021] = arr__11017[i__11020];
        var G__11024 = i__11020 + 1;
        var G__11025 = j__11021 + 2;
        var G__11026 = bitmap__11022 | 1 << i__11020;
        i__11020 = G__11024;
        j__11021 = G__11025;
        bitmap__11022 = G__11026;
        continue
      }else {
        var G__11027 = i__11020 + 1;
        var G__11028 = j__11021;
        var G__11029 = bitmap__11022;
        i__11020 = G__11027;
        j__11021 = G__11028;
        bitmap__11022 = G__11029;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__11022, new_arr__11019)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11030 = this;
  var inode__11031 = this;
  var idx__11032 = hash >>> shift & 31;
  var node__11033 = this__11030.arr[idx__11032];
  if(node__11033 == null) {
    var editable__11034 = cljs.core.edit_and_set.call(null, inode__11031, edit, idx__11032, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__11034.cnt = editable__11034.cnt + 1;
    return editable__11034
  }else {
    var n__11035 = node__11033.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11035 === node__11033) {
      return inode__11031
    }else {
      return cljs.core.edit_and_set.call(null, inode__11031, edit, idx__11032, n__11035)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__11036 = this;
  var inode__11037 = this;
  return cljs.core.create_array_node_seq.call(null, this__11036.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11038 = this;
  var inode__11039 = this;
  var idx__11040 = hash >>> shift & 31;
  var node__11041 = this__11038.arr[idx__11040];
  if(node__11041 == null) {
    return inode__11039
  }else {
    var n__11042 = node__11041.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__11042 === node__11041) {
      return inode__11039
    }else {
      if(n__11042 == null) {
        if(this__11038.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11039, edit, idx__11040)
        }else {
          var editable__11043 = cljs.core.edit_and_set.call(null, inode__11039, edit, idx__11040, n__11042);
          editable__11043.cnt = editable__11043.cnt - 1;
          return editable__11043
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__11039, edit, idx__11040, n__11042)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__11044 = this;
  var inode__11045 = this;
  if(e === this__11044.edit) {
    return inode__11045
  }else {
    return new cljs.core.ArrayNode(e, this__11044.cnt, this__11044.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__11046 = this;
  var inode__11047 = this;
  var len__11048 = this__11046.arr.length;
  var i__11049 = 0;
  var init__11050 = init;
  while(true) {
    if(i__11049 < len__11048) {
      var node__11051 = this__11046.arr[i__11049];
      if(!(node__11051 == null)) {
        var init__11052 = node__11051.kv_reduce(f, init__11050);
        if(cljs.core.reduced_QMARK_.call(null, init__11052)) {
          return cljs.core.deref.call(null, init__11052)
        }else {
          var G__11071 = i__11049 + 1;
          var G__11072 = init__11052;
          i__11049 = G__11071;
          init__11050 = G__11072;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__11050
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11053 = this;
  var inode__11054 = this;
  var idx__11055 = hash >>> shift & 31;
  var node__11056 = this__11053.arr[idx__11055];
  if(!(node__11056 == null)) {
    return node__11056.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__11057 = this;
  var inode__11058 = this;
  var idx__11059 = hash >>> shift & 31;
  var node__11060 = this__11057.arr[idx__11059];
  if(!(node__11060 == null)) {
    var n__11061 = node__11060.inode_without(shift + 5, hash, key);
    if(n__11061 === node__11060) {
      return inode__11058
    }else {
      if(n__11061 == null) {
        if(this__11057.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__11058, null, idx__11059)
        }else {
          return new cljs.core.ArrayNode(null, this__11057.cnt - 1, cljs.core.clone_and_set.call(null, this__11057.arr, idx__11059, n__11061))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__11057.cnt, cljs.core.clone_and_set.call(null, this__11057.arr, idx__11059, n__11061))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__11058
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11062 = this;
  var inode__11063 = this;
  var idx__11064 = hash >>> shift & 31;
  var node__11065 = this__11062.arr[idx__11064];
  if(node__11065 == null) {
    return new cljs.core.ArrayNode(null, this__11062.cnt + 1, cljs.core.clone_and_set.call(null, this__11062.arr, idx__11064, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__11066 = node__11065.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__11066 === node__11065) {
      return inode__11063
    }else {
      return new cljs.core.ArrayNode(null, this__11062.cnt, cljs.core.clone_and_set.call(null, this__11062.arr, idx__11064, n__11066))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11067 = this;
  var inode__11068 = this;
  var idx__11069 = hash >>> shift & 31;
  var node__11070 = this__11067.arr[idx__11069];
  if(!(node__11070 == null)) {
    return node__11070.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__11075 = 2 * cnt;
  var i__11076 = 0;
  while(true) {
    if(i__11076 < lim__11075) {
      if(cljs.core.key_test.call(null, key, arr[i__11076])) {
        return i__11076
      }else {
        var G__11077 = i__11076 + 2;
        i__11076 = G__11077;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__11078 = this;
  var inode__11079 = this;
  if(hash === this__11078.collision_hash) {
    var idx__11080 = cljs.core.hash_collision_node_find_index.call(null, this__11078.arr, this__11078.cnt, key);
    if(idx__11080 === -1) {
      if(this__11078.arr.length > 2 * this__11078.cnt) {
        var editable__11081 = cljs.core.edit_and_set.call(null, inode__11079, edit, 2 * this__11078.cnt, key, 2 * this__11078.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__11081.cnt = editable__11081.cnt + 1;
        return editable__11081
      }else {
        var len__11082 = this__11078.arr.length;
        var new_arr__11083 = cljs.core.make_array.call(null, len__11082 + 2);
        cljs.core.array_copy.call(null, this__11078.arr, 0, new_arr__11083, 0, len__11082);
        new_arr__11083[len__11082] = key;
        new_arr__11083[len__11082 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__11079.ensure_editable_array(edit, this__11078.cnt + 1, new_arr__11083)
      }
    }else {
      if(this__11078.arr[idx__11080 + 1] === val) {
        return inode__11079
      }else {
        return cljs.core.edit_and_set.call(null, inode__11079, edit, idx__11080 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__11078.collision_hash >>> shift & 31), [null, inode__11079, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__11084 = this;
  var inode__11085 = this;
  return cljs.core.create_inode_seq.call(null, this__11084.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__11086 = this;
  var inode__11087 = this;
  var idx__11088 = cljs.core.hash_collision_node_find_index.call(null, this__11086.arr, this__11086.cnt, key);
  if(idx__11088 === -1) {
    return inode__11087
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__11086.cnt === 1) {
      return null
    }else {
      var editable__11089 = inode__11087.ensure_editable(edit);
      var earr__11090 = editable__11089.arr;
      earr__11090[idx__11088] = earr__11090[2 * this__11086.cnt - 2];
      earr__11090[idx__11088 + 1] = earr__11090[2 * this__11086.cnt - 1];
      earr__11090[2 * this__11086.cnt - 1] = null;
      earr__11090[2 * this__11086.cnt - 2] = null;
      editable__11089.cnt = editable__11089.cnt - 1;
      return editable__11089
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__11091 = this;
  var inode__11092 = this;
  if(e === this__11091.edit) {
    return inode__11092
  }else {
    var new_arr__11093 = cljs.core.make_array.call(null, 2 * (this__11091.cnt + 1));
    cljs.core.array_copy.call(null, this__11091.arr, 0, new_arr__11093, 0, 2 * this__11091.cnt);
    return new cljs.core.HashCollisionNode(e, this__11091.collision_hash, this__11091.cnt, new_arr__11093)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__11094 = this;
  var inode__11095 = this;
  return cljs.core.inode_kv_reduce.call(null, this__11094.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__11096 = this;
  var inode__11097 = this;
  var idx__11098 = cljs.core.hash_collision_node_find_index.call(null, this__11096.arr, this__11096.cnt, key);
  if(idx__11098 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__11096.arr[idx__11098])) {
      return cljs.core.PersistentVector.fromArray([this__11096.arr[idx__11098], this__11096.arr[idx__11098 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__11099 = this;
  var inode__11100 = this;
  var idx__11101 = cljs.core.hash_collision_node_find_index.call(null, this__11099.arr, this__11099.cnt, key);
  if(idx__11101 === -1) {
    return inode__11100
  }else {
    if(this__11099.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__11099.collision_hash, this__11099.cnt - 1, cljs.core.remove_pair.call(null, this__11099.arr, cljs.core.quot.call(null, idx__11101, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__11102 = this;
  var inode__11103 = this;
  if(hash === this__11102.collision_hash) {
    var idx__11104 = cljs.core.hash_collision_node_find_index.call(null, this__11102.arr, this__11102.cnt, key);
    if(idx__11104 === -1) {
      var len__11105 = this__11102.arr.length;
      var new_arr__11106 = cljs.core.make_array.call(null, len__11105 + 2);
      cljs.core.array_copy.call(null, this__11102.arr, 0, new_arr__11106, 0, len__11105);
      new_arr__11106[len__11105] = key;
      new_arr__11106[len__11105 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__11102.collision_hash, this__11102.cnt + 1, new_arr__11106)
    }else {
      if(cljs.core._EQ_.call(null, this__11102.arr[idx__11104], val)) {
        return inode__11103
      }else {
        return new cljs.core.HashCollisionNode(null, this__11102.collision_hash, this__11102.cnt, cljs.core.clone_and_set.call(null, this__11102.arr, idx__11104 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__11102.collision_hash >>> shift & 31), [null, inode__11103])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__11107 = this;
  var inode__11108 = this;
  var idx__11109 = cljs.core.hash_collision_node_find_index.call(null, this__11107.arr, this__11107.cnt, key);
  if(idx__11109 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__11107.arr[idx__11109])) {
      return this__11107.arr[idx__11109 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__11110 = this;
  var inode__11111 = this;
  if(e === this__11110.edit) {
    this__11110.arr = array;
    this__11110.cnt = count;
    return inode__11111
  }else {
    return new cljs.core.HashCollisionNode(this__11110.edit, this__11110.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__11116 = cljs.core.hash.call(null, key1);
    if(key1hash__11116 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__11116, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___11117 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__11116, key1, val1, added_leaf_QMARK___11117).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___11117)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__11118 = cljs.core.hash.call(null, key1);
    if(key1hash__11118 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__11118, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___11119 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__11118, key1, val1, added_leaf_QMARK___11119).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___11119)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11120 = this;
  var h__2242__auto____11121 = this__11120.__hash;
  if(!(h__2242__auto____11121 == null)) {
    return h__2242__auto____11121
  }else {
    var h__2242__auto____11122 = cljs.core.hash_coll.call(null, coll);
    this__11120.__hash = h__2242__auto____11122;
    return h__2242__auto____11122
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11123 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__11124 = this;
  var this__11125 = this;
  return cljs.core.pr_str.call(null, this__11125)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11126 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11127 = this;
  if(this__11127.s == null) {
    return cljs.core.PersistentVector.fromArray([this__11127.nodes[this__11127.i], this__11127.nodes[this__11127.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__11127.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11128 = this;
  if(this__11128.s == null) {
    return cljs.core.create_inode_seq.call(null, this__11128.nodes, this__11128.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__11128.nodes, this__11128.i, cljs.core.next.call(null, this__11128.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11129 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11130 = this;
  return new cljs.core.NodeSeq(meta, this__11130.nodes, this__11130.i, this__11130.s, this__11130.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11131 = this;
  return this__11131.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11132 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11132.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__11139 = nodes.length;
      var j__11140 = i;
      while(true) {
        if(j__11140 < len__11139) {
          if(!(nodes[j__11140] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__11140, null, null)
          }else {
            var temp__3971__auto____11141 = nodes[j__11140 + 1];
            if(cljs.core.truth_(temp__3971__auto____11141)) {
              var node__11142 = temp__3971__auto____11141;
              var temp__3971__auto____11143 = node__11142.inode_seq();
              if(cljs.core.truth_(temp__3971__auto____11143)) {
                var node_seq__11144 = temp__3971__auto____11143;
                return new cljs.core.NodeSeq(null, nodes, j__11140 + 2, node_seq__11144, null)
              }else {
                var G__11145 = j__11140 + 2;
                j__11140 = G__11145;
                continue
              }
            }else {
              var G__11146 = j__11140 + 2;
              j__11140 = G__11146;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11147 = this;
  var h__2242__auto____11148 = this__11147.__hash;
  if(!(h__2242__auto____11148 == null)) {
    return h__2242__auto____11148
  }else {
    var h__2242__auto____11149 = cljs.core.hash_coll.call(null, coll);
    this__11147.__hash = h__2242__auto____11149;
    return h__2242__auto____11149
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11150 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__11151 = this;
  var this__11152 = this;
  return cljs.core.pr_str.call(null, this__11152)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11153 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__11154 = this;
  return cljs.core.first.call(null, this__11154.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__11155 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__11155.nodes, this__11155.i, cljs.core.next.call(null, this__11155.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11156 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11157 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__11157.nodes, this__11157.i, this__11157.s, this__11157.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11158 = this;
  return this__11158.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11159 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11159.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__11166 = nodes.length;
      var j__11167 = i;
      while(true) {
        if(j__11167 < len__11166) {
          var temp__3971__auto____11168 = nodes[j__11167];
          if(cljs.core.truth_(temp__3971__auto____11168)) {
            var nj__11169 = temp__3971__auto____11168;
            var temp__3971__auto____11170 = nj__11169.inode_seq();
            if(cljs.core.truth_(temp__3971__auto____11170)) {
              var ns__11171 = temp__3971__auto____11170;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__11167 + 1, ns__11171, null)
            }else {
              var G__11172 = j__11167 + 1;
              j__11167 = G__11172;
              continue
            }
          }else {
            var G__11173 = j__11167 + 1;
            j__11167 = G__11173;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11176 = this;
  return new cljs.core.TransientHashMap({}, this__11176.root, this__11176.cnt, this__11176.has_nil_QMARK_, this__11176.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11177 = this;
  var h__2242__auto____11178 = this__11177.__hash;
  if(!(h__2242__auto____11178 == null)) {
    return h__2242__auto____11178
  }else {
    var h__2242__auto____11179 = cljs.core.hash_imap.call(null, coll);
    this__11177.__hash = h__2242__auto____11179;
    return h__2242__auto____11179
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11180 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11181 = this;
  if(k == null) {
    if(this__11181.has_nil_QMARK_) {
      return this__11181.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__11181.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__11181.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11182 = this;
  if(k == null) {
    if(function() {
      var and__3822__auto____11183 = this__11182.has_nil_QMARK_;
      if(and__3822__auto____11183) {
        return v === this__11182.nil_val
      }else {
        return and__3822__auto____11183
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__11182.meta, this__11182.has_nil_QMARK_ ? this__11182.cnt : this__11182.cnt + 1, this__11182.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___11184 = new cljs.core.Box(false);
    var new_root__11185 = (this__11182.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__11182.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___11184);
    if(new_root__11185 === this__11182.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__11182.meta, added_leaf_QMARK___11184.val ? this__11182.cnt + 1 : this__11182.cnt, new_root__11185, this__11182.has_nil_QMARK_, this__11182.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11186 = this;
  if(k == null) {
    return this__11186.has_nil_QMARK_
  }else {
    if(this__11186.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__11186.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11209 = null;
  var G__11209__2 = function(this_sym11187, k) {
    var this__11189 = this;
    var this_sym11187__11190 = this;
    var coll__11191 = this_sym11187__11190;
    return coll__11191.cljs$core$ILookup$_lookup$arity$2(coll__11191, k)
  };
  var G__11209__3 = function(this_sym11188, k, not_found) {
    var this__11189 = this;
    var this_sym11188__11192 = this;
    var coll__11193 = this_sym11188__11192;
    return coll__11193.cljs$core$ILookup$_lookup$arity$3(coll__11193, k, not_found)
  };
  G__11209 = function(this_sym11188, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11209__2.call(this, this_sym11188, k);
      case 3:
        return G__11209__3.call(this, this_sym11188, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11209
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym11174, args11175) {
  var this__11194 = this;
  return this_sym11174.call.apply(this_sym11174, [this_sym11174].concat(args11175.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11195 = this;
  var init__11196 = this__11195.has_nil_QMARK_ ? f.call(null, init, null, this__11195.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__11196)) {
    return cljs.core.deref.call(null, init__11196)
  }else {
    if(!(this__11195.root == null)) {
      return this__11195.root.kv_reduce(f, init__11196)
    }else {
      if("\ufdd0'else") {
        return init__11196
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11197 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__11198 = this;
  var this__11199 = this;
  return cljs.core.pr_str.call(null, this__11199)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11200 = this;
  if(this__11200.cnt > 0) {
    var s__11201 = !(this__11200.root == null) ? this__11200.root.inode_seq() : null;
    if(this__11200.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__11200.nil_val], true), s__11201)
    }else {
      return s__11201
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11202 = this;
  return this__11202.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11203 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11204 = this;
  return new cljs.core.PersistentHashMap(meta, this__11204.cnt, this__11204.root, this__11204.has_nil_QMARK_, this__11204.nil_val, this__11204.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11205 = this;
  return this__11205.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11206 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__11206.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11207 = this;
  if(k == null) {
    if(this__11207.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__11207.meta, this__11207.cnt - 1, this__11207.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__11207.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__11208 = this__11207.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__11208 === this__11207.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__11207.meta, this__11207.cnt - 1, new_root__11208, this__11207.has_nil_QMARK_, this__11207.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__11210 = ks.length;
  var i__11211 = 0;
  var out__11212 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__11211 < len__11210) {
      var G__11213 = i__11211 + 1;
      var G__11214 = cljs.core.assoc_BANG_.call(null, out__11212, ks[i__11211], vs[i__11211]);
      i__11211 = G__11213;
      out__11212 = G__11214;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11212)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__11215 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__11216 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__11217 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11218 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__11219 = this;
  if(k == null) {
    if(this__11219.has_nil_QMARK_) {
      return this__11219.nil_val
    }else {
      return null
    }
  }else {
    if(this__11219.root == null) {
      return null
    }else {
      return this__11219.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__11220 = this;
  if(k == null) {
    if(this__11220.has_nil_QMARK_) {
      return this__11220.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__11220.root == null) {
      return not_found
    }else {
      return this__11220.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11221 = this;
  if(this__11221.edit) {
    return this__11221.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__11222 = this;
  var tcoll__11223 = this;
  if(this__11222.edit) {
    if(function() {
      var G__11224__11225 = o;
      if(G__11224__11225) {
        if(function() {
          var or__3824__auto____11226 = G__11224__11225.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3824__auto____11226) {
            return or__3824__auto____11226
          }else {
            return G__11224__11225.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__11224__11225.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11224__11225)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__11224__11225)
      }
    }()) {
      return tcoll__11223.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__11227 = cljs.core.seq.call(null, o);
      var tcoll__11228 = tcoll__11223;
      while(true) {
        var temp__3971__auto____11229 = cljs.core.first.call(null, es__11227);
        if(cljs.core.truth_(temp__3971__auto____11229)) {
          var e__11230 = temp__3971__auto____11229;
          var G__11241 = cljs.core.next.call(null, es__11227);
          var G__11242 = tcoll__11228.assoc_BANG_(cljs.core.key.call(null, e__11230), cljs.core.val.call(null, e__11230));
          es__11227 = G__11241;
          tcoll__11228 = G__11242;
          continue
        }else {
          return tcoll__11228
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__11231 = this;
  var tcoll__11232 = this;
  if(this__11231.edit) {
    if(k == null) {
      if(this__11231.nil_val === v) {
      }else {
        this__11231.nil_val = v
      }
      if(this__11231.has_nil_QMARK_) {
      }else {
        this__11231.count = this__11231.count + 1;
        this__11231.has_nil_QMARK_ = true
      }
      return tcoll__11232
    }else {
      var added_leaf_QMARK___11233 = new cljs.core.Box(false);
      var node__11234 = (this__11231.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__11231.root).inode_assoc_BANG_(this__11231.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___11233);
      if(node__11234 === this__11231.root) {
      }else {
        this__11231.root = node__11234
      }
      if(added_leaf_QMARK___11233.val) {
        this__11231.count = this__11231.count + 1
      }else {
      }
      return tcoll__11232
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__11235 = this;
  var tcoll__11236 = this;
  if(this__11235.edit) {
    if(k == null) {
      if(this__11235.has_nil_QMARK_) {
        this__11235.has_nil_QMARK_ = false;
        this__11235.nil_val = null;
        this__11235.count = this__11235.count - 1;
        return tcoll__11236
      }else {
        return tcoll__11236
      }
    }else {
      if(this__11235.root == null) {
        return tcoll__11236
      }else {
        var removed_leaf_QMARK___11237 = new cljs.core.Box(false);
        var node__11238 = this__11235.root.inode_without_BANG_(this__11235.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___11237);
        if(node__11238 === this__11235.root) {
        }else {
          this__11235.root = node__11238
        }
        if(cljs.core.truth_(removed_leaf_QMARK___11237[0])) {
          this__11235.count = this__11235.count - 1
        }else {
        }
        return tcoll__11236
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__11239 = this;
  var tcoll__11240 = this;
  if(this__11239.edit) {
    this__11239.edit = null;
    return new cljs.core.PersistentHashMap(null, this__11239.count, this__11239.root, this__11239.has_nil_QMARK_, this__11239.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__11245 = node;
  var stack__11246 = stack;
  while(true) {
    if(!(t__11245 == null)) {
      var G__11247 = ascending_QMARK_ ? t__11245.left : t__11245.right;
      var G__11248 = cljs.core.conj.call(null, stack__11246, t__11245);
      t__11245 = G__11247;
      stack__11246 = G__11248;
      continue
    }else {
      return stack__11246
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11249 = this;
  var h__2242__auto____11250 = this__11249.__hash;
  if(!(h__2242__auto____11250 == null)) {
    return h__2242__auto____11250
  }else {
    var h__2242__auto____11251 = cljs.core.hash_coll.call(null, coll);
    this__11249.__hash = h__2242__auto____11251;
    return h__2242__auto____11251
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11252 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__11253 = this;
  var this__11254 = this;
  return cljs.core.pr_str.call(null, this__11254)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__11255 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11256 = this;
  if(this__11256.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__11256.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__11257 = this;
  return cljs.core.peek.call(null, this__11257.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__11258 = this;
  var t__11259 = cljs.core.first.call(null, this__11258.stack);
  var next_stack__11260 = cljs.core.tree_map_seq_push.call(null, this__11258.ascending_QMARK_ ? t__11259.right : t__11259.left, cljs.core.next.call(null, this__11258.stack), this__11258.ascending_QMARK_);
  if(!(next_stack__11260 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__11260, this__11258.ascending_QMARK_, this__11258.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11261 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11262 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__11262.stack, this__11262.ascending_QMARK_, this__11262.cnt, this__11262.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11263 = this;
  return this__11263.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3822__auto____11265 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3822__auto____11265) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3822__auto____11265
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3822__auto____11267 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3822__auto____11267) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3822__auto____11267
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__11271 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__11271)) {
    return cljs.core.deref.call(null, init__11271)
  }else {
    var init__11272 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__11271) : init__11271;
    if(cljs.core.reduced_QMARK_.call(null, init__11272)) {
      return cljs.core.deref.call(null, init__11272)
    }else {
      var init__11273 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__11272) : init__11272;
      if(cljs.core.reduced_QMARK_.call(null, init__11273)) {
        return cljs.core.deref.call(null, init__11273)
      }else {
        return init__11273
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11276 = this;
  var h__2242__auto____11277 = this__11276.__hash;
  if(!(h__2242__auto____11277 == null)) {
    return h__2242__auto____11277
  }else {
    var h__2242__auto____11278 = cljs.core.hash_coll.call(null, coll);
    this__11276.__hash = h__2242__auto____11278;
    return h__2242__auto____11278
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11279 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11280 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11281 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11281.key, this__11281.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11329 = null;
  var G__11329__2 = function(this_sym11282, k) {
    var this__11284 = this;
    var this_sym11282__11285 = this;
    var node__11286 = this_sym11282__11285;
    return node__11286.cljs$core$ILookup$_lookup$arity$2(node__11286, k)
  };
  var G__11329__3 = function(this_sym11283, k, not_found) {
    var this__11284 = this;
    var this_sym11283__11287 = this;
    var node__11288 = this_sym11283__11287;
    return node__11288.cljs$core$ILookup$_lookup$arity$3(node__11288, k, not_found)
  };
  G__11329 = function(this_sym11283, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11329__2.call(this, this_sym11283, k);
      case 3:
        return G__11329__3.call(this, this_sym11283, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11329
}();
cljs.core.BlackNode.prototype.apply = function(this_sym11274, args11275) {
  var this__11289 = this;
  return this_sym11274.call.apply(this_sym11274, [this_sym11274].concat(args11275.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11290 = this;
  return cljs.core.PersistentVector.fromArray([this__11290.key, this__11290.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11291 = this;
  return this__11291.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11292 = this;
  return this__11292.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__11293 = this;
  var node__11294 = this;
  return ins.balance_right(node__11294)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__11295 = this;
  var node__11296 = this;
  return new cljs.core.RedNode(this__11295.key, this__11295.val, this__11295.left, this__11295.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__11297 = this;
  var node__11298 = this;
  return cljs.core.balance_right_del.call(null, this__11297.key, this__11297.val, this__11297.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__11299 = this;
  var node__11300 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__11301 = this;
  var node__11302 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11302, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__11303 = this;
  var node__11304 = this;
  return cljs.core.balance_left_del.call(null, this__11303.key, this__11303.val, del, this__11303.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__11305 = this;
  var node__11306 = this;
  return ins.balance_left(node__11306)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__11307 = this;
  var node__11308 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__11308, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__11330 = null;
  var G__11330__0 = function() {
    var this__11309 = this;
    var this__11311 = this;
    return cljs.core.pr_str.call(null, this__11311)
  };
  G__11330 = function() {
    switch(arguments.length) {
      case 0:
        return G__11330__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11330
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__11312 = this;
  var node__11313 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11313, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__11314 = this;
  var node__11315 = this;
  return node__11315
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11316 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11317 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11318 = this;
  return cljs.core.list.call(null, this__11318.key, this__11318.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11319 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11320 = this;
  return this__11320.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11321 = this;
  return cljs.core.PersistentVector.fromArray([this__11321.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11322 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11322.key, this__11322.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11323 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11324 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11324.key, this__11324.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11325 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11326 = this;
  if(n === 0) {
    return this__11326.key
  }else {
    if(n === 1) {
      return this__11326.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11327 = this;
  if(n === 0) {
    return this__11327.key
  }else {
    if(n === 1) {
      return this__11327.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11328 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11333 = this;
  var h__2242__auto____11334 = this__11333.__hash;
  if(!(h__2242__auto____11334 == null)) {
    return h__2242__auto____11334
  }else {
    var h__2242__auto____11335 = cljs.core.hash_coll.call(null, coll);
    this__11333.__hash = h__2242__auto____11335;
    return h__2242__auto____11335
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__11336 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__11337 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__11338 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__11338.key, this__11338.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__11386 = null;
  var G__11386__2 = function(this_sym11339, k) {
    var this__11341 = this;
    var this_sym11339__11342 = this;
    var node__11343 = this_sym11339__11342;
    return node__11343.cljs$core$ILookup$_lookup$arity$2(node__11343, k)
  };
  var G__11386__3 = function(this_sym11340, k, not_found) {
    var this__11341 = this;
    var this_sym11340__11344 = this;
    var node__11345 = this_sym11340__11344;
    return node__11345.cljs$core$ILookup$_lookup$arity$3(node__11345, k, not_found)
  };
  G__11386 = function(this_sym11340, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11386__2.call(this, this_sym11340, k);
      case 3:
        return G__11386__3.call(this, this_sym11340, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11386
}();
cljs.core.RedNode.prototype.apply = function(this_sym11331, args11332) {
  var this__11346 = this;
  return this_sym11331.call.apply(this_sym11331, [this_sym11331].concat(args11332.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__11347 = this;
  return cljs.core.PersistentVector.fromArray([this__11347.key, this__11347.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__11348 = this;
  return this__11348.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__11349 = this;
  return this__11349.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__11350 = this;
  var node__11351 = this;
  return new cljs.core.RedNode(this__11350.key, this__11350.val, this__11350.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__11352 = this;
  var node__11353 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__11354 = this;
  var node__11355 = this;
  return new cljs.core.RedNode(this__11354.key, this__11354.val, this__11354.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__11356 = this;
  var node__11357 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__11358 = this;
  var node__11359 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__11359, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__11360 = this;
  var node__11361 = this;
  return new cljs.core.RedNode(this__11360.key, this__11360.val, del, this__11360.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__11362 = this;
  var node__11363 = this;
  return new cljs.core.RedNode(this__11362.key, this__11362.val, ins, this__11362.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__11364 = this;
  var node__11365 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11364.left)) {
    return new cljs.core.RedNode(this__11364.key, this__11364.val, this__11364.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__11364.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11364.right)) {
      return new cljs.core.RedNode(this__11364.right.key, this__11364.right.val, new cljs.core.BlackNode(this__11364.key, this__11364.val, this__11364.left, this__11364.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__11364.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__11365, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__11387 = null;
  var G__11387__0 = function() {
    var this__11366 = this;
    var this__11368 = this;
    return cljs.core.pr_str.call(null, this__11368)
  };
  G__11387 = function() {
    switch(arguments.length) {
      case 0:
        return G__11387__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11387
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__11369 = this;
  var node__11370 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11369.right)) {
    return new cljs.core.RedNode(this__11369.key, this__11369.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11369.left, null), this__11369.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__11369.left)) {
      return new cljs.core.RedNode(this__11369.left.key, this__11369.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__11369.left.left, null), new cljs.core.BlackNode(this__11369.key, this__11369.val, this__11369.left.right, this__11369.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__11370, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__11371 = this;
  var node__11372 = this;
  return new cljs.core.BlackNode(this__11371.key, this__11371.val, this__11371.left, this__11371.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__11373 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__11374 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__11375 = this;
  return cljs.core.list.call(null, this__11375.key, this__11375.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__11376 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__11377 = this;
  return this__11377.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__11378 = this;
  return cljs.core.PersistentVector.fromArray([this__11378.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__11379 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__11379.key, this__11379.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11380 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__11381 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__11381.key, this__11381.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__11382 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__11383 = this;
  if(n === 0) {
    return this__11383.key
  }else {
    if(n === 1) {
      return this__11383.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__11384 = this;
  if(n === 0) {
    return this__11384.key
  }else {
    if(n === 1) {
      return this__11384.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__11385 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__11391 = comp.call(null, k, tree.key);
    if(c__11391 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__11391 < 0) {
        var ins__11392 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__11392 == null)) {
          return tree.add_left(ins__11392)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__11393 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__11393 == null)) {
            return tree.add_right(ins__11393)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__11396 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11396)) {
            return new cljs.core.RedNode(app__11396.key, app__11396.val, new cljs.core.RedNode(left.key, left.val, left.left, app__11396.left, null), new cljs.core.RedNode(right.key, right.val, app__11396.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__11396, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__11397 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__11397)) {
              return new cljs.core.RedNode(app__11397.key, app__11397.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__11397.left, null), new cljs.core.BlackNode(right.key, right.val, app__11397.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__11397, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__11403 = comp.call(null, k, tree.key);
    if(c__11403 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__11403 < 0) {
        var del__11404 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3824__auto____11405 = !(del__11404 == null);
          if(or__3824__auto____11405) {
            return or__3824__auto____11405
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__11404, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__11404, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__11406 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3824__auto____11407 = !(del__11406 == null);
            if(or__3824__auto____11407) {
              return or__3824__auto____11407
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__11406)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__11406, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__11410 = tree.key;
  var c__11411 = comp.call(null, k, tk__11410);
  if(c__11411 === 0) {
    return tree.replace(tk__11410, v, tree.left, tree.right)
  }else {
    if(c__11411 < 0) {
      return tree.replace(tk__11410, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__11410, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11414 = this;
  var h__2242__auto____11415 = this__11414.__hash;
  if(!(h__2242__auto____11415 == null)) {
    return h__2242__auto____11415
  }else {
    var h__2242__auto____11416 = cljs.core.hash_imap.call(null, coll);
    this__11414.__hash = h__2242__auto____11416;
    return h__2242__auto____11416
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__11417 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__11418 = this;
  var n__11419 = coll.entry_at(k);
  if(!(n__11419 == null)) {
    return n__11419.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__11420 = this;
  var found__11421 = [null];
  var t__11422 = cljs.core.tree_map_add.call(null, this__11420.comp, this__11420.tree, k, v, found__11421);
  if(t__11422 == null) {
    var found_node__11423 = cljs.core.nth.call(null, found__11421, 0);
    if(cljs.core._EQ_.call(null, v, found_node__11423.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11420.comp, cljs.core.tree_map_replace.call(null, this__11420.comp, this__11420.tree, k, v), this__11420.cnt, this__11420.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11420.comp, t__11422.blacken(), this__11420.cnt + 1, this__11420.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__11424 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11458 = null;
  var G__11458__2 = function(this_sym11425, k) {
    var this__11427 = this;
    var this_sym11425__11428 = this;
    var coll__11429 = this_sym11425__11428;
    return coll__11429.cljs$core$ILookup$_lookup$arity$2(coll__11429, k)
  };
  var G__11458__3 = function(this_sym11426, k, not_found) {
    var this__11427 = this;
    var this_sym11426__11430 = this;
    var coll__11431 = this_sym11426__11430;
    return coll__11431.cljs$core$ILookup$_lookup$arity$3(coll__11431, k, not_found)
  };
  G__11458 = function(this_sym11426, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11458__2.call(this, this_sym11426, k);
      case 3:
        return G__11458__3.call(this, this_sym11426, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11458
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym11412, args11413) {
  var this__11432 = this;
  return this_sym11412.call.apply(this_sym11412, [this_sym11412].concat(args11413.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__11433 = this;
  if(!(this__11433.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__11433.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__11434 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11435 = this;
  if(this__11435.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11435.tree, false, this__11435.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__11436 = this;
  var this__11437 = this;
  return cljs.core.pr_str.call(null, this__11437)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__11438 = this;
  var coll__11439 = this;
  var t__11440 = this__11438.tree;
  while(true) {
    if(!(t__11440 == null)) {
      var c__11441 = this__11438.comp.call(null, k, t__11440.key);
      if(c__11441 === 0) {
        return t__11440
      }else {
        if(c__11441 < 0) {
          var G__11459 = t__11440.left;
          t__11440 = G__11459;
          continue
        }else {
          if("\ufdd0'else") {
            var G__11460 = t__11440.right;
            t__11440 = G__11460;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11442 = this;
  if(this__11442.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11442.tree, ascending_QMARK_, this__11442.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11443 = this;
  if(this__11443.cnt > 0) {
    var stack__11444 = null;
    var t__11445 = this__11443.tree;
    while(true) {
      if(!(t__11445 == null)) {
        var c__11446 = this__11443.comp.call(null, k, t__11445.key);
        if(c__11446 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__11444, t__11445), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__11446 < 0) {
              var G__11461 = cljs.core.conj.call(null, stack__11444, t__11445);
              var G__11462 = t__11445.left;
              stack__11444 = G__11461;
              t__11445 = G__11462;
              continue
            }else {
              var G__11463 = stack__11444;
              var G__11464 = t__11445.right;
              stack__11444 = G__11463;
              t__11445 = G__11464;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__11446 > 0) {
                var G__11465 = cljs.core.conj.call(null, stack__11444, t__11445);
                var G__11466 = t__11445.right;
                stack__11444 = G__11465;
                t__11445 = G__11466;
                continue
              }else {
                var G__11467 = stack__11444;
                var G__11468 = t__11445.left;
                stack__11444 = G__11467;
                t__11445 = G__11468;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__11444 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__11444, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11447 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11448 = this;
  return this__11448.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11449 = this;
  if(this__11449.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__11449.tree, true, this__11449.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11450 = this;
  return this__11450.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11451 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11452 = this;
  return new cljs.core.PersistentTreeMap(this__11452.comp, this__11452.tree, this__11452.cnt, meta, this__11452.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11453 = this;
  return this__11453.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11454 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__11454.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__11455 = this;
  var found__11456 = [null];
  var t__11457 = cljs.core.tree_map_remove.call(null, this__11455.comp, this__11455.tree, k, found__11456);
  if(t__11457 == null) {
    if(cljs.core.nth.call(null, found__11456, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__11455.comp, null, 0, this__11455.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__11455.comp, t__11457.blacken(), this__11455.cnt - 1, this__11455.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__11471 = cljs.core.seq.call(null, keyvals);
    var out__11472 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__11471) {
        var G__11473 = cljs.core.nnext.call(null, in__11471);
        var G__11474 = cljs.core.assoc_BANG_.call(null, out__11472, cljs.core.first.call(null, in__11471), cljs.core.second.call(null, in__11471));
        in__11471 = G__11473;
        out__11472 = G__11474;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__11472)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__11475) {
    var keyvals = cljs.core.seq(arglist__11475);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__11476) {
    var keyvals = cljs.core.seq(arglist__11476);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__11480 = [];
    var obj__11481 = {};
    var kvs__11482 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__11482) {
        ks__11480.push(cljs.core.first.call(null, kvs__11482));
        obj__11481[cljs.core.first.call(null, kvs__11482)] = cljs.core.second.call(null, kvs__11482);
        var G__11483 = cljs.core.nnext.call(null, kvs__11482);
        kvs__11482 = G__11483;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__11480, obj__11481)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__11484) {
    var keyvals = cljs.core.seq(arglist__11484);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__11487 = cljs.core.seq.call(null, keyvals);
    var out__11488 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__11487) {
        var G__11489 = cljs.core.nnext.call(null, in__11487);
        var G__11490 = cljs.core.assoc.call(null, out__11488, cljs.core.first.call(null, in__11487), cljs.core.second.call(null, in__11487));
        in__11487 = G__11489;
        out__11488 = G__11490;
        continue
      }else {
        return out__11488
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__11491) {
    var keyvals = cljs.core.seq(arglist__11491);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__11494 = cljs.core.seq.call(null, keyvals);
    var out__11495 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__11494) {
        var G__11496 = cljs.core.nnext.call(null, in__11494);
        var G__11497 = cljs.core.assoc.call(null, out__11495, cljs.core.first.call(null, in__11494), cljs.core.second.call(null, in__11494));
        in__11494 = G__11496;
        out__11495 = G__11497;
        continue
      }else {
        return out__11495
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__11498) {
    var comparator = cljs.core.first(arglist__11498);
    var keyvals = cljs.core.rest(arglist__11498);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__11499_SHARP_, p2__11500_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3824__auto____11502 = p1__11499_SHARP_;
          if(cljs.core.truth_(or__3824__auto____11502)) {
            return or__3824__auto____11502
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__11500_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__11503) {
    var maps = cljs.core.seq(arglist__11503);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__11511 = function(m, e) {
        var k__11509 = cljs.core.first.call(null, e);
        var v__11510 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__11509)) {
          return cljs.core.assoc.call(null, m, k__11509, f.call(null, cljs.core._lookup.call(null, m, k__11509, null), v__11510))
        }else {
          return cljs.core.assoc.call(null, m, k__11509, v__11510)
        }
      };
      var merge2__11513 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__11511, function() {
          var or__3824__auto____11512 = m1;
          if(cljs.core.truth_(or__3824__auto____11512)) {
            return or__3824__auto____11512
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__11513, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__11514) {
    var f = cljs.core.first(arglist__11514);
    var maps = cljs.core.rest(arglist__11514);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__11519 = cljs.core.ObjMap.EMPTY;
  var keys__11520 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__11520) {
      var key__11521 = cljs.core.first.call(null, keys__11520);
      var entry__11522 = cljs.core._lookup.call(null, map, key__11521, "\ufdd0'user/not-found");
      var G__11523 = cljs.core.not_EQ_.call(null, entry__11522, "\ufdd0'user/not-found") ? cljs.core.assoc.call(null, ret__11519, key__11521, entry__11522) : ret__11519;
      var G__11524 = cljs.core.next.call(null, keys__11520);
      ret__11519 = G__11523;
      keys__11520 = G__11524;
      continue
    }else {
      return ret__11519
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__11528 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__11528.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11529 = this;
  var h__2242__auto____11530 = this__11529.__hash;
  if(!(h__2242__auto____11530 == null)) {
    return h__2242__auto____11530
  }else {
    var h__2242__auto____11531 = cljs.core.hash_iset.call(null, coll);
    this__11529.__hash = h__2242__auto____11531;
    return h__2242__auto____11531
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11532 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11533 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11533.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11554 = null;
  var G__11554__2 = function(this_sym11534, k) {
    var this__11536 = this;
    var this_sym11534__11537 = this;
    var coll__11538 = this_sym11534__11537;
    return coll__11538.cljs$core$ILookup$_lookup$arity$2(coll__11538, k)
  };
  var G__11554__3 = function(this_sym11535, k, not_found) {
    var this__11536 = this;
    var this_sym11535__11539 = this;
    var coll__11540 = this_sym11535__11539;
    return coll__11540.cljs$core$ILookup$_lookup$arity$3(coll__11540, k, not_found)
  };
  G__11554 = function(this_sym11535, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11554__2.call(this, this_sym11535, k);
      case 3:
        return G__11554__3.call(this, this_sym11535, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11554
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym11526, args11527) {
  var this__11541 = this;
  return this_sym11526.call.apply(this_sym11526, [this_sym11526].concat(args11527.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11542 = this;
  return new cljs.core.PersistentHashSet(this__11542.meta, cljs.core.assoc.call(null, this__11542.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__11543 = this;
  var this__11544 = this;
  return cljs.core.pr_str.call(null, this__11544)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11545 = this;
  return cljs.core.keys.call(null, this__11545.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11546 = this;
  return new cljs.core.PersistentHashSet(this__11546.meta, cljs.core.dissoc.call(null, this__11546.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11547 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11548 = this;
  var and__3822__auto____11549 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11549) {
    var and__3822__auto____11550 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11550) {
      return cljs.core.every_QMARK_.call(null, function(p1__11525_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11525_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11550
    }
  }else {
    return and__3822__auto____11549
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11551 = this;
  return new cljs.core.PersistentHashSet(meta, this__11551.hash_map, this__11551.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11552 = this;
  return this__11552.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11553 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__11553.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__11555 = cljs.core.count.call(null, items);
  var i__11556 = 0;
  var out__11557 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__11556 < len__11555) {
      var G__11558 = i__11556 + 1;
      var G__11559 = cljs.core.conj_BANG_.call(null, out__11557, items[i__11556]);
      i__11556 = G__11558;
      out__11557 = G__11559;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__11557)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11577 = null;
  var G__11577__2 = function(this_sym11563, k) {
    var this__11565 = this;
    var this_sym11563__11566 = this;
    var tcoll__11567 = this_sym11563__11566;
    if(cljs.core._lookup.call(null, this__11565.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__11577__3 = function(this_sym11564, k, not_found) {
    var this__11565 = this;
    var this_sym11564__11568 = this;
    var tcoll__11569 = this_sym11564__11568;
    if(cljs.core._lookup.call(null, this__11565.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__11577 = function(this_sym11564, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11577__2.call(this, this_sym11564, k);
      case 3:
        return G__11577__3.call(this, this_sym11564, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11577
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym11561, args11562) {
  var this__11570 = this;
  return this_sym11561.call.apply(this_sym11561, [this_sym11561].concat(args11562.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__11571 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__11572 = this;
  if(cljs.core._lookup.call(null, this__11572.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__11573 = this;
  return cljs.core.count.call(null, this__11573.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__11574 = this;
  this__11574.transient_map = cljs.core.dissoc_BANG_.call(null, this__11574.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__11575 = this;
  this__11575.transient_map = cljs.core.assoc_BANG_.call(null, this__11575.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__11576 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__11576.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__11580 = this;
  var h__2242__auto____11581 = this__11580.__hash;
  if(!(h__2242__auto____11581 == null)) {
    return h__2242__auto____11581
  }else {
    var h__2242__auto____11582 = cljs.core.hash_iset.call(null, coll);
    this__11580.__hash = h__2242__auto____11582;
    return h__2242__auto____11582
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__11583 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__11584 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__11584.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11610 = null;
  var G__11610__2 = function(this_sym11585, k) {
    var this__11587 = this;
    var this_sym11585__11588 = this;
    var coll__11589 = this_sym11585__11588;
    return coll__11589.cljs$core$ILookup$_lookup$arity$2(coll__11589, k)
  };
  var G__11610__3 = function(this_sym11586, k, not_found) {
    var this__11587 = this;
    var this_sym11586__11590 = this;
    var coll__11591 = this_sym11586__11590;
    return coll__11591.cljs$core$ILookup$_lookup$arity$3(coll__11591, k, not_found)
  };
  G__11610 = function(this_sym11586, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11610__2.call(this, this_sym11586, k);
      case 3:
        return G__11610__3.call(this, this_sym11586, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__11610
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym11578, args11579) {
  var this__11592 = this;
  return this_sym11578.call.apply(this_sym11578, [this_sym11578].concat(args11579.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__11593 = this;
  return new cljs.core.PersistentTreeSet(this__11593.meta, cljs.core.assoc.call(null, this__11593.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__11594 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__11594.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__11595 = this;
  var this__11596 = this;
  return cljs.core.pr_str.call(null, this__11596)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__11597 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__11597.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__11598 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__11598.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__11599 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__11600 = this;
  return cljs.core._comparator.call(null, this__11600.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__11601 = this;
  return cljs.core.keys.call(null, this__11601.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__11602 = this;
  return new cljs.core.PersistentTreeSet(this__11602.meta, cljs.core.dissoc.call(null, this__11602.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__11603 = this;
  return cljs.core.count.call(null, this__11603.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__11604 = this;
  var and__3822__auto____11605 = cljs.core.set_QMARK_.call(null, other);
  if(and__3822__auto____11605) {
    var and__3822__auto____11606 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3822__auto____11606) {
      return cljs.core.every_QMARK_.call(null, function(p1__11560_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__11560_SHARP_)
      }, other)
    }else {
      return and__3822__auto____11606
    }
  }else {
    return and__3822__auto____11605
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__11607 = this;
  return new cljs.core.PersistentTreeSet(meta, this__11607.tree_map, this__11607.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__11608 = this;
  return this__11608.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__11609 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__11609.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__11615__delegate = function(keys) {
      var in__11613 = cljs.core.seq.call(null, keys);
      var out__11614 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__11613)) {
          var G__11616 = cljs.core.next.call(null, in__11613);
          var G__11617 = cljs.core.conj_BANG_.call(null, out__11614, cljs.core.first.call(null, in__11613));
          in__11613 = G__11616;
          out__11614 = G__11617;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__11614)
        }
        break
      }
    };
    var G__11615 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__11615__delegate.call(this, keys)
    };
    G__11615.cljs$lang$maxFixedArity = 0;
    G__11615.cljs$lang$applyTo = function(arglist__11618) {
      var keys = cljs.core.seq(arglist__11618);
      return G__11615__delegate(keys)
    };
    G__11615.cljs$lang$arity$variadic = G__11615__delegate;
    return G__11615
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__11619) {
    var keys = cljs.core.seq(arglist__11619);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__11621) {
    var comparator = cljs.core.first(arglist__11621);
    var keys = cljs.core.rest(arglist__11621);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__11627 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__3971__auto____11628 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__3971__auto____11628)) {
        var e__11629 = temp__3971__auto____11628;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__11629))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__11627, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__11620_SHARP_) {
      var temp__3971__auto____11630 = cljs.core.find.call(null, smap, p1__11620_SHARP_);
      if(cljs.core.truth_(temp__3971__auto____11630)) {
        var e__11631 = temp__3971__auto____11630;
        return cljs.core.second.call(null, e__11631)
      }else {
        return p1__11620_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__11661 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__11654, seen) {
        while(true) {
          var vec__11655__11656 = p__11654;
          var f__11657 = cljs.core.nth.call(null, vec__11655__11656, 0, null);
          var xs__11658 = vec__11655__11656;
          var temp__3974__auto____11659 = cljs.core.seq.call(null, xs__11658);
          if(temp__3974__auto____11659) {
            var s__11660 = temp__3974__auto____11659;
            if(cljs.core.contains_QMARK_.call(null, seen, f__11657)) {
              var G__11662 = cljs.core.rest.call(null, s__11660);
              var G__11663 = seen;
              p__11654 = G__11662;
              seen = G__11663;
              continue
            }else {
              return cljs.core.cons.call(null, f__11657, step.call(null, cljs.core.rest.call(null, s__11660), cljs.core.conj.call(null, seen, f__11657)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__11661.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__11666 = cljs.core.PersistentVector.EMPTY;
  var s__11667 = s;
  while(true) {
    if(cljs.core.next.call(null, s__11667)) {
      var G__11668 = cljs.core.conj.call(null, ret__11666, cljs.core.first.call(null, s__11667));
      var G__11669 = cljs.core.next.call(null, s__11667);
      ret__11666 = G__11668;
      s__11667 = G__11669;
      continue
    }else {
      return cljs.core.seq.call(null, ret__11666)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3824__auto____11672 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3824__auto____11672) {
        return or__3824__auto____11672
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__11673 = x.lastIndexOf("/");
      if(i__11673 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__11673 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3824__auto____11676 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____11676) {
      return or__3824__auto____11676
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__11677 = x.lastIndexOf("/");
    if(i__11677 > -1) {
      return cljs.core.subs.call(null, x, 2, i__11677)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__11684 = cljs.core.ObjMap.EMPTY;
  var ks__11685 = cljs.core.seq.call(null, keys);
  var vs__11686 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3822__auto____11687 = ks__11685;
      if(and__3822__auto____11687) {
        return vs__11686
      }else {
        return and__3822__auto____11687
      }
    }()) {
      var G__11688 = cljs.core.assoc.call(null, map__11684, cljs.core.first.call(null, ks__11685), cljs.core.first.call(null, vs__11686));
      var G__11689 = cljs.core.next.call(null, ks__11685);
      var G__11690 = cljs.core.next.call(null, vs__11686);
      map__11684 = G__11688;
      ks__11685 = G__11689;
      vs__11686 = G__11690;
      continue
    }else {
      return map__11684
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__11693__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11678_SHARP_, p2__11679_SHARP_) {
        return max_key.call(null, k, p1__11678_SHARP_, p2__11679_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__11693 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11693__delegate.call(this, k, x, y, more)
    };
    G__11693.cljs$lang$maxFixedArity = 3;
    G__11693.cljs$lang$applyTo = function(arglist__11694) {
      var k = cljs.core.first(arglist__11694);
      var x = cljs.core.first(cljs.core.next(arglist__11694));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11694)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11694)));
      return G__11693__delegate(k, x, y, more)
    };
    G__11693.cljs$lang$arity$variadic = G__11693__delegate;
    return G__11693
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__11695__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__11691_SHARP_, p2__11692_SHARP_) {
        return min_key.call(null, k, p1__11691_SHARP_, p2__11692_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__11695 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11695__delegate.call(this, k, x, y, more)
    };
    G__11695.cljs$lang$maxFixedArity = 3;
    G__11695.cljs$lang$applyTo = function(arglist__11696) {
      var k = cljs.core.first(arglist__11696);
      var x = cljs.core.first(cljs.core.next(arglist__11696));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11696)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11696)));
      return G__11695__delegate(k, x, y, more)
    };
    G__11695.cljs$lang$arity$variadic = G__11695__delegate;
    return G__11695
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11699 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11699) {
        var s__11700 = temp__3974__auto____11699;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__11700), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__11700)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11703 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11703) {
      var s__11704 = temp__3974__auto____11703;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__11704)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__11704), take_while.call(null, pred, cljs.core.rest.call(null, s__11704)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__11706 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__11706.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__11718 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__3974__auto____11719 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__3974__auto____11719)) {
        var vec__11720__11721 = temp__3974__auto____11719;
        var e__11722 = cljs.core.nth.call(null, vec__11720__11721, 0, null);
        var s__11723 = vec__11720__11721;
        if(cljs.core.truth_(include__11718.call(null, e__11722))) {
          return s__11723
        }else {
          return cljs.core.next.call(null, s__11723)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11718, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11724 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__3974__auto____11724)) {
      var vec__11725__11726 = temp__3974__auto____11724;
      var e__11727 = cljs.core.nth.call(null, vec__11725__11726, 0, null);
      var s__11728 = vec__11725__11726;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__11727)) ? s__11728 : cljs.core.next.call(null, s__11728))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__11740 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__3974__auto____11741 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__3974__auto____11741)) {
        var vec__11742__11743 = temp__3974__auto____11741;
        var e__11744 = cljs.core.nth.call(null, vec__11742__11743, 0, null);
        var s__11745 = vec__11742__11743;
        if(cljs.core.truth_(include__11740.call(null, e__11744))) {
          return s__11745
        }else {
          return cljs.core.next.call(null, s__11745)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__11740, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__3974__auto____11746 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__3974__auto____11746)) {
      var vec__11747__11748 = temp__3974__auto____11746;
      var e__11749 = cljs.core.nth.call(null, vec__11747__11748, 0, null);
      var s__11750 = vec__11747__11748;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__11749)) ? s__11750 : cljs.core.next.call(null, s__11750))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__11751 = this;
  var h__2242__auto____11752 = this__11751.__hash;
  if(!(h__2242__auto____11752 == null)) {
    return h__2242__auto____11752
  }else {
    var h__2242__auto____11753 = cljs.core.hash_coll.call(null, rng);
    this__11751.__hash = h__2242__auto____11753;
    return h__2242__auto____11753
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__11754 = this;
  if(this__11754.step > 0) {
    if(this__11754.start + this__11754.step < this__11754.end) {
      return new cljs.core.Range(this__11754.meta, this__11754.start + this__11754.step, this__11754.end, this__11754.step, null)
    }else {
      return null
    }
  }else {
    if(this__11754.start + this__11754.step > this__11754.end) {
      return new cljs.core.Range(this__11754.meta, this__11754.start + this__11754.step, this__11754.end, this__11754.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__11755 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__11756 = this;
  var this__11757 = this;
  return cljs.core.pr_str.call(null, this__11757)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__11758 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__11759 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__11760 = this;
  if(this__11760.step > 0) {
    if(this__11760.start < this__11760.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__11760.start > this__11760.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__11761 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__11761.end - this__11761.start) / this__11761.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__11762 = this;
  return this__11762.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__11763 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__11763.meta, this__11763.start + this__11763.step, this__11763.end, this__11763.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__11764 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__11765 = this;
  return new cljs.core.Range(meta, this__11765.start, this__11765.end, this__11765.step, this__11765.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__11766 = this;
  return this__11766.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__11767 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11767.start + n * this__11767.step
  }else {
    if(function() {
      var and__3822__auto____11768 = this__11767.start > this__11767.end;
      if(and__3822__auto____11768) {
        return this__11767.step === 0
      }else {
        return and__3822__auto____11768
      }
    }()) {
      return this__11767.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__11769 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__11769.start + n * this__11769.step
  }else {
    if(function() {
      var and__3822__auto____11770 = this__11769.start > this__11769.end;
      if(and__3822__auto____11770) {
        return this__11769.step === 0
      }else {
        return and__3822__auto____11770
      }
    }()) {
      return this__11769.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__11771 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__11771.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11774 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11774) {
      var s__11775 = temp__3974__auto____11774;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__11775), take_nth.call(null, n, cljs.core.drop.call(null, n, s__11775)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__3974__auto____11782 = cljs.core.seq.call(null, coll);
    if(temp__3974__auto____11782) {
      var s__11783 = temp__3974__auto____11782;
      var fst__11784 = cljs.core.first.call(null, s__11783);
      var fv__11785 = f.call(null, fst__11784);
      var run__11786 = cljs.core.cons.call(null, fst__11784, cljs.core.take_while.call(null, function(p1__11776_SHARP_) {
        return cljs.core._EQ_.call(null, fv__11785, f.call(null, p1__11776_SHARP_))
      }, cljs.core.next.call(null, s__11783)));
      return cljs.core.cons.call(null, run__11786, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__11786), s__11783))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__3971__auto____11801 = cljs.core.seq.call(null, coll);
      if(temp__3971__auto____11801) {
        var s__11802 = temp__3971__auto____11801;
        return reductions.call(null, f, cljs.core.first.call(null, s__11802), cljs.core.rest.call(null, s__11802))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__3974__auto____11803 = cljs.core.seq.call(null, coll);
      if(temp__3974__auto____11803) {
        var s__11804 = temp__3974__auto____11803;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__11804)), cljs.core.rest.call(null, s__11804))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__11807 = null;
      var G__11807__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__11807__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__11807__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__11807__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__11807__4 = function() {
        var G__11808__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__11808 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11808__delegate.call(this, x, y, z, args)
        };
        G__11808.cljs$lang$maxFixedArity = 3;
        G__11808.cljs$lang$applyTo = function(arglist__11809) {
          var x = cljs.core.first(arglist__11809);
          var y = cljs.core.first(cljs.core.next(arglist__11809));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11809)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11809)));
          return G__11808__delegate(x, y, z, args)
        };
        G__11808.cljs$lang$arity$variadic = G__11808__delegate;
        return G__11808
      }();
      G__11807 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11807__0.call(this);
          case 1:
            return G__11807__1.call(this, x);
          case 2:
            return G__11807__2.call(this, x, y);
          case 3:
            return G__11807__3.call(this, x, y, z);
          default:
            return G__11807__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11807.cljs$lang$maxFixedArity = 3;
      G__11807.cljs$lang$applyTo = G__11807__4.cljs$lang$applyTo;
      return G__11807
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__11810 = null;
      var G__11810__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__11810__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__11810__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__11810__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__11810__4 = function() {
        var G__11811__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__11811 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11811__delegate.call(this, x, y, z, args)
        };
        G__11811.cljs$lang$maxFixedArity = 3;
        G__11811.cljs$lang$applyTo = function(arglist__11812) {
          var x = cljs.core.first(arglist__11812);
          var y = cljs.core.first(cljs.core.next(arglist__11812));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11812)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11812)));
          return G__11811__delegate(x, y, z, args)
        };
        G__11811.cljs$lang$arity$variadic = G__11811__delegate;
        return G__11811
      }();
      G__11810 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11810__0.call(this);
          case 1:
            return G__11810__1.call(this, x);
          case 2:
            return G__11810__2.call(this, x, y);
          case 3:
            return G__11810__3.call(this, x, y, z);
          default:
            return G__11810__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11810.cljs$lang$maxFixedArity = 3;
      G__11810.cljs$lang$applyTo = G__11810__4.cljs$lang$applyTo;
      return G__11810
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__11813 = null;
      var G__11813__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__11813__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__11813__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__11813__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__11813__4 = function() {
        var G__11814__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__11814 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__11814__delegate.call(this, x, y, z, args)
        };
        G__11814.cljs$lang$maxFixedArity = 3;
        G__11814.cljs$lang$applyTo = function(arglist__11815) {
          var x = cljs.core.first(arglist__11815);
          var y = cljs.core.first(cljs.core.next(arglist__11815));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11815)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11815)));
          return G__11814__delegate(x, y, z, args)
        };
        G__11814.cljs$lang$arity$variadic = G__11814__delegate;
        return G__11814
      }();
      G__11813 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11813__0.call(this);
          case 1:
            return G__11813__1.call(this, x);
          case 2:
            return G__11813__2.call(this, x, y);
          case 3:
            return G__11813__3.call(this, x, y, z);
          default:
            return G__11813__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__11813.cljs$lang$maxFixedArity = 3;
      G__11813.cljs$lang$applyTo = G__11813__4.cljs$lang$applyTo;
      return G__11813
    }()
  };
  var juxt__4 = function() {
    var G__11816__delegate = function(f, g, h, fs) {
      var fs__11806 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__11817 = null;
        var G__11817__0 = function() {
          return cljs.core.reduce.call(null, function(p1__11787_SHARP_, p2__11788_SHARP_) {
            return cljs.core.conj.call(null, p1__11787_SHARP_, p2__11788_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__11806)
        };
        var G__11817__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__11789_SHARP_, p2__11790_SHARP_) {
            return cljs.core.conj.call(null, p1__11789_SHARP_, p2__11790_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__11806)
        };
        var G__11817__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__11791_SHARP_, p2__11792_SHARP_) {
            return cljs.core.conj.call(null, p1__11791_SHARP_, p2__11792_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__11806)
        };
        var G__11817__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__11793_SHARP_, p2__11794_SHARP_) {
            return cljs.core.conj.call(null, p1__11793_SHARP_, p2__11794_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__11806)
        };
        var G__11817__4 = function() {
          var G__11818__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__11795_SHARP_, p2__11796_SHARP_) {
              return cljs.core.conj.call(null, p1__11795_SHARP_, cljs.core.apply.call(null, p2__11796_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__11806)
          };
          var G__11818 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__11818__delegate.call(this, x, y, z, args)
          };
          G__11818.cljs$lang$maxFixedArity = 3;
          G__11818.cljs$lang$applyTo = function(arglist__11819) {
            var x = cljs.core.first(arglist__11819);
            var y = cljs.core.first(cljs.core.next(arglist__11819));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11819)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11819)));
            return G__11818__delegate(x, y, z, args)
          };
          G__11818.cljs$lang$arity$variadic = G__11818__delegate;
          return G__11818
        }();
        G__11817 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__11817__0.call(this);
            case 1:
              return G__11817__1.call(this, x);
            case 2:
              return G__11817__2.call(this, x, y);
            case 3:
              return G__11817__3.call(this, x, y, z);
            default:
              return G__11817__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__11817.cljs$lang$maxFixedArity = 3;
        G__11817.cljs$lang$applyTo = G__11817__4.cljs$lang$applyTo;
        return G__11817
      }()
    };
    var G__11816 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__11816__delegate.call(this, f, g, h, fs)
    };
    G__11816.cljs$lang$maxFixedArity = 3;
    G__11816.cljs$lang$applyTo = function(arglist__11820) {
      var f = cljs.core.first(arglist__11820);
      var g = cljs.core.first(cljs.core.next(arglist__11820));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__11820)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__11820)));
      return G__11816__delegate(f, g, h, fs)
    };
    G__11816.cljs$lang$arity$variadic = G__11816__delegate;
    return G__11816
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__11823 = cljs.core.next.call(null, coll);
        coll = G__11823;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3822__auto____11822 = cljs.core.seq.call(null, coll);
        if(and__3822__auto____11822) {
          return n > 0
        }else {
          return and__3822__auto____11822
        }
      }())) {
        var G__11824 = n - 1;
        var G__11825 = cljs.core.next.call(null, coll);
        n = G__11824;
        coll = G__11825;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__11827 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__11827), s)) {
    if(cljs.core.count.call(null, matches__11827) === 1) {
      return cljs.core.first.call(null, matches__11827)
    }else {
      return cljs.core.vec.call(null, matches__11827)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__11829 = re.exec(s);
  if(matches__11829 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__11829) === 1) {
      return cljs.core.first.call(null, matches__11829)
    }else {
      return cljs.core.vec.call(null, matches__11829)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__11834 = cljs.core.re_find.call(null, re, s);
  var match_idx__11835 = s.search(re);
  var match_str__11836 = cljs.core.coll_QMARK_.call(null, match_data__11834) ? cljs.core.first.call(null, match_data__11834) : match_data__11834;
  var post_match__11837 = cljs.core.subs.call(null, s, match_idx__11835 + cljs.core.count.call(null, match_str__11836));
  if(cljs.core.truth_(match_data__11834)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__11834, re_seq.call(null, re, post_match__11837))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__11844__11845 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___11846 = cljs.core.nth.call(null, vec__11844__11845, 0, null);
  var flags__11847 = cljs.core.nth.call(null, vec__11844__11845, 1, null);
  var pattern__11848 = cljs.core.nth.call(null, vec__11844__11845, 2, null);
  return new RegExp(pattern__11848, flags__11847)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__11838_SHARP_) {
    return print_one.call(null, p1__11838_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3822__auto____11858 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3822__auto____11858)) {
            var and__3822__auto____11862 = function() {
              var G__11859__11860 = obj;
              if(G__11859__11860) {
                if(function() {
                  var or__3824__auto____11861 = G__11859__11860.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3824__auto____11861) {
                    return or__3824__auto____11861
                  }else {
                    return G__11859__11860.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__11859__11860.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11859__11860)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__11859__11860)
              }
            }();
            if(cljs.core.truth_(and__3822__auto____11862)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3822__auto____11862
            }
          }else {
            return and__3822__auto____11858
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3822__auto____11863 = !(obj == null);
          if(and__3822__auto____11863) {
            return obj.cljs$lang$type
          }else {
            return and__3822__auto____11863
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__11864__11865 = obj;
          if(G__11864__11865) {
            if(function() {
              var or__3824__auto____11866 = G__11864__11865.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3824__auto____11866) {
                return or__3824__auto____11866
              }else {
                return G__11864__11865.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__11864__11865.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11864__11865)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__11864__11865)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__11886 = new goog.string.StringBuffer;
  var G__11887__11888 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11887__11888) {
    var string__11889 = cljs.core.first.call(null, G__11887__11888);
    var G__11887__11890 = G__11887__11888;
    while(true) {
      sb__11886.append(string__11889);
      var temp__3974__auto____11891 = cljs.core.next.call(null, G__11887__11890);
      if(temp__3974__auto____11891) {
        var G__11887__11892 = temp__3974__auto____11891;
        var G__11905 = cljs.core.first.call(null, G__11887__11892);
        var G__11906 = G__11887__11892;
        string__11889 = G__11905;
        G__11887__11890 = G__11906;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11893__11894 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11893__11894) {
    var obj__11895 = cljs.core.first.call(null, G__11893__11894);
    var G__11893__11896 = G__11893__11894;
    while(true) {
      sb__11886.append(" ");
      var G__11897__11898 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11895, opts));
      if(G__11897__11898) {
        var string__11899 = cljs.core.first.call(null, G__11897__11898);
        var G__11897__11900 = G__11897__11898;
        while(true) {
          sb__11886.append(string__11899);
          var temp__3974__auto____11901 = cljs.core.next.call(null, G__11897__11900);
          if(temp__3974__auto____11901) {
            var G__11897__11902 = temp__3974__auto____11901;
            var G__11907 = cljs.core.first.call(null, G__11897__11902);
            var G__11908 = G__11897__11902;
            string__11899 = G__11907;
            G__11897__11900 = G__11908;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11903 = cljs.core.next.call(null, G__11893__11896);
      if(temp__3974__auto____11903) {
        var G__11893__11904 = temp__3974__auto____11903;
        var G__11909 = cljs.core.first.call(null, G__11893__11904);
        var G__11910 = G__11893__11904;
        obj__11895 = G__11909;
        G__11893__11896 = G__11910;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__11886
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__11912 = cljs.core.pr_sb.call(null, objs, opts);
  sb__11912.append("\n");
  return[cljs.core.str(sb__11912)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__11931__11932 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__11931__11932) {
    var string__11933 = cljs.core.first.call(null, G__11931__11932);
    var G__11931__11934 = G__11931__11932;
    while(true) {
      cljs.core.string_print.call(null, string__11933);
      var temp__3974__auto____11935 = cljs.core.next.call(null, G__11931__11934);
      if(temp__3974__auto____11935) {
        var G__11931__11936 = temp__3974__auto____11935;
        var G__11949 = cljs.core.first.call(null, G__11931__11936);
        var G__11950 = G__11931__11936;
        string__11933 = G__11949;
        G__11931__11934 = G__11950;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__11937__11938 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__11937__11938) {
    var obj__11939 = cljs.core.first.call(null, G__11937__11938);
    var G__11937__11940 = G__11937__11938;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__11941__11942 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__11939, opts));
      if(G__11941__11942) {
        var string__11943 = cljs.core.first.call(null, G__11941__11942);
        var G__11941__11944 = G__11941__11942;
        while(true) {
          cljs.core.string_print.call(null, string__11943);
          var temp__3974__auto____11945 = cljs.core.next.call(null, G__11941__11944);
          if(temp__3974__auto____11945) {
            var G__11941__11946 = temp__3974__auto____11945;
            var G__11951 = cljs.core.first.call(null, G__11941__11946);
            var G__11952 = G__11941__11946;
            string__11943 = G__11951;
            G__11941__11944 = G__11952;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__3974__auto____11947 = cljs.core.next.call(null, G__11937__11940);
      if(temp__3974__auto____11947) {
        var G__11937__11948 = temp__3974__auto____11947;
        var G__11953 = cljs.core.first.call(null, G__11937__11948);
        var G__11954 = G__11937__11948;
        obj__11939 = G__11953;
        G__11937__11940 = G__11954;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__11955) {
    var objs = cljs.core.seq(arglist__11955);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__11956) {
    var objs = cljs.core.seq(arglist__11956);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__11957) {
    var objs = cljs.core.seq(arglist__11957);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__11958) {
    var objs = cljs.core.seq(arglist__11958);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__11959) {
    var objs = cljs.core.seq(arglist__11959);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__11960) {
    var objs = cljs.core.seq(arglist__11960);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__11961) {
    var objs = cljs.core.seq(arglist__11961);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__11962) {
    var objs = cljs.core.seq(arglist__11962);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__11963) {
    var fmt = cljs.core.first(arglist__11963);
    var args = cljs.core.rest(arglist__11963);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11964 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11964, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11965 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11965, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11966 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11966, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__3974__auto____11967 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__3974__auto____11967)) {
        var nspc__11968 = temp__3974__auto____11967;
        return[cljs.core.str(nspc__11968), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__3974__auto____11969 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__3974__auto____11969)) {
          var nspc__11970 = temp__3974__auto____11969;
          return[cljs.core.str(nspc__11970), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11971 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11971, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__11973 = function(n, len) {
    var ns__11972 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__11972) < len) {
        var G__11975 = [cljs.core.str("0"), cljs.core.str(ns__11972)].join("");
        ns__11972 = G__11975;
        continue
      }else {
        return ns__11972
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__11973.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__11973.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__11973.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11973.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__11973.call(null, d.getUTCSeconds(), 
  2)), cljs.core.str("."), cljs.core.str(normalize__11973.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__11974 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__11974, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__11976 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__11977 = this;
  var G__11978__11979 = cljs.core.seq.call(null, this__11977.watches);
  if(G__11978__11979) {
    var G__11981__11983 = cljs.core.first.call(null, G__11978__11979);
    var vec__11982__11984 = G__11981__11983;
    var key__11985 = cljs.core.nth.call(null, vec__11982__11984, 0, null);
    var f__11986 = cljs.core.nth.call(null, vec__11982__11984, 1, null);
    var G__11978__11987 = G__11978__11979;
    var G__11981__11988 = G__11981__11983;
    var G__11978__11989 = G__11978__11987;
    while(true) {
      var vec__11990__11991 = G__11981__11988;
      var key__11992 = cljs.core.nth.call(null, vec__11990__11991, 0, null);
      var f__11993 = cljs.core.nth.call(null, vec__11990__11991, 1, null);
      var G__11978__11994 = G__11978__11989;
      f__11993.call(null, key__11992, this$, oldval, newval);
      var temp__3974__auto____11995 = cljs.core.next.call(null, G__11978__11994);
      if(temp__3974__auto____11995) {
        var G__11978__11996 = temp__3974__auto____11995;
        var G__12003 = cljs.core.first.call(null, G__11978__11996);
        var G__12004 = G__11978__11996;
        G__11981__11988 = G__12003;
        G__11978__11989 = G__12004;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__11997 = this;
  return this$.watches = cljs.core.assoc.call(null, this__11997.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__11998 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__11998.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__11999 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__11999.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__12000 = this;
  return this__12000.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12001 = this;
  return this__12001.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__12002 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__12016__delegate = function(x, p__12005) {
      var map__12011__12012 = p__12005;
      var map__12011__12013 = cljs.core.seq_QMARK_.call(null, map__12011__12012) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12011__12012) : map__12011__12012;
      var validator__12014 = cljs.core._lookup.call(null, map__12011__12013, "\ufdd0'validator", null);
      var meta__12015 = cljs.core._lookup.call(null, map__12011__12013, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__12015, validator__12014, null)
    };
    var G__12016 = function(x, var_args) {
      var p__12005 = null;
      if(goog.isDef(var_args)) {
        p__12005 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12016__delegate.call(this, x, p__12005)
    };
    G__12016.cljs$lang$maxFixedArity = 1;
    G__12016.cljs$lang$applyTo = function(arglist__12017) {
      var x = cljs.core.first(arglist__12017);
      var p__12005 = cljs.core.rest(arglist__12017);
      return G__12016__delegate(x, p__12005)
    };
    G__12016.cljs$lang$arity$variadic = G__12016__delegate;
    return G__12016
  }();
  atom = function(x, var_args) {
    var p__12005 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__3974__auto____12021 = a.validator;
  if(cljs.core.truth_(temp__3974__auto____12021)) {
    var validate__12022 = temp__3974__auto____12021;
    if(cljs.core.truth_(validate__12022.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__12023 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__12023, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__12024__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__12024 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__12024__delegate.call(this, a, f, x, y, z, more)
    };
    G__12024.cljs$lang$maxFixedArity = 5;
    G__12024.cljs$lang$applyTo = function(arglist__12025) {
      var a = cljs.core.first(arglist__12025);
      var f = cljs.core.first(cljs.core.next(arglist__12025));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12025)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12025))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12025)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__12025)))));
      return G__12024__delegate(a, f, x, y, z, more)
    };
    G__12024.cljs$lang$arity$variadic = G__12024__delegate;
    return G__12024
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__12026) {
    var iref = cljs.core.first(arglist__12026);
    var f = cljs.core.first(cljs.core.next(arglist__12026));
    var args = cljs.core.rest(cljs.core.next(arglist__12026));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__12027 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__12027.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__12028 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__12028.state, function(p__12029) {
    var map__12030__12031 = p__12029;
    var map__12030__12032 = cljs.core.seq_QMARK_.call(null, map__12030__12031) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12030__12031) : map__12030__12031;
    var curr_state__12033 = map__12030__12032;
    var done__12034 = cljs.core._lookup.call(null, map__12030__12032, "\ufdd0'done", null);
    if(cljs.core.truth_(done__12034)) {
      return curr_state__12033
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__12028.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__12055__12056 = options;
    var map__12055__12057 = cljs.core.seq_QMARK_.call(null, map__12055__12056) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12055__12056) : map__12055__12056;
    var keywordize_keys__12058 = cljs.core._lookup.call(null, map__12055__12057, "\ufdd0'keywordize-keys", null);
    var keyfn__12059 = cljs.core.truth_(keywordize_keys__12058) ? cljs.core.keyword : cljs.core.str;
    var f__12074 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2512__auto____12073 = function iter__12067(s__12068) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__12068__12071 = s__12068;
                    while(true) {
                      if(cljs.core.seq.call(null, s__12068__12071)) {
                        var k__12072 = cljs.core.first.call(null, s__12068__12071);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__12059.call(null, k__12072), thisfn.call(null, x[k__12072])], true), iter__12067.call(null, cljs.core.rest.call(null, s__12068__12071)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2512__auto____12073.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__12074.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__12075) {
    var x = cljs.core.first(arglist__12075);
    var options = cljs.core.rest(arglist__12075);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__12080 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__12084__delegate = function(args) {
      var temp__3971__auto____12081 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__12080), args, null);
      if(cljs.core.truth_(temp__3971__auto____12081)) {
        var v__12082 = temp__3971__auto____12081;
        return v__12082
      }else {
        var ret__12083 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__12080, cljs.core.assoc, args, ret__12083);
        return ret__12083
      }
    };
    var G__12084 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__12084__delegate.call(this, args)
    };
    G__12084.cljs$lang$maxFixedArity = 0;
    G__12084.cljs$lang$applyTo = function(arglist__12085) {
      var args = cljs.core.seq(arglist__12085);
      return G__12084__delegate(args)
    };
    G__12084.cljs$lang$arity$variadic = G__12084__delegate;
    return G__12084
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__12087 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__12087)) {
        var G__12088 = ret__12087;
        f = G__12088;
        continue
      }else {
        return ret__12087
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__12089__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__12089 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__12089__delegate.call(this, f, args)
    };
    G__12089.cljs$lang$maxFixedArity = 1;
    G__12089.cljs$lang$applyTo = function(arglist__12090) {
      var f = cljs.core.first(arglist__12090);
      var args = cljs.core.rest(arglist__12090);
      return G__12089__delegate(f, args)
    };
    G__12089.cljs$lang$arity$variadic = G__12089__delegate;
    return G__12089
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__12092 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__12092, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__12092, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3824__auto____12101 = cljs.core._EQ_.call(null, child, parent);
    if(or__3824__auto____12101) {
      return or__3824__auto____12101
    }else {
      var or__3824__auto____12102 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3824__auto____12102) {
        return or__3824__auto____12102
      }else {
        var and__3822__auto____12103 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3822__auto____12103) {
          var and__3822__auto____12104 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3822__auto____12104) {
            var and__3822__auto____12105 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3822__auto____12105) {
              var ret__12106 = true;
              var i__12107 = 0;
              while(true) {
                if(function() {
                  var or__3824__auto____12108 = cljs.core.not.call(null, ret__12106);
                  if(or__3824__auto____12108) {
                    return or__3824__auto____12108
                  }else {
                    return i__12107 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__12106
                }else {
                  var G__12109 = isa_QMARK_.call(null, h, child.call(null, i__12107), parent.call(null, i__12107));
                  var G__12110 = i__12107 + 1;
                  ret__12106 = G__12109;
                  i__12107 = G__12110;
                  continue
                }
                break
              }
            }else {
              return and__3822__auto____12105
            }
          }else {
            return and__3822__auto____12104
          }
        }else {
          return and__3822__auto____12103
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__12119 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__12120 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__12121 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__12122 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3824__auto____12123 = cljs.core.contains_QMARK_.call(null, tp__12119.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__12121.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__12121.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__12119, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__12122.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__12120, parent, ta__12121), "\ufdd0'descendants":tf__12122.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__12121, tag, td__12120)})
    }();
    if(cljs.core.truth_(or__3824__auto____12123)) {
      return or__3824__auto____12123
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__12128 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__12129 = cljs.core.truth_(parentMap__12128.call(null, tag)) ? cljs.core.disj.call(null, parentMap__12128.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__12130 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__12129)) ? cljs.core.assoc.call(null, parentMap__12128, tag, childsParents__12129) : cljs.core.dissoc.call(null, parentMap__12128, tag);
    var deriv_seq__12131 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__12111_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__12111_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__12111_SHARP_), cljs.core.second.call(null, p1__12111_SHARP_)))
    }, cljs.core.seq.call(null, newParents__12130)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__12128.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__12112_SHARP_, p2__12113_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__12112_SHARP_, p2__12113_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__12131))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__12139 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3824__auto____12141 = cljs.core.truth_(function() {
    var and__3822__auto____12140 = xprefs__12139;
    if(cljs.core.truth_(and__3822__auto____12140)) {
      return xprefs__12139.call(null, y)
    }else {
      return and__3822__auto____12140
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3824__auto____12141)) {
    return or__3824__auto____12141
  }else {
    var or__3824__auto____12143 = function() {
      var ps__12142 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__12142) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__12142), prefer_table))) {
          }else {
          }
          var G__12146 = cljs.core.rest.call(null, ps__12142);
          ps__12142 = G__12146;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3824__auto____12143)) {
      return or__3824__auto____12143
    }else {
      var or__3824__auto____12145 = function() {
        var ps__12144 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__12144) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__12144), y, prefer_table))) {
            }else {
            }
            var G__12147 = cljs.core.rest.call(null, ps__12144);
            ps__12144 = G__12147;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3824__auto____12145)) {
        return or__3824__auto____12145
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3824__auto____12149 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3824__auto____12149)) {
    return or__3824__auto____12149
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__12167 = cljs.core.reduce.call(null, function(be, p__12159) {
    var vec__12160__12161 = p__12159;
    var k__12162 = cljs.core.nth.call(null, vec__12160__12161, 0, null);
    var ___12163 = cljs.core.nth.call(null, vec__12160__12161, 1, null);
    var e__12164 = vec__12160__12161;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__12162)) {
      var be2__12166 = cljs.core.truth_(function() {
        var or__3824__auto____12165 = be == null;
        if(or__3824__auto____12165) {
          return or__3824__auto____12165
        }else {
          return cljs.core.dominates.call(null, k__12162, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__12164 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__12166), k__12162, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__12162), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__12166)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__12166
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__12167)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__12167));
      return cljs.core.second.call(null, best_entry__12167)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3822__auto____12172 = mf;
    if(and__3822__auto____12172) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3822__auto____12172
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2413__auto____12173 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12174 = cljs.core._reset[goog.typeOf(x__2413__auto____12173)];
      if(or__3824__auto____12174) {
        return or__3824__auto____12174
      }else {
        var or__3824__auto____12175 = cljs.core._reset["_"];
        if(or__3824__auto____12175) {
          return or__3824__auto____12175
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3822__auto____12180 = mf;
    if(and__3822__auto____12180) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3822__auto____12180
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2413__auto____12181 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12182 = cljs.core._add_method[goog.typeOf(x__2413__auto____12181)];
      if(or__3824__auto____12182) {
        return or__3824__auto____12182
      }else {
        var or__3824__auto____12183 = cljs.core._add_method["_"];
        if(or__3824__auto____12183) {
          return or__3824__auto____12183
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____12188 = mf;
    if(and__3822__auto____12188) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3822__auto____12188
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2413__auto____12189 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12190 = cljs.core._remove_method[goog.typeOf(x__2413__auto____12189)];
      if(or__3824__auto____12190) {
        return or__3824__auto____12190
      }else {
        var or__3824__auto____12191 = cljs.core._remove_method["_"];
        if(or__3824__auto____12191) {
          return or__3824__auto____12191
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3822__auto____12196 = mf;
    if(and__3822__auto____12196) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3822__auto____12196
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2413__auto____12197 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12198 = cljs.core._prefer_method[goog.typeOf(x__2413__auto____12197)];
      if(or__3824__auto____12198) {
        return or__3824__auto____12198
      }else {
        var or__3824__auto____12199 = cljs.core._prefer_method["_"];
        if(or__3824__auto____12199) {
          return or__3824__auto____12199
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3822__auto____12204 = mf;
    if(and__3822__auto____12204) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3822__auto____12204
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2413__auto____12205 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12206 = cljs.core._get_method[goog.typeOf(x__2413__auto____12205)];
      if(or__3824__auto____12206) {
        return or__3824__auto____12206
      }else {
        var or__3824__auto____12207 = cljs.core._get_method["_"];
        if(or__3824__auto____12207) {
          return or__3824__auto____12207
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3822__auto____12212 = mf;
    if(and__3822__auto____12212) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3822__auto____12212
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2413__auto____12213 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12214 = cljs.core._methods[goog.typeOf(x__2413__auto____12213)];
      if(or__3824__auto____12214) {
        return or__3824__auto____12214
      }else {
        var or__3824__auto____12215 = cljs.core._methods["_"];
        if(or__3824__auto____12215) {
          return or__3824__auto____12215
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3822__auto____12220 = mf;
    if(and__3822__auto____12220) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3822__auto____12220
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2413__auto____12221 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12222 = cljs.core._prefers[goog.typeOf(x__2413__auto____12221)];
      if(or__3824__auto____12222) {
        return or__3824__auto____12222
      }else {
        var or__3824__auto____12223 = cljs.core._prefers["_"];
        if(or__3824__auto____12223) {
          return or__3824__auto____12223
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3822__auto____12228 = mf;
    if(and__3822__auto____12228) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3822__auto____12228
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2413__auto____12229 = mf == null ? null : mf;
    return function() {
      var or__3824__auto____12230 = cljs.core._dispatch[goog.typeOf(x__2413__auto____12229)];
      if(or__3824__auto____12230) {
        return or__3824__auto____12230
      }else {
        var or__3824__auto____12231 = cljs.core._dispatch["_"];
        if(or__3824__auto____12231) {
          return or__3824__auto____12231
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__12234 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__12235 = cljs.core._get_method.call(null, mf, dispatch_val__12234);
  if(cljs.core.truth_(target_fn__12235)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__12234)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__12235, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12236 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__12237 = this;
  cljs.core.swap_BANG_.call(null, this__12237.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12237.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12237.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__12237.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__12238 = this;
  cljs.core.swap_BANG_.call(null, this__12238.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__12238.method_cache, this__12238.method_table, this__12238.cached_hierarchy, this__12238.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__12239 = this;
  cljs.core.swap_BANG_.call(null, this__12239.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__12239.method_cache, this__12239.method_table, this__12239.cached_hierarchy, this__12239.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__12240 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__12240.cached_hierarchy), cljs.core.deref.call(null, this__12240.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__12240.method_cache, this__12240.method_table, this__12240.cached_hierarchy, this__12240.hierarchy)
  }
  var temp__3971__auto____12241 = cljs.core.deref.call(null, this__12240.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__3971__auto____12241)) {
    var target_fn__12242 = temp__3971__auto____12241;
    return target_fn__12242
  }else {
    var temp__3971__auto____12243 = cljs.core.find_and_cache_best_method.call(null, this__12240.name, dispatch_val, this__12240.hierarchy, this__12240.method_table, this__12240.prefer_table, this__12240.method_cache, this__12240.cached_hierarchy);
    if(cljs.core.truth_(temp__3971__auto____12243)) {
      var target_fn__12244 = temp__3971__auto____12243;
      return target_fn__12244
    }else {
      return cljs.core.deref.call(null, this__12240.method_table).call(null, this__12240.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__12245 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__12245.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__12245.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__12245.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__12245.method_cache, this__12245.method_table, this__12245.cached_hierarchy, this__12245.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__12246 = this;
  return cljs.core.deref.call(null, this__12246.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__12247 = this;
  return cljs.core.deref.call(null, this__12247.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__12248 = this;
  return cljs.core.do_dispatch.call(null, mf, this__12248.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__12250__delegate = function(_, args) {
    var self__12249 = this;
    return cljs.core._dispatch.call(null, self__12249, args)
  };
  var G__12250 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__12250__delegate.call(this, _, args)
  };
  G__12250.cljs$lang$maxFixedArity = 1;
  G__12250.cljs$lang$applyTo = function(arglist__12251) {
    var _ = cljs.core.first(arglist__12251);
    var args = cljs.core.rest(arglist__12251);
    return G__12250__delegate(_, args)
  };
  G__12250.cljs$lang$arity$variadic = G__12250__delegate;
  return G__12250
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__12252 = this;
  return cljs.core._dispatch.call(null, self__12252, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__12253 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_12255, _) {
  var this__12254 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__12254.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__12256 = this;
  var and__3822__auto____12257 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3822__auto____12257) {
    return this__12256.uuid === other.uuid
  }else {
    return and__3822__auto____12257
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__12258 = this;
  var this__12259 = this;
  return cljs.core.pr_str.call(null, this__12259)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__12900 = s;
      var limit__12901 = limit;
      var parts__12902 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__12901, 1)) {
          return cljs.core.conj.call(null, parts__12902, s__12900)
        }else {
          var temp__3971__auto____12903 = cljs.core.re_find.call(null, re, s__12900);
          if(cljs.core.truth_(temp__3971__auto____12903)) {
            var m__12904 = temp__3971__auto____12903;
            var index__12905 = s__12900.indexOf(m__12904);
            var G__12906 = s__12900.substring(index__12905 + cljs.core.count.call(null, m__12904));
            var G__12907 = limit__12901 - 1;
            var G__12908 = cljs.core.conj.call(null, parts__12902, s__12900.substring(0, index__12905));
            s__12900 = G__12906;
            limit__12901 = G__12907;
            parts__12902 = G__12908;
            continue
          }else {
            return cljs.core.conj.call(null, parts__12902, s__12900)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__12912 = s.length;
  while(true) {
    if(index__12912 === 0) {
      return""
    }else {
      var ch__12913 = cljs.core._lookup.call(null, s, index__12912 - 1, null);
      if(function() {
        var or__3824__auto____12914 = cljs.core._EQ_.call(null, ch__12913, "\n");
        if(or__3824__auto____12914) {
          return or__3824__auto____12914
        }else {
          return cljs.core._EQ_.call(null, ch__12913, "\r")
        }
      }()) {
        var G__12915 = index__12912 - 1;
        index__12912 = G__12915;
        continue
      }else {
        return s.substring(0, index__12912)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__12919 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3824__auto____12920 = cljs.core.not.call(null, s__12919);
    if(or__3824__auto____12920) {
      return or__3824__auto____12920
    }else {
      var or__3824__auto____12921 = cljs.core._EQ_.call(null, "", s__12919);
      if(or__3824__auto____12921) {
        return or__3824__auto____12921
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__12919)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__12928 = new goog.string.StringBuffer;
  var length__12929 = s.length;
  var index__12930 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__12929, index__12930)) {
      return buffer__12928.toString()
    }else {
      var ch__12931 = s.charAt(index__12930);
      var temp__3971__auto____12932 = cljs.core._lookup.call(null, cmap, ch__12931, null);
      if(cljs.core.truth_(temp__3971__auto____12932)) {
        var replacement__12933 = temp__3971__auto____12932;
        buffer__12928.append([cljs.core.str(replacement__12933)].join(""))
      }else {
        buffer__12928.append(ch__12931)
      }
      var G__12934 = index__12930 + 1;
      index__12930 = G__12934;
      continue
    }
    break
  }
};
goog.provide("hiccups.runtime");
goog.require("cljs.core");
goog.require("clojure.string");
hiccups.runtime.re_tag = /([^\s\.#]+)(?:#([^s\.#]+))?(?:\.([^\s#]+))?/;
hiccups.runtime.character_escapes = cljs.core.PersistentArrayMap.fromArrays(["&", "<", ">", '"'], ["&amp;", "&lt;", "&gt;", "&quot;"]);
hiccups.runtime.container_tags = cljs.core.PersistentHashSet.fromArray(["dd", "head", "a", "b", "body", "pre", "form", "iframe", "dl", "em", "fieldset", "i", "h1", "h2", "span", "h3", "script", "html", "h4", "h5", "h6", "table", "dt", "div", "style", "label", "option", "ul", "strong", "canvas", "textarea", "li", "ol"]);
hiccups.runtime.as_str = function as_str(x) {
  if(function() {
    var or__3824__auto____13421 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3824__auto____13421) {
      return or__3824__auto____13421
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    return cljs.core.name.call(null, x)
  }else {
    return[cljs.core.str(x)].join("")
  }
};
hiccups.runtime._STAR_html_mode_STAR_ = "\ufdd0'xml";
hiccups.runtime.xml_mode_QMARK_ = function xml_mode_QMARK_() {
  return cljs.core._EQ_.call(null, hiccups.runtime._STAR_html_mode_STAR_, "\ufdd0'xml")
};
hiccups.runtime.in_mode = function in_mode(mode, f) {
  var _STAR_html_mode_STAR_13425__13426 = hiccups.runtime._STAR_html_mode_STAR_;
  try {
    hiccups.runtime._STAR_html_mode_STAR_ = mode;
    return f.call(null)
  }finally {
    hiccups.runtime._STAR_html_mode_STAR_ = _STAR_html_mode_STAR_13425__13426
  }
};
hiccups.runtime.escape_html = function escape_html(text) {
  return clojure.string.escape.call(null, hiccups.runtime.as_str.call(null, text), hiccups.runtime.character_escapes)
};
hiccups.runtime.h = hiccups.runtime.escape_html;
hiccups.runtime.end_tag = function end_tag() {
  if(cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
    return" />"
  }else {
    return">"
  }
};
hiccups.runtime.xml_attribute = function xml_attribute(name, value) {
  return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name)), cljs.core.str('="'), cljs.core.str(hiccups.runtime.escape_html.call(null, value)), cljs.core.str('"')].join("")
};
hiccups.runtime.render_attribute = function render_attribute(p__13428) {
  var vec__13433__13434 = p__13428;
  var name__13435 = cljs.core.nth.call(null, vec__13433__13434, 0, null);
  var value__13436 = cljs.core.nth.call(null, vec__13433__13434, 1, null);
  if(value__13436 === true) {
    if(cljs.core.truth_(hiccups.runtime.xml_mode_QMARK_.call(null))) {
      return hiccups.runtime.xml_attribute.call(null, name__13435, name__13435)
    }else {
      return[cljs.core.str(" "), cljs.core.str(hiccups.runtime.as_str.call(null, name__13435))].join("")
    }
  }else {
    if(cljs.core.not.call(null, value__13436)) {
      return""
    }else {
      if("\ufdd0'else") {
        return hiccups.runtime.xml_attribute.call(null, name__13435, value__13436)
      }else {
        return null
      }
    }
  }
};
hiccups.runtime.render_attr_map = function render_attr_map(attrs) {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.sort.call(null, cljs.core.map.call(null, hiccups.runtime.render_attribute, attrs)))
};
hiccups.runtime.normalize_element = function normalize_element(p__13437) {
  var vec__13452__13453 = p__13437;
  var tag__13454 = cljs.core.nth.call(null, vec__13452__13453, 0, null);
  var content__13455 = cljs.core.nthnext.call(null, vec__13452__13453, 1);
  if(!function() {
    var or__3824__auto____13456 = cljs.core.keyword_QMARK_.call(null, tag__13454);
    if(or__3824__auto____13456) {
      return or__3824__auto____13456
    }else {
      var or__3824__auto____13457 = cljs.core.symbol_QMARK_.call(null, tag__13454);
      if(or__3824__auto____13457) {
        return or__3824__auto____13457
      }else {
        return cljs.core.string_QMARK_.call(null, tag__13454)
      }
    }
  }()) {
    throw[cljs.core.str(tag__13454), cljs.core.str(" is not a valid tag name")].join("");
  }else {
  }
  var vec__13458__13459 = cljs.core.re_matches.call(null, hiccups.runtime.re_tag, hiccups.runtime.as_str.call(null, tag__13454));
  var ___13460 = cljs.core.nth.call(null, vec__13458__13459, 0, null);
  var tag__13461 = cljs.core.nth.call(null, vec__13458__13459, 1, null);
  var id__13462 = cljs.core.nth.call(null, vec__13458__13459, 2, null);
  var class__13463 = cljs.core.nth.call(null, vec__13458__13459, 3, null);
  var tag_attrs__13464 = cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":id__13462, "\ufdd0'class":cljs.core.truth_(class__13463) ? class__13463.replace(".", " ") : null});
  var map_attrs__13465 = cljs.core.first.call(null, content__13455);
  if(cljs.core.map_QMARK_.call(null, map_attrs__13465)) {
    return cljs.core.PersistentVector.fromArray([tag__13461, cljs.core.merge.call(null, tag_attrs__13464, map_attrs__13465), cljs.core.next.call(null, content__13455)], true)
  }else {
    return cljs.core.PersistentVector.fromArray([tag__13461, tag_attrs__13464, content__13455], true)
  }
};
hiccups.runtime.render_element = function render_element(element) {
  var vec__13472__13473 = hiccups.runtime.normalize_element.call(null, element);
  var tag__13474 = cljs.core.nth.call(null, vec__13472__13473, 0, null);
  var attrs__13475 = cljs.core.nth.call(null, vec__13472__13473, 1, null);
  var content__13476 = cljs.core.nth.call(null, vec__13472__13473, 2, null);
  if(cljs.core.truth_(function() {
    var or__3824__auto____13477 = content__13476;
    if(cljs.core.truth_(or__3824__auto____13477)) {
      return or__3824__auto____13477
    }else {
      return hiccups.runtime.container_tags.call(null, tag__13474)
    }
  }())) {
    return[cljs.core.str("<"), cljs.core.str(tag__13474), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs__13475)), cljs.core.str(">"), cljs.core.str(hiccups.runtime.render_html.call(null, content__13476)), cljs.core.str("</"), cljs.core.str(tag__13474), cljs.core.str(">")].join("")
  }else {
    return[cljs.core.str("<"), cljs.core.str(tag__13474), cljs.core.str(hiccups.runtime.render_attr_map.call(null, attrs__13475)), cljs.core.str(hiccups.runtime.end_tag.call(null))].join("")
  }
};
hiccups.runtime.render_html = function render_html(x) {
  if(cljs.core.vector_QMARK_.call(null, x)) {
    return hiccups.runtime.render_element.call(null, x)
  }else {
    if(cljs.core.seq_QMARK_.call(null, x)) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, render_html, x))
    }else {
      if("\ufdd0'else") {
        return hiccups.runtime.as_str.call(null, x)
      }else {
        return null
      }
    }
  }
};
goog.provide("cljs_intro.views");
goog.require("cljs.core");
goog.require("hiccups.runtime");
cljs_intro.views.create_shooting_stats = function create_shooting_stats(p__7810) {
  var map__7874__7875 = p__7810;
  var map__7874__7876 = cljs.core.seq_QMARK_.call(null, map__7874__7875) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7874__7875) : map__7874__7875;
  var postplusminus__7877 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postplusminus", null);
  var gwg__7878 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'gwg", null);
  var postpim__7879 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postpim", null);
  var postpts__7880 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postpts", null);
  var gtg__7881 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'gtg", null);
  var postppa__7882 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postppa", null);
  var plusminus__7883 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'plusminus", null);
  var posta__7884 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'posta", null);
  var sha__7885 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'sha", null);
  var pim__7886 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'pim", null);
  var postppg__7887 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postppg", null);
  var postg__7888 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postg", null);
  var postshg__7889 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postshg", null);
  var postsha__7890 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postsha", null);
  var ppa__7891 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'ppa", null);
  var sog__7892 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'sog", null);
  var a__7893 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'a", null);
  var postgp__7894 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postgp", null);
  var ppg__7895 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'ppg", null);
  var year__7896 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'year", null);
  var g__7897 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'g", null);
  var shg__7898 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'shg", null);
  var postsog__7899 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postsog", null);
  var postgwg__7900 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'postgwg", null);
  var pos__7901 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'pos", null);
  var tmid__7902 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'tmid", null);
  var gp__7903 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'gp", null);
  var pts__7904 = cljs.core._lookup.call(null, map__7874__7876, "\ufdd0'pts", null);
  return[cljs.core.str("<tr"), cljs.core.str(""), cljs.core.str(">"), cljs.core.str(function() {
    var attrs7905__7921 = year__7896;
    if(cljs.core.map_QMARK_.call(null, attrs7905__7921)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7905__7921))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7905__7921)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7906__7922 = tmid__7902;
    if(cljs.core.map_QMARK_.call(null, attrs7906__7922)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7906__7922))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7906__7922)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7907__7923 = pos__7901;
    if(cljs.core.map_QMARK_.call(null, attrs7907__7923)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7907__7923))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7907__7923)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7908__7924 = gp__7903;
    if(cljs.core.map_QMARK_.call(null, attrs7908__7924)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7908__7924))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7908__7924)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7909__7925 = g__7897;
    if(cljs.core.map_QMARK_.call(null, attrs7909__7925)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7909__7925))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7909__7925)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7910__7926 = a__7893;
    if(cljs.core.map_QMARK_.call(null, attrs7910__7926)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7910__7926))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7910__7926)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7911__7927 = pts__7904;
    if(cljs.core.map_QMARK_.call(null, attrs7911__7927)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7911__7927))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7911__7927)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7912__7928 = pim__7886;
    if(cljs.core.map_QMARK_.call(null, attrs7912__7928)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7912__7928))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7912__7928)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7913__7929 = plusminus__7883;
    if(cljs.core.map_QMARK_.call(null, attrs7913__7929)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7913__7929))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7913__7929)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7914__7930 = ppg__7895;
    if(cljs.core.map_QMARK_.call(null, attrs7914__7930)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7914__7930))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7914__7930)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7915__7931 = ppa__7891;
    if(cljs.core.map_QMARK_.call(null, attrs7915__7931)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7915__7931))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7915__7931)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7916__7932 = shg__7898;
    if(cljs.core.map_QMARK_.call(null, attrs7916__7932)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7916__7932))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7916__7932)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7917__7933 = sha__7885;
    if(cljs.core.map_QMARK_.call(null, attrs7917__7933)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7917__7933))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7917__7933)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7918__7934 = gwg__7878;
    if(cljs.core.map_QMARK_.call(null, attrs7918__7934)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7918__7934))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7918__7934)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7919__7935 = gtg__7881;
    if(cljs.core.map_QMARK_.call(null, attrs7919__7935)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7919__7935))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7919__7935)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs7920__7936 = sog__7892;
    if(cljs.core.map_QMARK_.call(null, attrs7920__7936)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs7920__7936))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs7920__7936)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("</tr>")].join("")
};
cljs_intro.views.create_playoff_shooting_stats = function create_playoff_shooting_stats(p__7937) {
  var map__7989__7990 = p__7937;
  var map__7989__7991 = cljs.core.seq_QMARK_.call(null, map__7989__7990) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7989__7990) : map__7989__7990;
  var postplusminus__7992 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postplusminus", null);
  var postpim__7993 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postpim", null);
  var postpts__7994 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postpts", null);
  var postppa__7995 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postppa", null);
  var posta__7996 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'posta", null);
  var postgtg__7997 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postgtg", null);
  var postppg__7998 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postppg", null);
  var postg__7999 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postg", null);
  var postshg__8000 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postshg", null);
  var postsha__8001 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postsha", null);
  var postgp__8002 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postgp", null);
  var year__8003 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'year", null);
  var postsog__8004 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postsog", null);
  var postgwg__8005 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'postgwg", null);
  var pos__8006 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'pos", null);
  var tmid__8007 = cljs.core._lookup.call(null, map__7989__7991, "\ufdd0'tmid", null);
  return[cljs.core.str("<tr"), cljs.core.str(""), cljs.core.str(">"), cljs.core.str(function() {
    var attrs8008__8025 = year__8003;
    if(cljs.core.map_QMARK_.call(null, attrs8008__8025)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8008__8025))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8008__8025)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8009__8026 = tmid__8007;
    if(cljs.core.map_QMARK_.call(null, attrs8009__8026)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8009__8026))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8009__8026)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8010__8027 = pos__8006;
    if(cljs.core.map_QMARK_.call(null, attrs8010__8027)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8010__8027))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8010__8027)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8011__8028 = postgp__8002;
    if(cljs.core.map_QMARK_.call(null, attrs8011__8028)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8011__8028))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8011__8028)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8012__8029 = postg__7999;
    if(cljs.core.map_QMARK_.call(null, attrs8012__8029)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8012__8029))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8012__8029)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8013__8030 = posta__7996;
    if(cljs.core.map_QMARK_.call(null, attrs8013__8030)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8013__8030))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8013__8030)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8014__8031 = postpts__7994;
    if(cljs.core.map_QMARK_.call(null, attrs8014__8031)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8014__8031))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8014__8031)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8015__8032 = postpim__7993;
    if(cljs.core.map_QMARK_.call(null, attrs8015__8032)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8015__8032))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8015__8032)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8016__8033 = postplusminus__7992;
    if(cljs.core.map_QMARK_.call(null, attrs8016__8033)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8016__8033))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8016__8033)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8017__8034 = postppg__7998;
    if(cljs.core.map_QMARK_.call(null, attrs8017__8034)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8017__8034))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8017__8034)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8018__8035 = postppa__7995;
    if(cljs.core.map_QMARK_.call(null, attrs8018__8035)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8018__8035))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8018__8035)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8019__8036 = postshg__8000;
    if(cljs.core.map_QMARK_.call(null, attrs8019__8036)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8019__8036))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8019__8036)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8020__8037 = postsha__8001;
    if(cljs.core.map_QMARK_.call(null, attrs8020__8037)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8020__8037))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8020__8037)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8021__8038 = postgwg__8005;
    if(cljs.core.map_QMARK_.call(null, attrs8021__8038)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8021__8038))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8021__8038)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("<td />"), cljs.core.str(function() {
    var attrs8024__8039 = postsog__8004;
    if(cljs.core.map_QMARK_.call(null, attrs8024__8039)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8024__8039))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8024__8039)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("</tr>")].join("")
};
cljs_intro.views.shooting_stats_table_header = function shooting_stats_table_header() {
  return[cljs.core.str("<thead><th>Season</th><th>Teamid</th><th>Pos</th><th>GP</th><th>G</th><th>A</th><th>PTS</th><th>PIMS</th><th>+/-</th><th>PPG</th><th>PPA</th><th>SHG</th><th>SHA</th><th>GWG</th><th>GTG</th><th>SOG</th></thead>")].join("")
};
cljs_intro.views.show_shooting_season_stats = function show_shooting_season_stats(stats) {
  return[cljs.core.str("<h3>Regular Season</h3>"), cljs.core.str("<table"), cljs.core.str(' class="table"'), cljs.core.str(">"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.shooting_stats_table_header.call(null))), cljs.core.str(function() {
    var attrs8050__8051 = cljs.core.map.call(null, cljs_intro.views.create_shooting_stats, stats);
    if(cljs.core.map_QMARK_.call(null, attrs8050__8051)) {
      return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8050__8051))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8050__8051)), cljs.core.str("</tbody>")].join("")
    }
  }()), cljs.core.str("</table>")].join("")
};
cljs_intro.views.show_shooting_playoff_stats = function show_shooting_playoff_stats(stats) {
  return[cljs.core.str("<h3>Post Season</h3>"), cljs.core.str("<table"), cljs.core.str(' class="table"'), cljs.core.str(">"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.shooting_stats_table_header.call(null))), cljs.core.str(function() {
    var attrs8058__8059 = cljs.core.map.call(null, cljs_intro.views.create_playoff_shooting_stats, stats);
    if(cljs.core.map_QMARK_.call(null, attrs8058__8059)) {
      return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8058__8059))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8058__8059)), cljs.core.str("</tbody>")].join("")
    }
  }()), cljs.core.str("</table>")].join("")
};
cljs_intro.views.show_shooting_stats = function show_shooting_stats(stats) {
  return[cljs.core.str("<div"), cljs.core.str(' class="scoring"'), cljs.core.str(">"), cljs.core.str("<h2>Scoring</h2>"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.show_shooting_season_stats.call(null, stats))), cljs.core.str("<br />"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.show_shooting_playoff_stats.call(null, stats))), cljs.core.str("</div>")].join("")
};
cljs_intro.views.create_goalie_stats = function create_goalie_stats(p__8068) {
  var map__8114__8115 = p__8068;
  var map__8114__8116 = cljs.core.seq_QMARK_.call(null, map__8114__8115) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8114__8115) : map__8114__8115;
  var postl__8117 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postl", null);
  var w__8118 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'w", null);
  var sa__8119 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'sa", null);
  var postsho__8120 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postsho", null);
  var postga__8121 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postga", null);
  var eng__8122 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'eng", null);
  var postgp__8123 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postgp", null);
  var year__8124 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'year", null);
  var ga__8125 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'ga", null);
  var posteng__8126 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'posteng", null);
  var postmin__8127 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postmin", null);
  var l__8128 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'l", null);
  var postw__8129 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postw", null);
  var postsa__8130 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postsa", null);
  var tmid__8131 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'tmid", null);
  var postt__8132 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'postt", null);
  var gp__8133 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'gp", null);
  var tol__8134 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'tol", null);
  var sho__8135 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'sho", null);
  var min__8136 = cljs.core._lookup.call(null, map__8114__8116, "\ufdd0'min", null);
  return[cljs.core.str("<tr"), cljs.core.str(""), cljs.core.str(">"), cljs.core.str(function() {
    var attrs8137__8148 = year__8124;
    if(cljs.core.map_QMARK_.call(null, attrs8137__8148)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8137__8148))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8137__8148)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8138__8149 = tmid__8131;
    if(cljs.core.map_QMARK_.call(null, attrs8138__8149)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8138__8149))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8138__8149)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8139__8150 = gp__8133;
    if(cljs.core.map_QMARK_.call(null, attrs8139__8150)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8139__8150))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8139__8150)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8140__8151 = min__8136;
    if(cljs.core.map_QMARK_.call(null, attrs8140__8151)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8140__8151))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8140__8151)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8141__8152 = w__8118;
    if(cljs.core.map_QMARK_.call(null, attrs8141__8152)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8141__8152))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8141__8152)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8142__8153 = l__8128;
    if(cljs.core.map_QMARK_.call(null, attrs8142__8153)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8142__8153))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8142__8153)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8143__8154 = tol__8134;
    if(cljs.core.map_QMARK_.call(null, attrs8143__8154)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8143__8154))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8143__8154)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8144__8155 = eng__8122;
    if(cljs.core.map_QMARK_.call(null, attrs8144__8155)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8144__8155))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8144__8155)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8145__8156 = sho__8135;
    if(cljs.core.map_QMARK_.call(null, attrs8145__8156)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8145__8156))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8145__8156)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8146__8157 = ga__8125;
    if(cljs.core.map_QMARK_.call(null, attrs8146__8157)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8146__8157))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8146__8157)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8147__8158 = sa__8119;
    if(cljs.core.map_QMARK_.call(null, attrs8147__8158)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8147__8158))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8147__8158)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("</tr>")].join("")
};
cljs_intro.views.create_goalie_playoff_stats = function create_goalie_playoff_stats(p__8159) {
  var map__8196__8197 = p__8159;
  var map__8196__8198 = cljs.core.seq_QMARK_.call(null, map__8196__8197) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8196__8197) : map__8196__8197;
  var postl__8199 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postl", null);
  var postsho__8200 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postsho", null);
  var postga__8201 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postga", null);
  var postgp__8202 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postgp", null);
  var year__8203 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'year", null);
  var posteng__8204 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'posteng", null);
  var postmin__8205 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postmin", null);
  var postw__8206 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postw", null);
  var postsa__8207 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postsa", null);
  var tmid__8208 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'tmid", null);
  var postt__8209 = cljs.core._lookup.call(null, map__8196__8198, "\ufdd0'postt", null);
  return[cljs.core.str("<tr"), cljs.core.str(""), cljs.core.str(">"), cljs.core.str(function() {
    var attrs8210__8221 = year__8203;
    if(cljs.core.map_QMARK_.call(null, attrs8210__8221)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8210__8221))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8210__8221)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8211__8222 = tmid__8208;
    if(cljs.core.map_QMARK_.call(null, attrs8211__8222)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8211__8222))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8211__8222)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8212__8223 = postgp__8202;
    if(cljs.core.map_QMARK_.call(null, attrs8212__8223)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8212__8223))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8212__8223)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8213__8224 = postmin__8205;
    if(cljs.core.map_QMARK_.call(null, attrs8213__8224)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8213__8224))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8213__8224)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8214__8225 = postw__8206;
    if(cljs.core.map_QMARK_.call(null, attrs8214__8225)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8214__8225))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8214__8225)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8215__8226 = postl__8199;
    if(cljs.core.map_QMARK_.call(null, attrs8215__8226)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8215__8226))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8215__8226)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8216__8227 = postt__8209;
    if(cljs.core.map_QMARK_.call(null, attrs8216__8227)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8216__8227))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8216__8227)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8217__8228 = posteng__8204;
    if(cljs.core.map_QMARK_.call(null, attrs8217__8228)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8217__8228))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8217__8228)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8218__8229 = postsho__8200;
    if(cljs.core.map_QMARK_.call(null, attrs8218__8229)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8218__8229))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8218__8229)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8219__8230 = postga__8201;
    if(cljs.core.map_QMARK_.call(null, attrs8219__8230)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8219__8230))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8219__8230)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str(function() {
    var attrs8220__8231 = postsa__8207;
    if(cljs.core.map_QMARK_.call(null, attrs8220__8231)) {
      return[cljs.core.str("<td"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8220__8231))), cljs.core.str(" />")].join("")
    }else {
      return[cljs.core.str("<td>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8220__8231)), cljs.core.str("</td>")].join("")
    }
  }()), cljs.core.str("</tr>")].join("")
};
cljs_intro.views.goalie_stats_table_header = function goalie_stats_table_header() {
  return[cljs.core.str("<thead><th>Season</th><th>Teamid</th><th>GP</th><th>Min</th><th>W</th><th>L</th><th>TOL</th><th>ENG</th><th>SHO</th><th>GA</th><th>SA</th></thead>")].join("")
};
cljs_intro.views.show_goalie_regular_season_stats = function show_goalie_regular_season_stats(goalies) {
  return[cljs.core.str("<h3>Regular Season</h3>"), cljs.core.str(function() {
    var attrs8246__8249 = cljs_intro.views.goalie_stats_table_header.call(null);
    if(cljs.core.map_QMARK_.call(null, attrs8246__8249)) {
      return[cljs.core.str("<table"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":"table"}), attrs8246__8249))), cljs.core.str(">"), cljs.core.str(function() {
        var attrs8247__8250 = cljs.core.map.call(null, cljs_intro.views.create_goalie_stats, goalies);
        if(cljs.core.map_QMARK_.call(null, attrs8247__8250)) {
          return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8247__8250))), cljs.core.str(" />")].join("")
        }else {
          return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8247__8250)), cljs.core.str("</tbody>")].join("")
        }
      }()), cljs.core.str("</table>")].join("")
    }else {
      return[cljs.core.str('<table class="table">'), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8246__8249)), cljs.core.str(function() {
        var attrs8248__8251 = cljs.core.map.call(null, cljs_intro.views.create_goalie_stats, goalies);
        if(cljs.core.map_QMARK_.call(null, attrs8248__8251)) {
          return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8248__8251))), cljs.core.str(" />")].join("")
        }else {
          return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8248__8251)), cljs.core.str("</tbody>")].join("")
        }
      }()), cljs.core.str("</table>")].join("")
    }
  }())].join("")
};
cljs_intro.views.show_goalie_playoff_stats = function show_goalie_playoff_stats(goalies) {
  return[cljs.core.str("<h3>Post Season</h3>"), cljs.core.str(function() {
    var attrs8262__8265 = cljs_intro.views.goalie_stats_table_header.call(null);
    if(cljs.core.map_QMARK_.call(null, attrs8262__8265)) {
      return[cljs.core.str("<table"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":"table"}), attrs8262__8265))), cljs.core.str(">"), cljs.core.str(function() {
        var attrs8263__8266 = cljs.core.map.call(null, cljs_intro.views.create_goalie_playoff_stats, goalies);
        if(cljs.core.map_QMARK_.call(null, attrs8263__8266)) {
          return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8263__8266))), cljs.core.str(" />")].join("")
        }else {
          return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8263__8266)), cljs.core.str("</tbody>")].join("")
        }
      }()), cljs.core.str("</table>")].join("")
    }else {
      return[cljs.core.str('<table class="table">'), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8262__8265)), cljs.core.str(function() {
        var attrs8264__8267 = cljs.core.map.call(null, cljs_intro.views.create_goalie_playoff_stats, goalies);
        if(cljs.core.map_QMARK_.call(null, attrs8264__8267)) {
          return[cljs.core.str("<tbody"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8264__8267))), cljs.core.str(" />")].join("")
        }else {
          return[cljs.core.str("<tbody>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8264__8267)), cljs.core.str("</tbody>")].join("")
        }
      }()), cljs.core.str("</table>")].join("")
    }
  }())].join("")
};
cljs_intro.views.show_goalie_stats = function show_goalie_stats(goalies) {
  return[cljs.core.str(function() {
    var attrs8274__8279 = cljs_intro.views.show_goalie_regular_season_stats.call(null, goalies);
    if(cljs.core.map_QMARK_.call(null, attrs8274__8279)) {
      return[cljs.core.str("<div"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":"goalies"}), attrs8274__8279))), cljs.core.str(">"), cljs.core.str("<br />"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.show_goalie_playoff_stats.call(null, goalies))), cljs.core.str("</div>")].join("")
    }else {
      return[cljs.core.str('<div class="goalies">'), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8274__8279)), cljs.core.str("<br />"), cljs.core.str(hiccups.runtime.render_html.call(null, cljs_intro.views.show_goalie_playoff_stats.call(null, goalies))), cljs.core.str("</div>")].join("")
    }
  }())].join("")
};
cljs_intro.views.show_player_demog = function show_player_demog(p__8280) {
  var map__8295__8296 = p__8280;
  var map__8295__8297 = cljs.core.seq_QMARK_.call(null, map__8295__8296) ? cljs.core.apply.call(null, cljs.core.hash_map, map__8295__8296) : map__8295__8296;
  var pos__8298 = cljs.core._lookup.call(null, map__8295__8297, "\ufdd0'pos", null);
  var lastname__8299 = cljs.core._lookup.call(null, map__8295__8297, "\ufdd0'lastname", null);
  var firstname__8300 = cljs.core._lookup.call(null, map__8295__8297, "\ufdd0'firstname", null);
  return[cljs.core.str("<div"), cljs.core.str(' class="demog"'), cljs.core.str(">"), cljs.core.str("<div"), cljs.core.str(' class="page-header tabs clearfix nm"'), cljs.core.str(">"), cljs.core.str(function() {
    var attrs8301__8306 = [cljs.core.str(firstname__8300), cljs.core.str(" "), cljs.core.str(lastname__8299)].join("");
    if(cljs.core.map_QMARK_.call(null, attrs8301__8306)) {
      return[cljs.core.str("<h2"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8301__8306))), cljs.core.str(">"), cljs.core.str(function() {
        var attrs8302__8307 = [cljs.core.str("("), cljs.core.str(pos__8298), cljs.core.str(")")].join("");
        if(cljs.core.map_QMARK_.call(null, attrs8302__8307)) {
          return[cljs.core.str("<span"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":"pos"}), attrs8302__8307))), cljs.core.str(">"), cljs.core.str("</span>")].join("")
        }else {
          return[cljs.core.str('<span class="pos">'), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8302__8307)), cljs.core.str("</span>")].join("")
        }
      }()), cljs.core.str("</h2>")].join("")
    }else {
      return[cljs.core.str("<h2>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8301__8306)), cljs.core.str(function() {
        var attrs8303__8308 = [cljs.core.str("("), cljs.core.str(pos__8298), cljs.core.str(")")].join("");
        if(cljs.core.map_QMARK_.call(null, attrs8303__8308)) {
          return[cljs.core.str("<span"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":"pos"}), attrs8303__8308))), cljs.core.str(">"), cljs.core.str("</span>")].join("")
        }else {
          return[cljs.core.str('<span class="pos">'), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8303__8308)), cljs.core.str("</span>")].join("")
        }
      }()), cljs.core.str("</h2>")].join("")
    }
  }()), cljs.core.str('<div class="demog-data"></div>'), cljs.core.str("</div>"), cljs.core.str("</div>")].join("")
};
cljs_intro.views.show_stats = function show_stats(data) {
  return[cljs.core.str(hiccups.runtime.render_html.call(null, function() {
    var demog__8311 = (new cljs.core.Keyword("\ufdd0'demog")).call(null, data);
    return[cljs.core.str(cljs_intro.views.show_player_demog.call(null, demog__8311)), cljs.core.str(cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'pos")).call(null, demog__8311), "G") ? [cljs.core.str(cljs_intro.views.show_goalie_stats.call(null, (new cljs.core.Keyword("\ufdd0'goalie")).call(null, data))), cljs.core.str(cljs_intro.views.show_shooting_stats.call(null, (new cljs.core.Keyword("\ufdd0'scoring")).call(null, data)))].join("") : cljs_intro.views.show_shooting_stats.call(null, 
    (new cljs.core.Keyword("\ufdd0'scoring")).call(null, data)))].join("")
  }()))].join("")
};
cljs_intro.views.show_history = function show_history(data) {
  return[cljs.core.str("<div"), cljs.core.str(' class="history"'), cljs.core.str(">"), cljs.core.str("<h3>Search History</h3>"), cljs.core.str(function() {
    var attrs8318__8319 = cljs.core.map.call(null, function(p1__8309_SHARP_) {
      return[cljs.core.str("<li>"), cljs.core.str(p1__8309_SHARP_), cljs.core.str("</li>")].join("")
    }, data);
    if(cljs.core.map_QMARK_.call(null, attrs8318__8319)) {
      return[cljs.core.str("<ul"), cljs.core.str(hiccups.runtime.render_attr_map.call(null, cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'class"], {"\ufdd0'id":null, "\ufdd0'class":null}), attrs8318__8319))), cljs.core.str(">"), cljs.core.str("</ul>")].join("")
    }else {
      return[cljs.core.str("<ul>"), cljs.core.str(hiccups.runtime.render_html.call(null, attrs8318__8319)), cljs.core.str("</ul>")].join("")
    }
  }()), cljs.core.str("</div>")].join("")
};
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.disposeInternal = function() {
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isVersion("9"), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
MESSAGE:"message", CONNECT:"connect"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = new Function("a", "return a");
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      try {
        goog.reflect.sinkValue(relatedTarget.nodeName)
      }catch(err) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.structs.SimplePool");
goog.require("goog.Disposable");
goog.structs.SimplePool = function(initialCount, maxCount) {
  goog.Disposable.call(this);
  this.maxCount_ = maxCount;
  this.freeQueue_ = [];
  this.createInitial_(initialCount)
};
goog.inherits(goog.structs.SimplePool, goog.Disposable);
goog.structs.SimplePool.prototype.createObjectFn_ = null;
goog.structs.SimplePool.prototype.disposeObjectFn_ = null;
goog.structs.SimplePool.prototype.setCreateObjectFn = function(createObjectFn) {
  this.createObjectFn_ = createObjectFn
};
goog.structs.SimplePool.prototype.setDisposeObjectFn = function(disposeObjectFn) {
  this.disposeObjectFn_ = disposeObjectFn
};
goog.structs.SimplePool.prototype.getObject = function() {
  if(this.freeQueue_.length) {
    return this.freeQueue_.pop()
  }
  return this.createObject()
};
goog.structs.SimplePool.prototype.releaseObject = function(obj) {
  if(this.freeQueue_.length < this.maxCount_) {
    this.freeQueue_.push(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.SimplePool.prototype.createInitial_ = function(initialCount) {
  if(initialCount > this.maxCount_) {
    throw Error("[goog.structs.SimplePool] Initial cannot be greater than max");
  }
  for(var i = 0;i < initialCount;i++) {
    this.freeQueue_.push(this.createObject())
  }
};
goog.structs.SimplePool.prototype.createObject = function() {
  if(this.createObjectFn_) {
    return this.createObjectFn_()
  }else {
    return{}
  }
};
goog.structs.SimplePool.prototype.disposeObject = function(obj) {
  if(this.disposeObjectFn_) {
    this.disposeObjectFn_(obj)
  }else {
    if(goog.isObject(obj)) {
      if(goog.isFunction(obj.dispose)) {
        obj.dispose()
      }else {
        for(var i in obj) {
          delete obj[i]
        }
      }
    }
  }
};
goog.structs.SimplePool.prototype.disposeInternal = function() {
  goog.structs.SimplePool.superClass_.disposeInternal.call(this);
  var freeQueue = this.freeQueue_;
  while(freeQueue.length) {
    this.disposeObject(freeQueue.pop())
  }
  delete this.freeQueue_
};
goog.provide("goog.events.pools");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Listener");
goog.require("goog.structs.SimplePool");
goog.require("goog.userAgent.jscript");
goog.events.ASSUME_GOOD_GC = false;
goog.events.pools.getObject;
goog.events.pools.releaseObject;
goog.events.pools.getArray;
goog.events.pools.releaseArray;
goog.events.pools.getProxy;
goog.events.pools.setProxyCallbackFunction;
goog.events.pools.releaseProxy;
goog.events.pools.getListener;
goog.events.pools.releaseListener;
goog.events.pools.getEvent;
goog.events.pools.releaseEvent;
(function() {
  var BAD_GC = !goog.events.ASSUME_GOOD_GC && goog.userAgent.jscript.HAS_JSCRIPT && !goog.userAgent.jscript.isVersion("5.7");
  function getObject() {
    return{count_:0, remaining_:0}
  }
  function getArray() {
    return[]
  }
  var proxyCallbackFunction;
  goog.events.pools.setProxyCallbackFunction = function(cb) {
    proxyCallbackFunction = cb
  };
  function getProxy() {
    var f = function(eventObject) {
      return proxyCallbackFunction.call(f.src, f.key, eventObject)
    };
    return f
  }
  function getListener() {
    return new goog.events.Listener
  }
  function getEvent() {
    return new goog.events.BrowserEvent
  }
  if(!BAD_GC) {
    goog.events.pools.getObject = getObject;
    goog.events.pools.releaseObject = goog.nullFunction;
    goog.events.pools.getArray = getArray;
    goog.events.pools.releaseArray = goog.nullFunction;
    goog.events.pools.getProxy = getProxy;
    goog.events.pools.releaseProxy = goog.nullFunction;
    goog.events.pools.getListener = getListener;
    goog.events.pools.releaseListener = goog.nullFunction;
    goog.events.pools.getEvent = getEvent;
    goog.events.pools.releaseEvent = goog.nullFunction
  }else {
    goog.events.pools.getObject = function() {
      return objectPool.getObject()
    };
    goog.events.pools.releaseObject = function(obj) {
      objectPool.releaseObject(obj)
    };
    goog.events.pools.getArray = function() {
      return arrayPool.getObject()
    };
    goog.events.pools.releaseArray = function(obj) {
      arrayPool.releaseObject(obj)
    };
    goog.events.pools.getProxy = function() {
      return proxyPool.getObject()
    };
    goog.events.pools.releaseProxy = function(obj) {
      proxyPool.releaseObject(getProxy())
    };
    goog.events.pools.getListener = function() {
      return listenerPool.getObject()
    };
    goog.events.pools.releaseListener = function(obj) {
      listenerPool.releaseObject(obj)
    };
    goog.events.pools.getEvent = function() {
      return eventPool.getObject()
    };
    goog.events.pools.releaseEvent = function(obj) {
      eventPool.releaseObject(obj)
    };
    var OBJECT_POOL_INITIAL_COUNT = 0;
    var OBJECT_POOL_MAX_COUNT = 600;
    var objectPool = new goog.structs.SimplePool(OBJECT_POOL_INITIAL_COUNT, OBJECT_POOL_MAX_COUNT);
    objectPool.setCreateObjectFn(getObject);
    var ARRAY_POOL_INITIAL_COUNT = 0;
    var ARRAY_POOL_MAX_COUNT = 600;
    var arrayPool = new goog.structs.SimplePool(ARRAY_POOL_INITIAL_COUNT, ARRAY_POOL_MAX_COUNT);
    arrayPool.setCreateObjectFn(getArray);
    var HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT = 0;
    var HANDLE_EVENT_PROXY_POOL_MAX_COUNT = 600;
    var proxyPool = new goog.structs.SimplePool(HANDLE_EVENT_PROXY_POOL_INITIAL_COUNT, HANDLE_EVENT_PROXY_POOL_MAX_COUNT);
    proxyPool.setCreateObjectFn(getProxy);
    var LISTENER_POOL_INITIAL_COUNT = 0;
    var LISTENER_POOL_MAX_COUNT = 600;
    var listenerPool = new goog.structs.SimplePool(LISTENER_POOL_INITIAL_COUNT, LISTENER_POOL_MAX_COUNT);
    listenerPool.setCreateObjectFn(getListener);
    var EVENT_POOL_INITIAL_COUNT = 0;
    var EVENT_POOL_MAX_COUNT = 600;
    var eventPool = new goog.structs.SimplePool(EVENT_POOL_INITIAL_COUNT, EVENT_POOL_MAX_COUNT);
    eventPool.setCreateObjectFn(getEvent)
  }
})();
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.pools");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.requiresSyntheticEventPropagation_;
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = goog.events.pools.getObject()
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = goog.events.pools.getObject();
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = goog.events.pools.getArray();
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.pools.getProxy();
      proxy.src = src;
      listenerObj = goog.events.pools.getListener();
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = goog.events.pools.getArray()
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          goog.events.pools.releaseProxy(proxy);
          goog.events.pools.releaseListener(listenerArray[oldIndex]);
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        goog.events.pools.releaseArray(listenerArray);
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type][capture]);
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          goog.events.pools.releaseObject(goog.events.listenerTree_[type]);
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(goog.events.synthesizeEventPropagation_()) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = goog.events.pools.getEvent();
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = goog.events.pools.getArray();
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0;
        goog.events.pools.releaseArray(ancestors)
      }
      evt.dispose();
      goog.events.pools.releaseEvent(evt)
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_);
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.events.synthesizeEventPropagation_ = function() {
  if(goog.events.requiresSyntheticEventPropagation_ === undefined) {
    goog.events.requiresSyntheticEventPropagation_ = goog.userAgent.IE && !goog.global["addEventListener"]
  }
  return goog.events.requiresSyntheticEventPropagation_
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_);
  goog.events.pools.setProxyCallbackFunction(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return Boolean(opt_cancel)
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.getFunctionName = function(fn) {
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.logToSpeedTracer_ = function(msg) {
  if(goog.global["console"] && goog.global["console"]["markTimeline"]) {
    goog.global["console"]["markTimeline"](msg)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  this.logToSpeedTracer_("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.serialize = function(object) {
  return(new goog.json.Serializer).serialize(object)
};
goog.json.Serializer = function() {
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    this.serialize_(arr[i], sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method || "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : new goog.net.XmlHttp
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    return this.xhr_ && this.xhr_.response
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.structs.Node");
goog.structs.Node = function(key, value) {
  this.key_ = key;
  this.value_ = value
};
goog.structs.Node.prototype.getKey = function() {
  return this.key_
};
goog.structs.Node.prototype.getValue = function() {
  return this.value_
};
goog.structs.Node.prototype.clone = function() {
  return new goog.structs.Node(this.key_, this.value_)
};
goog.provide("cljs.reader");
goog.require("cljs.core");
goog.require("goog.string");
cljs.reader.PushbackReader = {};
cljs.reader.read_char = function read_char(reader) {
  if(function() {
    var and__3822__auto____13151 = reader;
    if(and__3822__auto____13151) {
      return reader.cljs$reader$PushbackReader$read_char$arity$1
    }else {
      return and__3822__auto____13151
    }
  }()) {
    return reader.cljs$reader$PushbackReader$read_char$arity$1(reader)
  }else {
    var x__2413__auto____13152 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13153 = cljs.reader.read_char[goog.typeOf(x__2413__auto____13152)];
      if(or__3824__auto____13153) {
        return or__3824__auto____13153
      }else {
        var or__3824__auto____13154 = cljs.reader.read_char["_"];
        if(or__3824__auto____13154) {
          return or__3824__auto____13154
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.read-char", reader);
        }
      }
    }().call(null, reader)
  }
};
cljs.reader.unread = function unread(reader, ch) {
  if(function() {
    var and__3822__auto____13159 = reader;
    if(and__3822__auto____13159) {
      return reader.cljs$reader$PushbackReader$unread$arity$2
    }else {
      return and__3822__auto____13159
    }
  }()) {
    return reader.cljs$reader$PushbackReader$unread$arity$2(reader, ch)
  }else {
    var x__2413__auto____13160 = reader == null ? null : reader;
    return function() {
      var or__3824__auto____13161 = cljs.reader.unread[goog.typeOf(x__2413__auto____13160)];
      if(or__3824__auto____13161) {
        return or__3824__auto____13161
      }else {
        var or__3824__auto____13162 = cljs.reader.unread["_"];
        if(or__3824__auto____13162) {
          return or__3824__auto____13162
        }else {
          throw cljs.core.missing_protocol.call(null, "PushbackReader.unread", reader);
        }
      }
    }().call(null, reader, ch)
  }
};
cljs.reader.StringPushbackReader = function(s, index_atom, buffer_atom) {
  this.s = s;
  this.index_atom = index_atom;
  this.buffer_atom = buffer_atom
};
cljs.reader.StringPushbackReader.cljs$lang$type = true;
cljs.reader.StringPushbackReader.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "cljs.reader/StringPushbackReader")
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$ = true;
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$read_char$arity$1 = function(reader) {
  var this__13163 = this;
  if(cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, this__13163.buffer_atom))) {
    var idx__13164 = cljs.core.deref.call(null, this__13163.index_atom);
    cljs.core.swap_BANG_.call(null, this__13163.index_atom, cljs.core.inc);
    return this__13163.s[idx__13164]
  }else {
    var buf__13165 = cljs.core.deref.call(null, this__13163.buffer_atom);
    cljs.core.swap_BANG_.call(null, this__13163.buffer_atom, cljs.core.rest);
    return cljs.core.first.call(null, buf__13165)
  }
};
cljs.reader.StringPushbackReader.prototype.cljs$reader$PushbackReader$unread$arity$2 = function(reader, ch) {
  var this__13166 = this;
  return cljs.core.swap_BANG_.call(null, this__13166.buffer_atom, function(p1__13146_SHARP_) {
    return cljs.core.cons.call(null, ch, p1__13146_SHARP_)
  })
};
cljs.reader.StringPushbackReader;
cljs.reader.push_back_reader = function push_back_reader(s) {
  return new cljs.reader.StringPushbackReader(s, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
cljs.reader.whitespace_QMARK_ = function whitespace_QMARK_(ch) {
  var or__3824__auto____13168 = goog.string.isBreakingWhitespace(ch);
  if(cljs.core.truth_(or__3824__auto____13168)) {
    return or__3824__auto____13168
  }else {
    return"," === ch
  }
};
cljs.reader.numeric_QMARK_ = function numeric_QMARK_(ch) {
  return goog.string.isNumeric(ch)
};
cljs.reader.comment_prefix_QMARK_ = function comment_prefix_QMARK_(ch) {
  return";" === ch
};
cljs.reader.number_literal_QMARK_ = function number_literal_QMARK_(reader, initch) {
  var or__3824__auto____13173 = cljs.reader.numeric_QMARK_.call(null, initch);
  if(or__3824__auto____13173) {
    return or__3824__auto____13173
  }else {
    var and__3822__auto____13175 = function() {
      var or__3824__auto____13174 = "+" === initch;
      if(or__3824__auto____13174) {
        return or__3824__auto____13174
      }else {
        return"-" === initch
      }
    }();
    if(cljs.core.truth_(and__3822__auto____13175)) {
      return cljs.reader.numeric_QMARK_.call(null, function() {
        var next_ch__13176 = cljs.reader.read_char.call(null, reader);
        cljs.reader.unread.call(null, reader, next_ch__13176);
        return next_ch__13176
      }())
    }else {
      return and__3822__auto____13175
    }
  }
};
cljs.reader.reader_error = function() {
  var reader_error__delegate = function(rdr, msg) {
    throw new Error(cljs.core.apply.call(null, cljs.core.str, msg));
  };
  var reader_error = function(rdr, var_args) {
    var msg = null;
    if(goog.isDef(var_args)) {
      msg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return reader_error__delegate.call(this, rdr, msg)
  };
  reader_error.cljs$lang$maxFixedArity = 1;
  reader_error.cljs$lang$applyTo = function(arglist__13177) {
    var rdr = cljs.core.first(arglist__13177);
    var msg = cljs.core.rest(arglist__13177);
    return reader_error__delegate(rdr, msg)
  };
  reader_error.cljs$lang$arity$variadic = reader_error__delegate;
  return reader_error
}();
cljs.reader.macro_terminating_QMARK_ = function macro_terminating_QMARK_(ch) {
  var and__3822__auto____13181 = !(ch === "#");
  if(and__3822__auto____13181) {
    var and__3822__auto____13182 = !(ch === "'");
    if(and__3822__auto____13182) {
      var and__3822__auto____13183 = !(ch === ":");
      if(and__3822__auto____13183) {
        return cljs.reader.macros.call(null, ch)
      }else {
        return and__3822__auto____13183
      }
    }else {
      return and__3822__auto____13182
    }
  }else {
    return and__3822__auto____13181
  }
};
cljs.reader.read_token = function read_token(rdr, initch) {
  var sb__13188 = new goog.string.StringBuffer(initch);
  var ch__13189 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(function() {
      var or__3824__auto____13190 = ch__13189 == null;
      if(or__3824__auto____13190) {
        return or__3824__auto____13190
      }else {
        var or__3824__auto____13191 = cljs.reader.whitespace_QMARK_.call(null, ch__13189);
        if(or__3824__auto____13191) {
          return or__3824__auto____13191
        }else {
          return cljs.reader.macro_terminating_QMARK_.call(null, ch__13189)
        }
      }
    }()) {
      cljs.reader.unread.call(null, rdr, ch__13189);
      return sb__13188.toString()
    }else {
      var G__13192 = function() {
        sb__13188.append(ch__13189);
        return sb__13188
      }();
      var G__13193 = cljs.reader.read_char.call(null, rdr);
      sb__13188 = G__13192;
      ch__13189 = G__13193;
      continue
    }
    break
  }
};
cljs.reader.skip_line = function skip_line(reader, _) {
  while(true) {
    var ch__13197 = cljs.reader.read_char.call(null, reader);
    if(function() {
      var or__3824__auto____13198 = ch__13197 === "n";
      if(or__3824__auto____13198) {
        return or__3824__auto____13198
      }else {
        var or__3824__auto____13199 = ch__13197 === "r";
        if(or__3824__auto____13199) {
          return or__3824__auto____13199
        }else {
          return ch__13197 == null
        }
      }
    }()) {
      return reader
    }else {
      continue
    }
    break
  }
};
cljs.reader.int_pattern = cljs.core.re_pattern.call(null, "([-+]?)(?:(0)|([1-9][0-9]*)|0[xX]([0-9A-Fa-f]+)|0([0-7]+)|([1-9][0-9]?)[rR]([0-9A-Za-z]+)|0[0-9]+)(N)?");
cljs.reader.ratio_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+)/([0-9]+)");
cljs.reader.float_pattern = cljs.core.re_pattern.call(null, "([-+]?[0-9]+(\\.[0-9]*)?([eE][-+]?[0-9]+)?)(M)?");
cljs.reader.symbol_pattern = cljs.core.re_pattern.call(null, "[:]?([^0-9/].*/)?([^0-9/][^/]*)");
cljs.reader.re_find_STAR_ = function re_find_STAR_(re, s) {
  var matches__13201 = re.exec(s);
  if(matches__13201 == null) {
    return null
  }else {
    if(matches__13201.length === 1) {
      return matches__13201[0]
    }else {
      return matches__13201
    }
  }
};
cljs.reader.match_int = function match_int(s) {
  var groups__13209 = cljs.reader.re_find_STAR_.call(null, cljs.reader.int_pattern, s);
  var group3__13210 = groups__13209[2];
  if(!function() {
    var or__3824__auto____13211 = group3__13210 == null;
    if(or__3824__auto____13211) {
      return or__3824__auto____13211
    }else {
      return group3__13210.length < 1
    }
  }()) {
    return 0
  }else {
    var negate__13212 = "-" === groups__13209[1] ? -1 : 1;
    var a__13213 = cljs.core.truth_(groups__13209[3]) ? [groups__13209[3], 10] : cljs.core.truth_(groups__13209[4]) ? [groups__13209[4], 16] : cljs.core.truth_(groups__13209[5]) ? [groups__13209[5], 8] : cljs.core.truth_(groups__13209[7]) ? [groups__13209[7], parseInt(groups__13209[7])] : "\ufdd0'default" ? [null, null] : null;
    var n__13214 = a__13213[0];
    var radix__13215 = a__13213[1];
    if(n__13214 == null) {
      return null
    }else {
      return negate__13212 * parseInt(n__13214, radix__13215)
    }
  }
};
cljs.reader.match_ratio = function match_ratio(s) {
  var groups__13219 = cljs.reader.re_find_STAR_.call(null, cljs.reader.ratio_pattern, s);
  var numinator__13220 = groups__13219[1];
  var denominator__13221 = groups__13219[2];
  return parseInt(numinator__13220) / parseInt(denominator__13221)
};
cljs.reader.match_float = function match_float(s) {
  return parseFloat(s)
};
cljs.reader.re_matches_STAR_ = function re_matches_STAR_(re, s) {
  var matches__13224 = re.exec(s);
  if(function() {
    var and__3822__auto____13225 = !(matches__13224 == null);
    if(and__3822__auto____13225) {
      return matches__13224[0] === s
    }else {
      return and__3822__auto____13225
    }
  }()) {
    if(matches__13224.length === 1) {
      return matches__13224[0]
    }else {
      return matches__13224
    }
  }else {
    return null
  }
};
cljs.reader.match_number = function match_number(s) {
  if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.int_pattern, s))) {
    return cljs.reader.match_int.call(null, s)
  }else {
    if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.ratio_pattern, s))) {
      return cljs.reader.match_ratio.call(null, s)
    }else {
      if(cljs.core.truth_(cljs.reader.re_matches_STAR_.call(null, cljs.reader.float_pattern, s))) {
        return cljs.reader.match_float.call(null, s)
      }else {
        return null
      }
    }
  }
};
cljs.reader.escape_char_map = function escape_char_map(c) {
  if(c === "t") {
    return"\t"
  }else {
    if(c === "r") {
      return"\r"
    }else {
      if(c === "n") {
        return"\n"
      }else {
        if(c === "\\") {
          return"\\"
        }else {
          if(c === '"') {
            return'"'
          }else {
            if(c === "b") {
              return"\u0008"
            }else {
              if(c === "f") {
                return"\u000c"
              }else {
                if("\ufdd0'else") {
                  return null
                }else {
                  return null
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.read_2_chars = function read_2_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.read_4_chars = function read_4_chars(reader) {
  return(new goog.string.StringBuffer(cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader), cljs.reader.read_char.call(null, reader))).toString()
};
cljs.reader.unicode_2_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{2}");
cljs.reader.unicode_4_pattern = cljs.core.re_pattern.call(null, "[0-9A-Fa-f]{4}");
cljs.reader.validate_unicode_escape = function validate_unicode_escape(unicode_pattern, reader, escape_char, unicode_str) {
  if(cljs.core.truth_(cljs.core.re_matches.call(null, unicode_pattern, unicode_str))) {
    return unicode_str
  }else {
    return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", escape_char, unicode_str)
  }
};
cljs.reader.make_unicode_char = function make_unicode_char(code_str) {
  var code__13227 = parseInt(code_str, 16);
  return String.fromCharCode(code__13227)
};
cljs.reader.escape_char = function escape_char(buffer, reader) {
  var ch__13230 = cljs.reader.read_char.call(null, reader);
  var mapresult__13231 = cljs.reader.escape_char_map.call(null, ch__13230);
  if(cljs.core.truth_(mapresult__13231)) {
    return mapresult__13231
  }else {
    if(ch__13230 === "x") {
      return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_2_pattern, reader, ch__13230, cljs.reader.read_2_chars.call(null, reader)))
    }else {
      if(ch__13230 === "u") {
        return cljs.reader.make_unicode_char.call(null, cljs.reader.validate_unicode_escape.call(null, cljs.reader.unicode_4_pattern, reader, ch__13230, cljs.reader.read_4_chars.call(null, reader)))
      }else {
        if(cljs.reader.numeric_QMARK_.call(null, ch__13230)) {
          return String.fromCharCode(ch__13230)
        }else {
          if("\ufdd0'else") {
            return cljs.reader.reader_error.call(null, reader, "Unexpected unicode escape \\", ch__13230)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.reader.read_past = function read_past(pred, rdr) {
  var ch__13233 = cljs.reader.read_char.call(null, rdr);
  while(true) {
    if(cljs.core.truth_(pred.call(null, ch__13233))) {
      var G__13234 = cljs.reader.read_char.call(null, rdr);
      ch__13233 = G__13234;
      continue
    }else {
      return ch__13233
    }
    break
  }
};
cljs.reader.read_delimited_list = function read_delimited_list(delim, rdr, recursive_QMARK_) {
  var a__13241 = cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY);
  while(true) {
    var ch__13242 = cljs.reader.read_past.call(null, cljs.reader.whitespace_QMARK_, rdr);
    if(cljs.core.truth_(ch__13242)) {
    }else {
      cljs.reader.reader_error.call(null, rdr, "EOF")
    }
    if(delim === ch__13242) {
      return cljs.core.persistent_BANG_.call(null, a__13241)
    }else {
      var temp__3971__auto____13243 = cljs.reader.macros.call(null, ch__13242);
      if(cljs.core.truth_(temp__3971__auto____13243)) {
        var macrofn__13244 = temp__3971__auto____13243;
        var mret__13245 = macrofn__13244.call(null, rdr, ch__13242);
        var G__13247 = mret__13245 === rdr ? a__13241 : cljs.core.conj_BANG_.call(null, a__13241, mret__13245);
        a__13241 = G__13247;
        continue
      }else {
        cljs.reader.unread.call(null, rdr, ch__13242);
        var o__13246 = cljs.reader.read.call(null, rdr, true, null, recursive_QMARK_);
        var G__13248 = o__13246 === rdr ? a__13241 : cljs.core.conj_BANG_.call(null, a__13241, o__13246);
        a__13241 = G__13248;
        continue
      }
    }
    break
  }
};
cljs.reader.not_implemented = function not_implemented(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Reader for ", ch, " not implemented yet")
};
cljs.reader.read_dispatch = function read_dispatch(rdr, _) {
  var ch__13253 = cljs.reader.read_char.call(null, rdr);
  var dm__13254 = cljs.reader.dispatch_macros.call(null, ch__13253);
  if(cljs.core.truth_(dm__13254)) {
    return dm__13254.call(null, rdr, _)
  }else {
    var temp__3971__auto____13255 = cljs.reader.maybe_read_tagged_type.call(null, rdr, ch__13253);
    if(cljs.core.truth_(temp__3971__auto____13255)) {
      var obj__13256 = temp__3971__auto____13255;
      return obj__13256
    }else {
      return cljs.reader.reader_error.call(null, rdr, "No dispatch macro for ", ch__13253)
    }
  }
};
cljs.reader.read_unmatched_delimiter = function read_unmatched_delimiter(rdr, ch) {
  return cljs.reader.reader_error.call(null, rdr, "Unmached delimiter ", ch)
};
cljs.reader.read_list = function read_list(rdr, _) {
  return cljs.core.apply.call(null, cljs.core.list, cljs.reader.read_delimited_list.call(null, ")", rdr, true))
};
cljs.reader.read_comment = cljs.reader.skip_line;
cljs.reader.read_vector = function read_vector(rdr, _) {
  return cljs.reader.read_delimited_list.call(null, "]", rdr, true)
};
cljs.reader.read_map = function read_map(rdr, _) {
  var l__13258 = cljs.reader.read_delimited_list.call(null, "}", rdr, true);
  if(cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, l__13258))) {
    cljs.reader.reader_error.call(null, rdr, "Map literal must contain an even number of forms")
  }else {
  }
  return cljs.core.apply.call(null, cljs.core.hash_map, l__13258)
};
cljs.reader.read_number = function read_number(reader, initch) {
  var buffer__13265 = new goog.string.StringBuffer(initch);
  var ch__13266 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(cljs.core.truth_(function() {
      var or__3824__auto____13267 = ch__13266 == null;
      if(or__3824__auto____13267) {
        return or__3824__auto____13267
      }else {
        var or__3824__auto____13268 = cljs.reader.whitespace_QMARK_.call(null, ch__13266);
        if(or__3824__auto____13268) {
          return or__3824__auto____13268
        }else {
          return cljs.reader.macros.call(null, ch__13266)
        }
      }
    }())) {
      cljs.reader.unread.call(null, reader, ch__13266);
      var s__13269 = buffer__13265.toString();
      var or__3824__auto____13270 = cljs.reader.match_number.call(null, s__13269);
      if(cljs.core.truth_(or__3824__auto____13270)) {
        return or__3824__auto____13270
      }else {
        return cljs.reader.reader_error.call(null, reader, "Invalid number format [", s__13269, "]")
      }
    }else {
      var G__13271 = function() {
        buffer__13265.append(ch__13266);
        return buffer__13265
      }();
      var G__13272 = cljs.reader.read_char.call(null, reader);
      buffer__13265 = G__13271;
      ch__13266 = G__13272;
      continue
    }
    break
  }
};
cljs.reader.read_string_STAR_ = function read_string_STAR_(reader, _) {
  var buffer__13275 = new goog.string.StringBuffer;
  var ch__13276 = cljs.reader.read_char.call(null, reader);
  while(true) {
    if(ch__13276 == null) {
      return cljs.reader.reader_error.call(null, reader, "EOF while reading string")
    }else {
      if("\\" === ch__13276) {
        var G__13277 = function() {
          buffer__13275.append(cljs.reader.escape_char.call(null, buffer__13275, reader));
          return buffer__13275
        }();
        var G__13278 = cljs.reader.read_char.call(null, reader);
        buffer__13275 = G__13277;
        ch__13276 = G__13278;
        continue
      }else {
        if('"' === ch__13276) {
          return buffer__13275.toString()
        }else {
          if("\ufdd0'default") {
            var G__13279 = function() {
              buffer__13275.append(ch__13276);
              return buffer__13275
            }();
            var G__13280 = cljs.reader.read_char.call(null, reader);
            buffer__13275 = G__13279;
            ch__13276 = G__13280;
            continue
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.special_symbols = function special_symbols(t, not_found) {
  if(t === "nil") {
    return null
  }else {
    if(t === "true") {
      return true
    }else {
      if(t === "false") {
        return false
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.read_symbol = function read_symbol(reader, initch) {
  var token__13282 = cljs.reader.read_token.call(null, reader, initch);
  if(cljs.core.truth_(goog.string.contains(token__13282, "/"))) {
    return cljs.core.symbol.call(null, cljs.core.subs.call(null, token__13282, 0, token__13282.indexOf("/")), cljs.core.subs.call(null, token__13282, token__13282.indexOf("/") + 1, token__13282.length))
  }else {
    return cljs.reader.special_symbols.call(null, token__13282, cljs.core.symbol.call(null, token__13282))
  }
};
cljs.reader.read_keyword = function read_keyword(reader, initch) {
  var token__13292 = cljs.reader.read_token.call(null, reader, cljs.reader.read_char.call(null, reader));
  var a__13293 = cljs.reader.re_matches_STAR_.call(null, cljs.reader.symbol_pattern, token__13292);
  var token__13294 = a__13293[0];
  var ns__13295 = a__13293[1];
  var name__13296 = a__13293[2];
  if(cljs.core.truth_(function() {
    var or__3824__auto____13298 = function() {
      var and__3822__auto____13297 = !(void 0 === ns__13295);
      if(and__3822__auto____13297) {
        return ns__13295.substring(ns__13295.length - 2, ns__13295.length) === ":/"
      }else {
        return and__3822__auto____13297
      }
    }();
    if(cljs.core.truth_(or__3824__auto____13298)) {
      return or__3824__auto____13298
    }else {
      var or__3824__auto____13299 = name__13296[name__13296.length - 1] === ":";
      if(or__3824__auto____13299) {
        return or__3824__auto____13299
      }else {
        return!(token__13294.indexOf("::", 1) === -1)
      }
    }
  }())) {
    return cljs.reader.reader_error.call(null, reader, "Invalid token: ", token__13294)
  }else {
    if(function() {
      var and__3822__auto____13300 = !(ns__13295 == null);
      if(and__3822__auto____13300) {
        return ns__13295.length > 0
      }else {
        return and__3822__auto____13300
      }
    }()) {
      return cljs.core.keyword.call(null, ns__13295.substring(0, ns__13295.indexOf("/")), name__13296)
    }else {
      return cljs.core.keyword.call(null, token__13294)
    }
  }
};
cljs.reader.desugar_meta = function desugar_meta(f) {
  if(cljs.core.symbol_QMARK_.call(null, f)) {
    return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
  }else {
    if(cljs.core.string_QMARK_.call(null, f)) {
      return cljs.core.ObjMap.fromObject(["\ufdd0'tag"], {"\ufdd0'tag":f})
    }else {
      if(cljs.core.keyword_QMARK_.call(null, f)) {
        return cljs.core.PersistentArrayMap.fromArrays([f], [true])
      }else {
        if("\ufdd0'else") {
          return f
        }else {
          return null
        }
      }
    }
  }
};
cljs.reader.wrapping_reader = function wrapping_reader(sym) {
  return function(rdr, _) {
    return cljs.core.list.call(null, sym, cljs.reader.read.call(null, rdr, true, null, true))
  }
};
cljs.reader.throwing_reader = function throwing_reader(msg) {
  return function(rdr, _) {
    return cljs.reader.reader_error.call(null, rdr, msg)
  }
};
cljs.reader.read_meta = function read_meta(rdr, _) {
  var m__13306 = cljs.reader.desugar_meta.call(null, cljs.reader.read.call(null, rdr, true, null, true));
  if(cljs.core.map_QMARK_.call(null, m__13306)) {
  }else {
    cljs.reader.reader_error.call(null, rdr, "Metadata must be Symbol,Keyword,String or Map")
  }
  var o__13307 = cljs.reader.read.call(null, rdr, true, null, true);
  if(function() {
    var G__13308__13309 = o__13307;
    if(G__13308__13309) {
      if(function() {
        var or__3824__auto____13310 = G__13308__13309.cljs$lang$protocol_mask$partition0$ & 262144;
        if(or__3824__auto____13310) {
          return or__3824__auto____13310
        }else {
          return G__13308__13309.cljs$core$IWithMeta$
        }
      }()) {
        return true
      }else {
        if(!G__13308__13309.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13308__13309)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IWithMeta, G__13308__13309)
    }
  }()) {
    return cljs.core.with_meta.call(null, o__13307, cljs.core.merge.call(null, cljs.core.meta.call(null, o__13307), m__13306))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Metadata can only be applied to IWithMetas")
  }
};
cljs.reader.read_set = function read_set(rdr, _) {
  return cljs.core.set.call(null, cljs.reader.read_delimited_list.call(null, "}", rdr, true))
};
cljs.reader.read_regex = function read_regex(rdr, ch) {
  return cljs.core.re_pattern.call(null, cljs.reader.read_string_STAR_.call(null, rdr, ch))
};
cljs.reader.read_discard = function read_discard(rdr, _) {
  cljs.reader.read.call(null, rdr, true, null, true);
  return rdr
};
cljs.reader.macros = function macros(c) {
  if(c === '"') {
    return cljs.reader.read_string_STAR_
  }else {
    if(c === ":") {
      return cljs.reader.read_keyword
    }else {
      if(c === ";") {
        return cljs.reader.not_implemented
      }else {
        if(c === "'") {
          return cljs.reader.wrapping_reader.call(null, "\ufdd1'quote")
        }else {
          if(c === "@") {
            return cljs.reader.wrapping_reader.call(null, "\ufdd1'deref")
          }else {
            if(c === "^") {
              return cljs.reader.read_meta
            }else {
              if(c === "`") {
                return cljs.reader.not_implemented
              }else {
                if(c === "~") {
                  return cljs.reader.not_implemented
                }else {
                  if(c === "(") {
                    return cljs.reader.read_list
                  }else {
                    if(c === ")") {
                      return cljs.reader.read_unmatched_delimiter
                    }else {
                      if(c === "[") {
                        return cljs.reader.read_vector
                      }else {
                        if(c === "]") {
                          return cljs.reader.read_unmatched_delimiter
                        }else {
                          if(c === "{") {
                            return cljs.reader.read_map
                          }else {
                            if(c === "}") {
                              return cljs.reader.read_unmatched_delimiter
                            }else {
                              if(c === "\\") {
                                return cljs.reader.read_char
                              }else {
                                if(c === "%") {
                                  return cljs.reader.not_implemented
                                }else {
                                  if(c === "#") {
                                    return cljs.reader.read_dispatch
                                  }else {
                                    if("\ufdd0'else") {
                                      return null
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.reader.dispatch_macros = function dispatch_macros(s) {
  if(s === "{") {
    return cljs.reader.read_set
  }else {
    if(s === "<") {
      return cljs.reader.throwing_reader.call(null, "Unreadable form")
    }else {
      if(s === '"') {
        return cljs.reader.read_regex
      }else {
        if(s === "!") {
          return cljs.reader.read_comment
        }else {
          if(s === "_") {
            return cljs.reader.read_discard
          }else {
            if("\ufdd0'else") {
              return null
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.reader.read = function read(reader, eof_is_error, sentinel, is_recursive) {
  while(true) {
    var ch__13314 = cljs.reader.read_char.call(null, reader);
    if(ch__13314 == null) {
      if(cljs.core.truth_(eof_is_error)) {
        return cljs.reader.reader_error.call(null, reader, "EOF")
      }else {
        return sentinel
      }
    }else {
      if(cljs.reader.whitespace_QMARK_.call(null, ch__13314)) {
        var G__13317 = reader;
        var G__13318 = eof_is_error;
        var G__13319 = sentinel;
        var G__13320 = is_recursive;
        reader = G__13317;
        eof_is_error = G__13318;
        sentinel = G__13319;
        is_recursive = G__13320;
        continue
      }else {
        if(cljs.reader.comment_prefix_QMARK_.call(null, ch__13314)) {
          var G__13321 = cljs.reader.read_comment.call(null, reader, ch__13314);
          var G__13322 = eof_is_error;
          var G__13323 = sentinel;
          var G__13324 = is_recursive;
          reader = G__13321;
          eof_is_error = G__13322;
          sentinel = G__13323;
          is_recursive = G__13324;
          continue
        }else {
          if("\ufdd0'else") {
            var f__13315 = cljs.reader.macros.call(null, ch__13314);
            var res__13316 = cljs.core.truth_(f__13315) ? f__13315.call(null, reader, ch__13314) : cljs.reader.number_literal_QMARK_.call(null, reader, ch__13314) ? cljs.reader.read_number.call(null, reader, ch__13314) : "\ufdd0'else" ? cljs.reader.read_symbol.call(null, reader, ch__13314) : null;
            if(res__13316 === reader) {
              var G__13325 = reader;
              var G__13326 = eof_is_error;
              var G__13327 = sentinel;
              var G__13328 = is_recursive;
              reader = G__13325;
              eof_is_error = G__13326;
              sentinel = G__13327;
              is_recursive = G__13328;
              continue
            }else {
              return res__13316
            }
          }else {
            return null
          }
        }
      }
    }
    break
  }
};
cljs.reader.read_string = function read_string(s) {
  var r__13330 = cljs.reader.push_back_reader.call(null, s);
  return cljs.reader.read.call(null, r__13330, true, null, false)
};
cljs.reader.zero_fill_right = function zero_fill_right(s, width) {
  if(cljs.core._EQ_.call(null, width, cljs.core.count.call(null, s))) {
    return s
  }else {
    if(width < cljs.core.count.call(null, s)) {
      return s.substring(0, width)
    }else {
      if("\ufdd0'else") {
        var b__13332 = new goog.string.StringBuffer(s);
        while(true) {
          if(b__13332.getLength() < width) {
            var G__13333 = b__13332.append("0");
            b__13332 = G__13333;
            continue
          }else {
            return b__13332.toString()
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.reader.divisible_QMARK_ = function divisible_QMARK_(num, div) {
  return num % div === 0
};
cljs.reader.indivisible_QMARK_ = function indivisible_QMARK_(num, div) {
  return cljs.core.not.call(null, cljs.reader.divisible_QMARK_.call(null, num, div))
};
cljs.reader.leap_year_QMARK_ = function leap_year_QMARK_(year) {
  var and__3822__auto____13336 = cljs.reader.divisible_QMARK_.call(null, year, 4);
  if(cljs.core.truth_(and__3822__auto____13336)) {
    var or__3824__auto____13337 = cljs.reader.indivisible_QMARK_.call(null, year, 100);
    if(cljs.core.truth_(or__3824__auto____13337)) {
      return or__3824__auto____13337
    }else {
      return cljs.reader.divisible_QMARK_.call(null, year, 400)
    }
  }else {
    return and__3822__auto____13336
  }
};
cljs.reader.days_in_month = function() {
  var dim_norm__13342 = cljs.core.PersistentVector.fromArray([null, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  var dim_leap__13343 = cljs.core.PersistentVector.fromArray([null, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], true);
  return function(month, leap_year_QMARK_) {
    return cljs.core._lookup.call(null, cljs.core.truth_(leap_year_QMARK_) ? dim_leap__13343 : dim_norm__13342, month, null)
  }
}();
cljs.reader.parse_and_validate_timestamp = function() {
  var timestamp__13344 = /(\d\d\d\d)(?:-(\d\d)(?:-(\d\d)(?:[T](\d\d)(?::(\d\d)(?::(\d\d)(?:[.](\d+))?)?)?)?)?)?(?:[Z]|([-+])(\d\d):(\d\d))?/;
  var check__13346 = function(low, n, high, msg) {
    if(function() {
      var and__3822__auto____13345 = low <= n;
      if(and__3822__auto____13345) {
        return n <= high
      }else {
        return and__3822__auto____13345
      }
    }()) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str(msg), cljs.core.str(" Failed:  "), cljs.core.str(low), cljs.core.str("<="), cljs.core.str(n), cljs.core.str("<="), cljs.core.str(high)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'<=", "\ufdd1'low", "\ufdd1'n", "\ufdd1'high"), cljs.core.hash_map("\ufdd0'line", 474))))].join(""));
    }
    return n
  };
  return function(ts) {
    var temp__3974__auto____13347 = cljs.core.map.call(null, cljs.core.vec, cljs.core.split_at.call(null, 8, cljs.core.re_matches.call(null, timestamp__13344, ts)));
    if(cljs.core.truth_(temp__3974__auto____13347)) {
      var vec__13348__13351 = temp__3974__auto____13347;
      var vec__13349__13352 = cljs.core.nth.call(null, vec__13348__13351, 0, null);
      var ___13353 = cljs.core.nth.call(null, vec__13349__13352, 0, null);
      var years__13354 = cljs.core.nth.call(null, vec__13349__13352, 1, null);
      var months__13355 = cljs.core.nth.call(null, vec__13349__13352, 2, null);
      var days__13356 = cljs.core.nth.call(null, vec__13349__13352, 3, null);
      var hours__13357 = cljs.core.nth.call(null, vec__13349__13352, 4, null);
      var minutes__13358 = cljs.core.nth.call(null, vec__13349__13352, 5, null);
      var seconds__13359 = cljs.core.nth.call(null, vec__13349__13352, 6, null);
      var milliseconds__13360 = cljs.core.nth.call(null, vec__13349__13352, 7, null);
      var vec__13350__13361 = cljs.core.nth.call(null, vec__13348__13351, 1, null);
      var ___13362 = cljs.core.nth.call(null, vec__13350__13361, 0, null);
      var ___13363 = cljs.core.nth.call(null, vec__13350__13361, 1, null);
      var ___13364 = cljs.core.nth.call(null, vec__13350__13361, 2, null);
      var V__13365 = vec__13348__13351;
      var vec__13366__13369 = cljs.core.map.call(null, function(v) {
        return cljs.core.map.call(null, function(p1__13341_SHARP_) {
          return parseInt(p1__13341_SHARP_)
        }, v)
      }, cljs.core.map.call(null, function(p1__13339_SHARP_, p2__13338_SHARP_) {
        return cljs.core.update_in.call(null, p2__13338_SHARP_, cljs.core.PersistentVector.fromArray([0], true), p1__13339_SHARP_)
      }, cljs.core.PersistentVector.fromArray([cljs.core.constantly.call(null, null), function(p1__13340_SHARP_) {
        if(cljs.core._EQ_.call(null, p1__13340_SHARP_, "-")) {
          return"-1"
        }else {
          return"1"
        }
      }], true), V__13365));
      var vec__13367__13370 = cljs.core.nth.call(null, vec__13366__13369, 0, null);
      var ___13371 = cljs.core.nth.call(null, vec__13367__13370, 0, null);
      var y__13372 = cljs.core.nth.call(null, vec__13367__13370, 1, null);
      var mo__13373 = cljs.core.nth.call(null, vec__13367__13370, 2, null);
      var d__13374 = cljs.core.nth.call(null, vec__13367__13370, 3, null);
      var h__13375 = cljs.core.nth.call(null, vec__13367__13370, 4, null);
      var m__13376 = cljs.core.nth.call(null, vec__13367__13370, 5, null);
      var s__13377 = cljs.core.nth.call(null, vec__13367__13370, 6, null);
      var ms__13378 = cljs.core.nth.call(null, vec__13367__13370, 7, null);
      var vec__13368__13379 = cljs.core.nth.call(null, vec__13366__13369, 1, null);
      var offset_sign__13380 = cljs.core.nth.call(null, vec__13368__13379, 0, null);
      var offset_hours__13381 = cljs.core.nth.call(null, vec__13368__13379, 1, null);
      var offset_minutes__13382 = cljs.core.nth.call(null, vec__13368__13379, 2, null);
      var offset__13383 = offset_sign__13380 * (offset_hours__13381 * 60 + offset_minutes__13382);
      return cljs.core.PersistentVector.fromArray([cljs.core.not.call(null, years__13354) ? 1970 : y__13372, cljs.core.not.call(null, months__13355) ? 1 : check__13346.call(null, 1, mo__13373, 12, "timestamp month field must be in range 1..12"), cljs.core.not.call(null, days__13356) ? 1 : check__13346.call(null, 1, d__13374, cljs.reader.days_in_month.call(null, mo__13373, cljs.reader.leap_year_QMARK_.call(null, y__13372)), "timestamp day field must be in range 1..last day in month"), cljs.core.not.call(null, 
      hours__13357) ? 0 : check__13346.call(null, 0, h__13375, 23, "timestamp hour field must be in range 0..23"), cljs.core.not.call(null, minutes__13358) ? 0 : check__13346.call(null, 0, m__13376, 59, "timestamp minute field must be in range 0..59"), cljs.core.not.call(null, seconds__13359) ? 0 : check__13346.call(null, 0, s__13377, cljs.core._EQ_.call(null, m__13376, 59) ? 60 : 59, "timestamp second field must be in range 0..60"), cljs.core.not.call(null, milliseconds__13360) ? 0 : check__13346.call(null, 
      0, ms__13378, 999, "timestamp millisecond field must be in range 0..999"), offset__13383], true)
    }else {
      return null
    }
  }
}();
cljs.reader.parse_timestamp = function parse_timestamp(ts) {
  var temp__3971__auto____13395 = cljs.reader.parse_and_validate_timestamp.call(null, ts);
  if(cljs.core.truth_(temp__3971__auto____13395)) {
    var vec__13396__13397 = temp__3971__auto____13395;
    var years__13398 = cljs.core.nth.call(null, vec__13396__13397, 0, null);
    var months__13399 = cljs.core.nth.call(null, vec__13396__13397, 1, null);
    var days__13400 = cljs.core.nth.call(null, vec__13396__13397, 2, null);
    var hours__13401 = cljs.core.nth.call(null, vec__13396__13397, 3, null);
    var minutes__13402 = cljs.core.nth.call(null, vec__13396__13397, 4, null);
    var seconds__13403 = cljs.core.nth.call(null, vec__13396__13397, 5, null);
    var ms__13404 = cljs.core.nth.call(null, vec__13396__13397, 6, null);
    var offset__13405 = cljs.core.nth.call(null, vec__13396__13397, 7, null);
    return new Date(Date.UTC(years__13398, months__13399 - 1, days__13400, hours__13401, minutes__13402, seconds__13403, ms__13404) - offset__13405 * 60 * 1E3)
  }else {
    return cljs.reader.reader_error.call(null, null, [cljs.core.str("Unrecognized date/time syntax: "), cljs.core.str(ts)].join(""))
  }
};
cljs.reader.read_date = function read_date(s) {
  if(cljs.core.string_QMARK_.call(null, s)) {
    return cljs.reader.parse_timestamp.call(null, s)
  }else {
    return cljs.reader.reader_error.call(null, null, "Instance literal expects a string for its timestamp.")
  }
};
cljs.reader.read_queue = function read_queue(elems) {
  if(cljs.core.vector_QMARK_.call(null, elems)) {
    return cljs.core.into.call(null, cljs.core.PersistentQueue.EMPTY, elems)
  }else {
    return cljs.reader.reader_error.call(null, null, "Queue literal expects a vector for its elements.")
  }
};
cljs.reader.read_uuid = function read_uuid(uuid) {
  if(cljs.core.string_QMARK_.call(null, uuid)) {
    return new cljs.core.UUID(uuid)
  }else {
    return cljs.reader.reader_error.call(null, null, "UUID literal expects a string as its representation.")
  }
};
cljs.reader._STAR_tag_table_STAR_ = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["inst", "uuid", "queue"], {"inst":cljs.reader.read_date, "uuid":cljs.reader.read_uuid, "queue":cljs.reader.read_queue}));
cljs.reader.maybe_read_tagged_type = function maybe_read_tagged_type(rdr, initch) {
  var tag__13409 = cljs.reader.read_symbol.call(null, rdr, initch);
  var temp__3971__auto____13410 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), cljs.core.name.call(null, tag__13409), null);
  if(cljs.core.truth_(temp__3971__auto____13410)) {
    var pfn__13411 = temp__3971__auto____13410;
    return pfn__13411.call(null, cljs.reader.read.call(null, rdr, true, null, false))
  }else {
    return cljs.reader.reader_error.call(null, rdr, "Could not find tag parser for ", cljs.core.name.call(null, tag__13409), " in ", cljs.core.pr_str.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_))))
  }
};
cljs.reader.register_tag_parser_BANG_ = function register_tag_parser_BANG_(tag, f) {
  var tag__13414 = cljs.core.name.call(null, tag);
  var old_parser__13415 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13414, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.assoc, tag__13414, f);
  return old_parser__13415
};
cljs.reader.deregister_tag_parser_BANG_ = function deregister_tag_parser_BANG_(tag) {
  var tag__13418 = cljs.core.name.call(null, tag);
  var old_parser__13419 = cljs.core._lookup.call(null, cljs.core.deref.call(null, cljs.reader._STAR_tag_table_STAR_), tag__13418, null);
  cljs.core.swap_BANG_.call(null, cljs.reader._STAR_tag_table_STAR_, cljs.core.dissoc, tag__13418);
  return old_parser__13419
};
goog.provide("shoreleave.browser.storage.localstorage");
goog.require("cljs.core");
goog.require("cljs.reader");
shoreleave.browser.storage.localstorage.ls_watchers = cljs.core.ObjMap.EMPTY;
goog.provide("shoreleave.browser.blob");
goog.require("cljs.core");
shoreleave.browser.blob.blobber = function() {
  var blobber = null;
  var blobber__0 = function() {
    return blobber.call(null, window)
  };
  var blobber__1 = function(w) {
    var or__3824__auto____12397 = w.BlobBuilder;
    if(cljs.core.truth_(or__3824__auto____12397)) {
      return or__3824__auto____12397
    }else {
      var or__3824__auto____12398 = w.WebKitBlobBuilder;
      if(cljs.core.truth_(or__3824__auto____12398)) {
        return or__3824__auto____12398
      }else {
        return w.MozBlobBuilder
      }
    }
  };
  blobber = function(w) {
    switch(arguments.length) {
      case 0:
        return blobber__0.call(this);
      case 1:
        return blobber__1.call(this, w)
    }
    throw"Invalid arity: " + arguments.length;
  };
  blobber.cljs$lang$arity$0 = blobber__0;
  blobber.cljs$lang$arity$1 = blobber__1;
  return blobber
}();
window.BlobBuilder = shoreleave.browser.blob.blobber.call(null);
shoreleave.browser.blob.blob_builder = function blob_builder() {
  return new window.BlobBuilder
};
window.BlobBuilder.prototype.cljs$core$ITransientCollection$ = true;
window.BlobBuilder.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(blobber, str_piece) {
  return blobber.append(str_piece)
};
shoreleave.browser.blob.blob = function blob(blobber) {
  return blobber.getBlob()
};
shoreleave.browser.blob.object_url_BANG_ = function object_url_BANG_(file_or_blob) {
  var url__12402 = function() {
    var or__3824__auto____12401 = window.URL;
    if(cljs.core.truth_(or__3824__auto____12401)) {
      return or__3824__auto____12401
    }else {
      return window.webkitURL
    }
  }();
  return url__12402.createObjectURL(file_or_blob)
};
goog.provide("shoreleave.efunction");
goog.require("cljs.core");
shoreleave.efunction.Function = function(f, meta) {
  this.f = f;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 4587521
};
shoreleave.efunction.Function.cljs$lang$type = true;
shoreleave.efunction.Function.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "shoreleave.efunction/Function")
};
shoreleave.efunction.Function.prototype.cljs$core$IHash$_hash$arity$1 = function(F) {
  var this__12352 = this;
  return goog.getUid(F.f)
};
shoreleave.efunction.Function.prototype.call = function() {
  var G__12360__delegate = function(this_sym12353, args) {
    var this_sym12353__12355 = this;
    var F__12356 = this_sym12353__12355;
    return cljs.core.apply.call(null, F__12356.f, args)
  };
  var G__12360 = function(this_sym12353, var_args) {
    var this__12354 = this;
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__12360__delegate.call(this, this_sym12353, args)
  };
  G__12360.cljs$lang$maxFixedArity = 1;
  G__12360.cljs$lang$applyTo = function(arglist__12361) {
    var this_sym12353 = cljs.core.first(arglist__12361);
    var args = cljs.core.rest(arglist__12361);
    return G__12360__delegate(this_sym12353, args)
  };
  G__12360.cljs$lang$arity$variadic = G__12360__delegate;
  return G__12360
}();
shoreleave.efunction.Function.prototype.apply = function(this_sym12350, args12351) {
  var this__12357 = this;
  return this_sym12350.call.apply(this_sym12350, [this_sym12350].concat(args12351.slice()))
};
shoreleave.efunction.Function.prototype.cljs$core$IMeta$_meta$arity$1 = function(F) {
  var this__12358 = this;
  return this__12358.meta
};
shoreleave.efunction.Function.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(F, meta) {
  var this__12359 = this;
  return new shoreleave.efunction.Function(this__12359.f, meta)
};
shoreleave.efunction.Function;
goog.provide("shoreleave.worker");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.browser.blob");
goog.require("shoreleave.efunction");
shoreleave.worker.WorkerFn = function(F, eworker, res_atom_vector) {
  this.F = F;
  this.eworker = eworker;
  this.res_atom_vector = res_atom_vector;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2152103937
};
shoreleave.worker.WorkerFn.cljs$lang$type = true;
shoreleave.worker.WorkerFn.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
  return cljs.core.list.call(null, "shoreleave.worker/WorkerFn")
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IHash$_hash$arity$1 = function(WFn) {
  var this__12365 = this;
  return goog.getUid(WFn.F.f)
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(WFn, key, f) {
  var this__12366 = this;
  return cljs.core._add_watch.call(null, WFn.res_atom_vector, key, f)
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(WFn, key) {
  var this__12367 = this;
  return cljs.core._remove_watch.call(null, WFn.res_atom_vector, key)
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IDeref$_deref$arity$1 = function(WFn) {
  var this__12368 = this;
  return cljs.core._deref.call(null, WFn.res_atom_vector)
};
shoreleave.worker.WorkerFn.prototype.call = function(this_sym12369, arg) {
  var this__12370 = this;
  var this_sym12369__12371 = this;
  var WFn__12372 = this_sym12369__12371;
  var w__12373 = WFn__12372.eworker;
  return w__12373.postMessage(arg)
};
shoreleave.worker.WorkerFn.prototype.apply = function(this_sym12363, args12364) {
  var this__12374 = this;
  return this_sym12363.call.apply(this_sym12363, [this_sym12363].concat(args12364.slice()))
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(WFn) {
  var this__12375 = this;
  return cljs.core.meta.call(null, WFn.F)
};
shoreleave.worker.WorkerFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(WFn, meta) {
  var this__12376 = this;
  return new shoreleave.worker.WorkerFn(cljs.core.with_meta.call(null, WFn.F, meta), WFn.eworker, WFn.res_atom_vector)
};
shoreleave.worker.WorkerFn;
shoreleave.worker.worker = function worker(f) {
  var f_str__12386 = [cljs.core.str(f)].join("");
  var fn_str__12387 = [cljs.core.str("var swfn = "), cljs.core.str(f_str__12386), cljs.core.str(";"), cljs.core.str("self.onmessage = function(c){self.postMessage(swfn(c.data));return c};")].join("");
  var bb__12388 = shoreleave.browser.blob.blob_builder.call(null);
  var _STAR_b__12389 = cljs.core.conj_BANG_.call(null, bb__12388, fn_str__12387);
  var blobb__12390 = shoreleave.browser.blob.blob.call(null, bb__12388);
  var agg__12391 = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  var w__12392 = new Worker(shoreleave.browser.blob.object_url_BANG_.call(null, blobb__12390));
  var _STAR_w__12393 = w__12392.onmessage = function(p1__12362_SHARP_) {
    return cljs.core.swap_BANG_.call(null, agg__12391, cljs.core.conj, p1__12362_SHARP_.data)
  };
  var wfn__12394 = new shoreleave.worker.WorkerFn(new shoreleave.efunction.Function(f, cljs.core.ObjMap.EMPTY), w__12392, agg__12391);
  return wfn__12394
};
goog.provide("shoreleave.pubsubs.protocols");
goog.require("cljs.core");
goog.require("shoreleave.browser.storage.localstorage");
goog.require("shoreleave.worker");
goog.require("shoreleave.efunction");
shoreleave.pubsubs.protocols.IMessageBrokerBus = {};
shoreleave.pubsubs.protocols.subscribe = function subscribe(broker_bus, topic, handler_fn) {
  if(function() {
    var and__3822__auto____12264 = broker_bus;
    if(and__3822__auto____12264) {
      return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe$arity$3
    }else {
      return and__3822__auto____12264
    }
  }()) {
    return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe$arity$3(broker_bus, topic, handler_fn)
  }else {
    var x__2413__auto____12265 = broker_bus == null ? null : broker_bus;
    return function() {
      var or__3824__auto____12266 = shoreleave.pubsubs.protocols.subscribe[goog.typeOf(x__2413__auto____12265)];
      if(or__3824__auto____12266) {
        return or__3824__auto____12266
      }else {
        var or__3824__auto____12267 = shoreleave.pubsubs.protocols.subscribe["_"];
        if(or__3824__auto____12267) {
          return or__3824__auto____12267
        }else {
          throw cljs.core.missing_protocol.call(null, "IMessageBrokerBus.subscribe", broker_bus);
        }
      }
    }().call(null, broker_bus, topic, handler_fn)
  }
};
shoreleave.pubsubs.protocols.subscribe_once = function subscribe_once(broker_bus, topic, handler_fn) {
  if(function() {
    var and__3822__auto____12272 = broker_bus;
    if(and__3822__auto____12272) {
      return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe_once$arity$3
    }else {
      return and__3822__auto____12272
    }
  }()) {
    return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe_once$arity$3(broker_bus, topic, handler_fn)
  }else {
    var x__2413__auto____12273 = broker_bus == null ? null : broker_bus;
    return function() {
      var or__3824__auto____12274 = shoreleave.pubsubs.protocols.subscribe_once[goog.typeOf(x__2413__auto____12273)];
      if(or__3824__auto____12274) {
        return or__3824__auto____12274
      }else {
        var or__3824__auto____12275 = shoreleave.pubsubs.protocols.subscribe_once["_"];
        if(or__3824__auto____12275) {
          return or__3824__auto____12275
        }else {
          throw cljs.core.missing_protocol.call(null, "IMessageBrokerBus.subscribe-once", broker_bus);
        }
      }
    }().call(null, broker_bus, topic, handler_fn)
  }
};
shoreleave.pubsubs.protocols.unsubscribe = function unsubscribe(broker_bus, topic, handler_fn) {
  if(function() {
    var and__3822__auto____12280 = broker_bus;
    if(and__3822__auto____12280) {
      return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$unsubscribe$arity$3
    }else {
      return and__3822__auto____12280
    }
  }()) {
    return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$unsubscribe$arity$3(broker_bus, topic, handler_fn)
  }else {
    var x__2413__auto____12281 = broker_bus == null ? null : broker_bus;
    return function() {
      var or__3824__auto____12282 = shoreleave.pubsubs.protocols.unsubscribe[goog.typeOf(x__2413__auto____12281)];
      if(or__3824__auto____12282) {
        return or__3824__auto____12282
      }else {
        var or__3824__auto____12283 = shoreleave.pubsubs.protocols.unsubscribe["_"];
        if(or__3824__auto____12283) {
          return or__3824__auto____12283
        }else {
          throw cljs.core.missing_protocol.call(null, "IMessageBrokerBus.unsubscribe", broker_bus);
        }
      }
    }().call(null, broker_bus, topic, handler_fn)
  }
};
shoreleave.pubsubs.protocols.publish = function() {
  var publish = null;
  var publish__3 = function(broker_bus, topic, data) {
    if(function() {
      var and__3822__auto____12292 = broker_bus;
      if(and__3822__auto____12292) {
        return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$3
      }else {
        return and__3822__auto____12292
      }
    }()) {
      return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$3(broker_bus, topic, data)
    }else {
      var x__2413__auto____12293 = broker_bus == null ? null : broker_bus;
      return function() {
        var or__3824__auto____12294 = shoreleave.pubsubs.protocols.publish[goog.typeOf(x__2413__auto____12293)];
        if(or__3824__auto____12294) {
          return or__3824__auto____12294
        }else {
          var or__3824__auto____12295 = shoreleave.pubsubs.protocols.publish["_"];
          if(or__3824__auto____12295) {
            return or__3824__auto____12295
          }else {
            throw cljs.core.missing_protocol.call(null, "IMessageBrokerBus.publish", broker_bus);
          }
        }
      }().call(null, broker_bus, topic, data)
    }
  };
  var publish__4 = function(broker_bus, topic, data, more_data) {
    if(function() {
      var and__3822__auto____12296 = broker_bus;
      if(and__3822__auto____12296) {
        return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$4
      }else {
        return and__3822__auto____12296
      }
    }()) {
      return broker_bus.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$4(broker_bus, topic, data, more_data)
    }else {
      var x__2413__auto____12297 = broker_bus == null ? null : broker_bus;
      return function() {
        var or__3824__auto____12298 = shoreleave.pubsubs.protocols.publish[goog.typeOf(x__2413__auto____12297)];
        if(or__3824__auto____12298) {
          return or__3824__auto____12298
        }else {
          var or__3824__auto____12299 = shoreleave.pubsubs.protocols.publish["_"];
          if(or__3824__auto____12299) {
            return or__3824__auto____12299
          }else {
            throw cljs.core.missing_protocol.call(null, "IMessageBrokerBus.publish", broker_bus);
          }
        }
      }().call(null, broker_bus, topic, data, more_data)
    }
  };
  publish = function(broker_bus, topic, data, more_data) {
    switch(arguments.length) {
      case 3:
        return publish__3.call(this, broker_bus, topic, data);
      case 4:
        return publish__4.call(this, broker_bus, topic, data, more_data)
    }
    throw"Invalid arity: " + arguments.length;
  };
  publish.cljs$lang$arity$3 = publish__3;
  publish.cljs$lang$arity$4 = publish__4;
  return publish
}();
shoreleave.pubsubs.protocols.IPublishable = {};
shoreleave.pubsubs.protocols.topicify = function topicify(t) {
  if(function() {
    var and__3822__auto____12312 = t;
    if(and__3822__auto____12312) {
      return t.shoreleave$pubsubs$protocols$IPublishable$topicify$arity$1
    }else {
      return and__3822__auto____12312
    }
  }()) {
    return t.shoreleave$pubsubs$protocols$IPublishable$topicify$arity$1(t)
  }else {
    var x__2413__auto____12313 = t == null ? null : t;
    return function() {
      var or__3824__auto____12314 = shoreleave.pubsubs.protocols.topicify[goog.typeOf(x__2413__auto____12313)];
      if(or__3824__auto____12314) {
        return or__3824__auto____12314
      }else {
        var or__3824__auto____12315 = shoreleave.pubsubs.protocols.topicify["_"];
        if(or__3824__auto____12315) {
          return or__3824__auto____12315
        }else {
          throw cljs.core.missing_protocol.call(null, "IPublishable.topicify", t);
        }
      }
    }().call(null, t)
  }
};
shoreleave.pubsubs.protocols.publishized_QMARK_ = function publishized_QMARK_(t) {
  if(function() {
    var and__3822__auto____12320 = t;
    if(and__3822__auto____12320) {
      return t.shoreleave$pubsubs$protocols$IPublishable$publishized_QMARK_$arity$1
    }else {
      return and__3822__auto____12320
    }
  }()) {
    return t.shoreleave$pubsubs$protocols$IPublishable$publishized_QMARK_$arity$1(t)
  }else {
    var x__2413__auto____12321 = t == null ? null : t;
    return function() {
      var or__3824__auto____12322 = shoreleave.pubsubs.protocols.publishized_QMARK_[goog.typeOf(x__2413__auto____12321)];
      if(or__3824__auto____12322) {
        return or__3824__auto____12322
      }else {
        var or__3824__auto____12323 = shoreleave.pubsubs.protocols.publishized_QMARK_["_"];
        if(or__3824__auto____12323) {
          return or__3824__auto____12323
        }else {
          throw cljs.core.missing_protocol.call(null, "IPublishable.publishized?", t);
        }
      }
    }().call(null, t)
  }
};
shoreleave.pubsubs.protocols.publishize = function publishize(t, broker_bus) {
  if(function() {
    var and__3822__auto____12328 = t;
    if(and__3822__auto____12328) {
      return t.shoreleave$pubsubs$protocols$IPublishable$publishize$arity$2
    }else {
      return and__3822__auto____12328
    }
  }()) {
    return t.shoreleave$pubsubs$protocols$IPublishable$publishize$arity$2(t, broker_bus)
  }else {
    var x__2413__auto____12329 = t == null ? null : t;
    return function() {
      var or__3824__auto____12330 = shoreleave.pubsubs.protocols.publishize[goog.typeOf(x__2413__auto____12329)];
      if(or__3824__auto____12330) {
        return or__3824__auto____12330
      }else {
        var or__3824__auto____12331 = shoreleave.pubsubs.protocols.publishize["_"];
        if(or__3824__auto____12331) {
          return or__3824__auto____12331
        }else {
          throw cljs.core.missing_protocol.call(null, "IPublishable.publishize", t);
        }
      }
    }().call(null, t, broker_bus)
  }
};
shoreleave.pubsubs.protocols.IPublishable["_"] = true;
shoreleave.pubsubs.protocols.topicify["_"] = function(t) {
  return[cljs.core.str(t)].join("")
};
cljs.core.Atom.prototype.shoreleave$pubsubs$protocols$IPublishable$ = true;
cljs.core.Atom.prototype.shoreleave$pubsubs$protocols$IPublishable$topicify$arity$1 = function(t) {
  var or__3824__auto____12332 = shoreleave.pubsubs.protocols.publishized_QMARK_.call(null, t);
  if(cljs.core.truth_(or__3824__auto____12332)) {
    return or__3824__auto____12332
  }else {
    return[cljs.core.str(cljs.core.hash.call(null, t))].join("")
  }
};
cljs.core.Atom.prototype.shoreleave$pubsubs$protocols$IPublishable$publishized_QMARK_$arity$1 = function(t) {
  return[cljs.core.str(cljs.core.hash.call(null, t))].join("")
};
cljs.core.Atom.prototype.shoreleave$pubsubs$protocols$IPublishable$publishize$arity$2 = function(atom_as_topic, bus) {
  var published_topic__12333 = shoreleave.pubsubs.protocols.topicify.call(null, atom_as_topic);
  var bus_key__12334 = cljs.core.keyword.call(null, cljs.core.hash.call(null, bus));
  cljs.core.add_watch.call(null, atom_as_topic, bus_key__12334, function(p1__12306_SHARP_, p2__12307_SHARP_, p3__12304_SHARP_, p4__12305_SHARP_) {
    return shoreleave.pubsubs.protocols.publish.call(null, bus, published_topic__12333, cljs.core.ObjMap.fromObject(["\ufdd0'old", "\ufdd0'new"], {"\ufdd0'old":p3__12304_SHARP_, "\ufdd0'new":p4__12305_SHARP_}))
  });
  return atom_as_topic
};
shoreleave.worker.WorkerFn.prototype.shoreleave$pubsubs$protocols$IPublishable$ = true;
shoreleave.worker.WorkerFn.prototype.shoreleave$pubsubs$protocols$IPublishable$topicify$arity$1 = function(t) {
  var or__3824__auto____12335 = shoreleave.pubsubs.protocols.publishized_QMARK_.call(null, t);
  if(cljs.core.truth_(or__3824__auto____12335)) {
    return or__3824__auto____12335
  }else {
    return[cljs.core.str(cljs.core.hash.call(null, t))].join("")
  }
};
shoreleave.worker.WorkerFn.prototype.shoreleave$pubsubs$protocols$IPublishable$publishized_QMARK_$arity$1 = function(t) {
  return[cljs.core.str(cljs.core.hash.call(null, t))].join("")
};
shoreleave.worker.WorkerFn.prototype.shoreleave$pubsubs$protocols$IPublishable$publishize$arity$2 = function(worker_as_topic, bus) {
  var published_topic__12336 = shoreleave.pubsubs.protocols.topicify.call(null, worker_as_topic);
  var bus_key__12337 = cljs.core.keyword.call(null, cljs.core.hash.call(null, bus));
  cljs.core.add_watch.call(null, worker_as_topic, bus_key__12337, function(p1__12302_SHARP_, p2__12303_SHARP_, p3__12300_SHARP_, p4__12301_SHARP_) {
    return shoreleave.pubsubs.protocols.publish.call(null, bus, published_topic__12336, cljs.core.ObjMap.fromObject(["\ufdd0'old", "\ufdd0'new"], {"\ufdd0'old":p3__12300_SHARP_, "\ufdd0'new":p4__12301_SHARP_}))
  });
  return worker_as_topic
};
shoreleave.efunction.Function.prototype.shoreleave$pubsubs$protocols$IPublishable$ = true;
shoreleave.efunction.Function.prototype.shoreleave$pubsubs$protocols$IPublishable$topicify$arity$1 = function(t) {
  var or__3824__auto____12338 = shoreleave.pubsubs.protocols.publishized_QMARK_.call(null, t);
  if(cljs.core.truth_(or__3824__auto____12338)) {
    return or__3824__auto____12338
  }else {
    return shoreleave.pubsubs.protocols.topicify.call(null, t.f)
  }
};
shoreleave.efunction.Function.prototype.shoreleave$pubsubs$protocols$IPublishable$publishized_QMARK_$arity$1 = function(t) {
  return(new cljs.core.Keyword("\ufdd0'sl-published")).call(null, cljs.core.meta.call(null, t))
};
shoreleave.efunction.Function.prototype.shoreleave$pubsubs$protocols$IPublishable$publishize$arity$2 = function(fn_as_topic, bus) {
  if(cljs.core.truth_(cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'sl-buses")).call(null, cljs.core.meta.call(null, fn_as_topic)), cljs.core.keyword.call(null, cljs.core.hash.call(null, bus)), null))) {
    return fn_as_topic
  }else {
    var published_topic__12339 = shoreleave.pubsubs.protocols.topicify.call(null, fn_as_topic);
    var new_meta__12340 = cljs.core.assoc.call(null, cljs.core.meta.call(null, fn_as_topic), "\ufdd0'sl-published", published_topic__12339, "\ufdd0'sl-buses", cljs.core.conj.call(null, cljs.core._lookup.call(null, cljs.core.meta.call(null, fn_as_topic), "\ufdd0'sl-buses", cljs.core.PersistentHashSet.EMPTY), cljs.core.keyword.call(null, cljs.core.hash.call(null, bus))));
    return new shoreleave.efunction.Function(function() {
      var G__12346__delegate = function(args) {
        var ret__12341 = cljs.core.apply.call(null, fn_as_topic.f, args);
        shoreleave.pubsubs.protocols.publish.call(null, bus, published_topic__12339, ret__12341);
        return ret__12341
      };
      var G__12346 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12346__delegate.call(this, args)
      };
      G__12346.cljs$lang$maxFixedArity = 0;
      G__12346.cljs$lang$applyTo = function(arglist__12347) {
        var args = cljs.core.seq(arglist__12347);
        return G__12346__delegate(args)
      };
      G__12346.cljs$lang$arity$variadic = G__12346__delegate;
      return G__12346
    }(), new_meta__12340)
  }
};
shoreleave.pubsubs.protocols.IPublishable["function"] = true;
shoreleave.pubsubs.protocols.topicify["function"] = function(t) {
  var or__3824__auto____12342 = shoreleave.pubsubs.protocols.publishized_QMARK_.call(null, t);
  if(cljs.core.truth_(or__3824__auto____12342)) {
    return or__3824__auto____12342
  }else {
    return[cljs.core.str(cljs.core.hash.call(null, t))].join("")
  }
};
shoreleave.pubsubs.protocols.publishized_QMARK_["function"] = function(t) {
  return(new cljs.core.Keyword("\ufdd0'sl-published")).call(null, cljs.core.meta.call(null, t))
};
shoreleave.pubsubs.protocols.publishize["function"] = function(fn_as_topic, bus) {
  if(cljs.core.truth_(cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'sl-buses")).call(null, cljs.core.meta.call(null, fn_as_topic)), cljs.core.keyword.call(null, cljs.core.hash.call(null, bus)), null))) {
    return fn_as_topic
  }else {
    var published_topic__12343 = shoreleave.pubsubs.protocols.topicify.call(null, fn_as_topic);
    var new_meta__12344 = cljs.core.assoc.call(null, cljs.core.meta.call(null, fn_as_topic), "\ufdd0'sl-published", published_topic__12343, "\ufdd0'sl-buses", cljs.core.conj.call(null, cljs.core._lookup.call(null, cljs.core.meta.call(null, fn_as_topic), "\ufdd0'sl-buses", cljs.core.PersistentHashSet.EMPTY), cljs.core.keyword.call(null, cljs.core.hash.call(null, bus))));
    return new shoreleave.efunction.Function(function() {
      var G__12348__delegate = function(args) {
        var ret__12345 = cljs.core.apply.call(null, fn_as_topic, args);
        shoreleave.pubsubs.protocols.publish.call(null, bus, published_topic__12343, ret__12345);
        return ret__12345
      };
      var G__12348 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__12348__delegate.call(this, args)
      };
      G__12348.cljs$lang$maxFixedArity = 0;
      G__12348.cljs$lang$applyTo = function(arglist__12349) {
        var args = cljs.core.seq(arglist__12349);
        return G__12348__delegate(args)
      };
      G__12348.cljs$lang$arity$variadic = G__12348__delegate;
      return G__12348
    }(), new_meta__12344)
  }
};
goog.provide("goog.pubsub.PubSub");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.pubsub.PubSub = function() {
  goog.Disposable.call(this);
  this.subscriptions_ = [];
  this.topics_ = {}
};
goog.inherits(goog.pubsub.PubSub, goog.Disposable);
goog.pubsub.PubSub.prototype.subscriptions_;
goog.pubsub.PubSub.prototype.key_ = 1;
goog.pubsub.PubSub.prototype.topics_;
goog.pubsub.PubSub.prototype.pendingKeys_;
goog.pubsub.PubSub.prototype.publishDepth_ = 0;
goog.pubsub.PubSub.prototype.subscribe = function(topic, fn, opt_context) {
  var keys = this.topics_[topic];
  if(!keys) {
    keys = this.topics_[topic] = []
  }
  var key = this.key_;
  this.subscriptions_[key] = topic;
  this.subscriptions_[key + 1] = fn;
  this.subscriptions_[key + 2] = opt_context;
  this.key_ = key + 3;
  keys.push(key);
  return key
};
goog.pubsub.PubSub.prototype.subscribeOnce = function(topic, fn, opt_context) {
  var key = this.subscribe(topic, function(var_args) {
    fn.apply(opt_context, arguments);
    this.unsubscribeByKey(key)
  }, this);
  return key
};
goog.pubsub.PubSub.prototype.unsubscribe = function(topic, fn, opt_context) {
  var keys = this.topics_[topic];
  if(keys) {
    var subscriptions = this.subscriptions_;
    var key = goog.array.find(keys, function(k) {
      return subscriptions[k + 1] == fn && subscriptions[k + 2] == opt_context
    });
    if(key) {
      return this.unsubscribeByKey(key)
    }
  }
  return false
};
goog.pubsub.PubSub.prototype.unsubscribeByKey = function(key) {
  if(this.publishDepth_ != 0) {
    if(!this.pendingKeys_) {
      this.pendingKeys_ = []
    }
    this.pendingKeys_.push(key);
    return false
  }
  var topic = this.subscriptions_[key];
  if(topic) {
    var keys = this.topics_[topic];
    if(keys) {
      goog.array.remove(keys, key)
    }
    delete this.subscriptions_[key];
    delete this.subscriptions_[key + 1];
    delete this.subscriptions_[key + 2]
  }
  return!!topic
};
goog.pubsub.PubSub.prototype.publish = function(topic, var_args) {
  var keys = this.topics_[topic];
  if(keys) {
    this.publishDepth_++;
    var args = goog.array.slice(arguments, 1);
    for(var i = 0, len = keys.length;i < len;i++) {
      var key = keys[i];
      this.subscriptions_[key + 1].apply(this.subscriptions_[key + 2], args)
    }
    this.publishDepth_--;
    if(this.pendingKeys_ && this.publishDepth_ == 0) {
      var pendingKey;
      while(pendingKey = this.pendingKeys_.pop()) {
        this.unsubscribeByKey(pendingKey)
      }
    }
    return i != 0
  }
  return false
};
goog.pubsub.PubSub.prototype.clear = function(opt_topic) {
  if(opt_topic) {
    var keys = this.topics_[opt_topic];
    if(keys) {
      goog.array.forEach(keys, this.unsubscribeByKey, this);
      delete this.topics_[opt_topic]
    }
  }else {
    this.subscriptions_.length = 0;
    this.topics_ = {}
  }
};
goog.pubsub.PubSub.prototype.getCount = function(opt_topic) {
  if(opt_topic) {
    var keys = this.topics_[opt_topic];
    return keys ? keys.length : 0
  }
  var count = 0;
  for(var topic in this.topics_) {
    count += this.getCount(topic)
  }
  return count
};
goog.pubsub.PubSub.prototype.disposeInternal = function() {
  goog.pubsub.PubSub.superClass_.disposeInternal.call(this);
  delete this.subscriptions_;
  delete this.topics_;
  delete this.pendingKeys_
};
goog.provide("shoreleave.pubsubs.simple");
goog.require("cljs.core");
goog.require("shoreleave.pubsubs.protocols");
goog.require("goog.pubsub.PubSub");
goog.pubsub.PubSub.prototype.cljs$core$IHash$ = true;
goog.pubsub.PubSub.prototype.cljs$core$IHash$_hash$arity$1 = function(bus) {
  return goog.getUid(bus)
};
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$ = true;
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe$arity$3 = function(bus, topic, handler_fn) {
  return bus.subscribe(shoreleave.pubsubs.protocols.topicify.call(null, topic), handler_fn)
};
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$subscribe_once$arity$3 = function(bus, topic, handler_fn) {
  return bus.subscribeOnce(shoreleave.pubsubs.protocols.topicify.call(null, topic), handler_fn)
};
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$unsubscribe$arity$3 = function(bus, topic, handler_fn) {
  return bus.unsubscribe(shoreleave.pubsubs.protocols.topicify.call(null, topic), handler_fn)
};
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$3 = function(bus, topic, data) {
  return bus.publish(shoreleave.pubsubs.protocols.topicify.call(null, topic), data)
};
goog.pubsub.PubSub.prototype.shoreleave$pubsubs$protocols$IMessageBrokerBus$publish$arity$5 = function() {
  var G__12403__delegate = function(bus, topic, data, more_data) {
    return bus.publish(shoreleave.pubsubs.protocols.topicify.call(null, topic), cljs.core.into.call(null, cljs.core.PersistentVector.fromArray([data], true), more_data))
  };
  var G__12403 = function(bus, topic, data, var_args) {
    var more_data = null;
    if(goog.isDef(var_args)) {
      more_data = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__12403__delegate.call(this, bus, topic, data, more_data)
  };
  G__12403.cljs$lang$maxFixedArity = 3;
  G__12403.cljs$lang$applyTo = function(arglist__12404) {
    var bus = cljs.core.first(arglist__12404);
    var topic = cljs.core.first(cljs.core.next(arglist__12404));
    var data = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12404)));
    var more_data = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12404)));
    return G__12403__delegate(bus, topic, data, more_data)
  };
  G__12403.cljs$lang$arity$variadic = G__12403__delegate;
  return G__12403
}();
shoreleave.pubsubs.simple.subscribers_count = function subscribers_count(bus, topic) {
  return bus.getCount(shoreleave.pubsubs.protocols.topicify.call(null, topic))
};
shoreleave.pubsubs.simple.bus = function bus() {
  return new goog.pubsub.PubSub
};
goog.provide("cljs_intro.pubsub");
goog.require("cljs.core");
goog.require("shoreleave.pubsubs.protocols");
goog.require("shoreleave.pubsubs.simple");
cljs_intro.pubsub.bus = shoreleave.pubsubs.simple.bus.call(null);
cljs_intro.pubsub.search_state = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'lastname", "\ufdd0'previous-searches"], {"\ufdd0'lastname":"", "\ufdd0'previous-searches":cljs.core.List.EMPTY}));
shoreleave.pubsubs.protocols.publishize.call(null, cljs_intro.pubsub.search_state, cljs_intro.pubsub.bus);
cljs_intro.pubsub.publish_results = function publish_results(res) {
  return shoreleave.pubsubs.protocols.publish.call(null, cljs_intro.pubsub.bus, "\ufdd0'results", res)
};
cljs_intro.pubsub.add_previous_search = function add_previous_search(prev_lname) {
  if(cljs.core.not_EQ_.call(null, prev_lname, "")) {
    return cljs.core.conj.call(null, (new cljs.core.Keyword("\ufdd0'previous-searches")).call(null, cljs.core.deref.call(null, cljs_intro.pubsub.search_state)), prev_lname)
  }else {
    return null
  }
};
cljs_intro.pubsub.publish_search_string = function publish_search_string(lname) {
  var prev_lname__6538 = (new cljs.core.Keyword("\ufdd0'lastname")).call(null, cljs.core.deref.call(null, cljs_intro.pubsub.search_state));
  cljs.core.swap_BANG_.call(null, cljs_intro.pubsub.search_state, cljs.core.merge, cljs.core.ObjMap.fromObject(["\ufdd0'lastname", "\ufdd0'previous-searches"], {"\ufdd0'lastname":lname, "\ufdd0'previous-searches":cljs_intro.pubsub.add_previous_search.call(null, prev_lname__6538)}));
  return shoreleave.pubsubs.protocols.publish.call(null, cljs_intro.pubsub.bus, "\ufdd0'search", lname)
};
cljs_intro.pubsub.publish_view_history = function publish_view_history(current_lname) {
  return shoreleave.pubsubs.protocols.publish.call(null, cljs_intro.pubsub.bus, "\ufdd0'history", current_lname)
};
cljs_intro.pubsub.subscribe_to = function subscribe_to(topic, f) {
  return shoreleave.pubsubs.protocols.subscribe.call(null, cljs_intro.pubsub.bus, topic, f)
};
cljs_intro.pubsub.console_logger = function console_logger(data) {
  return console.log(cljs.core.pr_str.call(null, data))
};
goog.exportSymbol("cljs_intro.pubsub.console_logger", cljs_intro.pubsub.console_logger);
cljs_intro.pubsub.subscribe_to.call(null, "\ufdd0'search", function(data) {
  return[cljs.core.str(cljs_intro.pubsub.console_logger.call(null, [cljs.core.str("Searched for "), cljs.core.str(data)].join("")))].join("")
});
cljs_intro.pubsub.subscribe_to.call(null, cljs_intro.pubsub.search_state, cljs_intro.pubsub.console_logger);
goog.provide("goog.net.xpc");
goog.provide("goog.net.xpc.CfgFields");
goog.provide("goog.net.xpc.ChannelStates");
goog.provide("goog.net.xpc.TransportNames");
goog.provide("goog.net.xpc.TransportTypes");
goog.provide("goog.net.xpc.UriCfgFields");
goog.require("goog.debug.Logger");
goog.net.xpc.TransportTypes = {NATIVE_MESSAGING:1, FRAME_ELEMENT_METHOD:2, IFRAME_RELAY:3, IFRAME_POLLING:4, FLASH:5, NIX:6};
goog.net.xpc.TransportNames = {1:"NativeMessagingTransport", 2:"FrameElementMethodTransport", 3:"IframeRelayTransport", 4:"IframePollingTransport", 5:"FlashTransport", 6:"NixTransport"};
goog.net.xpc.CfgFields = {CHANNEL_NAME:"cn", AUTH_TOKEN:"at", REMOTE_AUTH_TOKEN:"rat", PEER_URI:"pu", IFRAME_ID:"ifrid", TRANSPORT:"tp", LOCAL_RELAY_URI:"lru", PEER_RELAY_URI:"pru", LOCAL_POLL_URI:"lpu", PEER_POLL_URI:"ppu", PEER_HOSTNAME:"ph"};
goog.net.xpc.UriCfgFields = [goog.net.xpc.CfgFields.PEER_URI, goog.net.xpc.CfgFields.LOCAL_RELAY_URI, goog.net.xpc.CfgFields.PEER_RELAY_URI, goog.net.xpc.CfgFields.LOCAL_POLL_URI, goog.net.xpc.CfgFields.PEER_POLL_URI];
goog.net.xpc.ChannelStates = {NOT_CONNECTED:1, CONNECTED:2, CLOSED:3};
goog.net.xpc.TRANSPORT_SERVICE_ = "tp";
goog.net.xpc.SETUP = "SETUP";
goog.net.xpc.SETUP_ACK_ = "SETUP_ACK";
goog.net.xpc.channels_ = {};
goog.net.xpc.getRandomString = function(length, opt_characters) {
  var chars = opt_characters || goog.net.xpc.randomStringCharacters_;
  var charsLength = chars.length;
  var s = "";
  while(length-- > 0) {
    s += chars.charAt(Math.floor(Math.random() * charsLength))
  }
  return s
};
goog.net.xpc.randomStringCharacters_ = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
goog.net.xpc.logger = goog.debug.Logger.getLogger("goog.net.xpc");
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, goog.Uri.reDisallowedInPath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInPath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("clojure.browser.event");
goog.require("cljs.core");
goog.require("goog.events.EventType");
goog.require("goog.events.EventTarget");
goog.require("goog.events");
clojure.browser.event.EventType = {};
clojure.browser.event.event_types = function event_types(this$) {
  if(function() {
    var and__3822__auto____12409 = this$;
    if(and__3822__auto____12409) {
      return this$.clojure$browser$event$EventType$event_types$arity$1
    }else {
      return and__3822__auto____12409
    }
  }()) {
    return this$.clojure$browser$event$EventType$event_types$arity$1(this$)
  }else {
    var x__2413__auto____12410 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____12411 = clojure.browser.event.event_types[goog.typeOf(x__2413__auto____12410)];
      if(or__3824__auto____12411) {
        return or__3824__auto____12411
      }else {
        var or__3824__auto____12412 = clojure.browser.event.event_types["_"];
        if(or__3824__auto____12412) {
          return or__3824__auto____12412
        }else {
          throw cljs.core.missing_protocol.call(null, "EventType.event-types", this$);
        }
      }
    }().call(null, this$)
  }
};
Element.prototype.clojure$browser$event$EventType$ = true;
Element.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12413) {
    var vec__12414__12415 = p__12413;
    var k__12416 = cljs.core.nth.call(null, vec__12414__12415, 0, null);
    var v__12417 = cljs.core.nth.call(null, vec__12414__12415, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12416.toLowerCase()), v__12417], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
goog.events.EventTarget.prototype.clojure$browser$event$EventType$ = true;
goog.events.EventTarget.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__12418) {
    var vec__12419__12420 = p__12418;
    var k__12421 = cljs.core.nth.call(null, vec__12419__12420, 0, null);
    var v__12422 = cljs.core.nth.call(null, vec__12419__12420, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__12421.toLowerCase()), v__12422], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.events.EventType))))
};
clojure.browser.event.listen = function() {
  var listen = null;
  var listen__3 = function(src, type, fn) {
    return listen.call(null, src, type, fn, false)
  };
  var listen__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listen(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen__3.call(this, src, type, fn);
      case 4:
        return listen__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$arity$3 = listen__3;
  listen.cljs$lang$arity$4 = listen__4;
  return listen
}();
clojure.browser.event.listen_once = function() {
  var listen_once = null;
  var listen_once__3 = function(src, type, fn) {
    return listen_once.call(null, src, type, fn, false)
  };
  var listen_once__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.listenOnce(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  listen_once = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return listen_once__3.call(this, src, type, fn);
      case 4:
        return listen_once__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen_once.cljs$lang$arity$3 = listen_once__3;
  listen_once.cljs$lang$arity$4 = listen_once__4;
  return listen_once
}();
clojure.browser.event.unlisten = function() {
  var unlisten = null;
  var unlisten__3 = function(src, type, fn) {
    return unlisten.call(null, src, type, fn, false)
  };
  var unlisten__4 = function(src, type, fn, capture_QMARK_) {
    return goog.events.unlisten(src, cljs.core._lookup.call(null, clojure.browser.event.event_types.call(null, src), type, type), fn, capture_QMARK_)
  };
  unlisten = function(src, type, fn, capture_QMARK_) {
    switch(arguments.length) {
      case 3:
        return unlisten__3.call(this, src, type, fn);
      case 4:
        return unlisten__4.call(this, src, type, fn, capture_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  unlisten.cljs$lang$arity$3 = unlisten__3;
  unlisten.cljs$lang$arity$4 = unlisten__4;
  return unlisten
}();
clojure.browser.event.unlisten_by_key = function unlisten_by_key(key) {
  return goog.events.unlistenByKey(key)
};
clojure.browser.event.dispatch_event = function dispatch_event(src, event) {
  return goog.events.dispatchEvent(src, event)
};
clojure.browser.event.expose = function expose(e) {
  return goog.events.expose(e)
};
clojure.browser.event.fire_listeners = function fire_listeners(obj, type, capture, event) {
  return null
};
clojure.browser.event.total_listener_count = function total_listener_count() {
  return goog.events.getTotalListenerCount()
};
clojure.browser.event.get_listener = function get_listener(src, type, listener, opt_capt, opt_handler) {
  return null
};
clojure.browser.event.all_listeners = function all_listeners(obj, type, capture) {
  return null
};
clojure.browser.event.unique_event_id = function unique_event_id(event_type) {
  return null
};
clojure.browser.event.has_listener = function has_listener(obj, opt_type, opt_capture) {
  return null
};
clojure.browser.event.remove_all = function remove_all(opt_obj, opt_type, opt_capt) {
  return null
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isVersion("9"), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isVersion("9") || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            element[key] = val
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc;
  if(goog.userAgent.WEBKIT) {
    doc = frame.document || frame.contentWindow.document
  }else {
    doc = frame.contentDocument || frame.contentWindow.document
  }
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    for(var i = 0, child;child = root.childNodes[i];i++) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.userAgent.IE) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.messaging.MessageChannel");
goog.messaging.MessageChannel = function() {
};
goog.messaging.MessageChannel.prototype.connect = function(opt_connectCb) {
};
goog.messaging.MessageChannel.prototype.isConnected = function() {
};
goog.messaging.MessageChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
};
goog.messaging.MessageChannel.prototype.registerDefaultService = function(callback) {
};
goog.messaging.MessageChannel.prototype.send = function(serviceName, payload) {
};
goog.provide("goog.messaging.AbstractChannel");
goog.require("goog.Disposable");
goog.require("goog.debug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.require("goog.messaging.MessageChannel");
goog.messaging.AbstractChannel = function() {
  goog.base(this);
  this.services_ = {}
};
goog.inherits(goog.messaging.AbstractChannel, goog.Disposable);
goog.messaging.AbstractChannel.prototype.defaultService_;
goog.messaging.AbstractChannel.prototype.logger = goog.debug.Logger.getLogger("goog.messaging.AbstractChannel");
goog.messaging.AbstractChannel.prototype.connect = function(opt_connectCb) {
  if(opt_connectCb) {
    opt_connectCb()
  }
};
goog.messaging.AbstractChannel.prototype.isConnected = function() {
  return true
};
goog.messaging.AbstractChannel.prototype.registerService = function(serviceName, callback, opt_objectPayload) {
  this.services_[serviceName] = {callback:callback, objectPayload:!!opt_objectPayload}
};
goog.messaging.AbstractChannel.prototype.registerDefaultService = function(callback) {
  this.defaultService_ = callback
};
goog.messaging.AbstractChannel.prototype.send = goog.abstractMethod;
goog.messaging.AbstractChannel.prototype.deliver = function(serviceName, payload) {
  var service = this.getService(serviceName, payload);
  if(!service) {
    return
  }
  payload = this.decodePayload(serviceName, payload, service.objectPayload);
  if(goog.isDefAndNotNull(payload)) {
    service.callback(payload)
  }
};
goog.messaging.AbstractChannel.prototype.getService = function(serviceName, payload) {
  var service = this.services_[serviceName];
  if(service) {
    return service
  }else {
    if(this.defaultService_) {
      var callback = goog.partial(this.defaultService_, serviceName);
      var objectPayload = goog.isObject(payload);
      return{callback:callback, objectPayload:objectPayload}
    }
  }
  this.logger.warning('Unknown service name "' + serviceName + '"');
  return null
};
goog.messaging.AbstractChannel.prototype.decodePayload = function(serviceName, payload, objectPayload) {
  if(objectPayload && goog.isString(payload)) {
    try {
      return goog.json.parse(payload)
    }catch(err) {
      this.logger.warning("Expected JSON payload for " + serviceName + ', was "' + payload + '"');
      return null
    }
  }else {
    if(!objectPayload && !goog.isString(payload)) {
      return goog.json.serialize(payload)
    }
  }
  return payload
};
goog.messaging.AbstractChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  goog.dispose(this.logger);
  delete this.logger;
  delete this.services_;
  delete this.defaultService_
};
goog.provide("goog.net.xpc.Transport");
goog.require("goog.Disposable");
goog.require("goog.net.xpc");
goog.net.xpc.Transport = function(opt_domHelper) {
  goog.Disposable.call(this);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper()
};
goog.inherits(goog.net.xpc.Transport, goog.Disposable);
goog.net.xpc.Transport.prototype.transportType = 0;
goog.net.xpc.Transport.prototype.getType = function() {
  return this.transportType
};
goog.net.xpc.Transport.prototype.getWindow = function() {
  return this.domHelper_.getWindow()
};
goog.net.xpc.Transport.prototype.getName = function() {
  return goog.net.xpc.TransportNames[this.transportType] || ""
};
goog.net.xpc.Transport.prototype.transportServiceHandler = goog.abstractMethod;
goog.net.xpc.Transport.prototype.connect = goog.abstractMethod;
goog.net.xpc.Transport.prototype.send = goog.abstractMethod;
goog.provide("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.FrameElementMethodTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.queue_ = [];
  this.deliverQueuedCb_ = goog.bind(this.deliverQueued_, this)
};
goog.inherits(goog.net.xpc.FrameElementMethodTransport, goog.net.xpc.Transport);
goog.net.xpc.FrameElementMethodTransport.prototype.transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD;
goog.net.xpc.FrameElementMethodTransport.prototype.recursive_ = false;
goog.net.xpc.FrameElementMethodTransport.prototype.timer_ = 0;
goog.net.xpc.FrameElementMethodTransport.outgoing_ = null;
goog.net.xpc.FrameElementMethodTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.iframeElm_ = this.channel_.iframeElement_;
    this.iframeElm_["XPC_toOuter"] = goog.bind(this.incoming_, this)
  }else {
    this.attemptSetup_()
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.attemptSetup_ = function() {
  var retry = true;
  try {
    if(!this.iframeElm_) {
      this.iframeElm_ = this.getWindow().frameElement
    }
    if(this.iframeElm_ && this.iframeElm_["XPC_toOuter"]) {
      this.outgoing_ = this.iframeElm_["XPC_toOuter"];
      this.iframeElm_["XPC_toOuter"]["XPC_toInner"] = goog.bind(this.incoming_, this);
      retry = false;
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(retry) {
    if(!this.attemptSetupCb_) {
      this.attemptSetupCb_ = goog.bind(this.attemptSetup_, this)
    }
    this.getWindow().setTimeout(this.attemptSetupCb_, 100)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.transportServiceHandler = function(payload) {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER && !this.channel_.isConnected() && payload == goog.net.xpc.SETUP_ACK_) {
    this.outgoing_ = this.iframeElm_["XPC_toOuter"]["XPC_toInner"];
    this.channel_.notifyConnected_()
  }else {
    throw Error("Got unexpected transport message.");
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.incoming_ = function(serviceName, payload) {
  if(!this.recursive_ && this.queue_.length == 0) {
    this.channel_.deliver_(serviceName, payload)
  }else {
    this.queue_.push({serviceName:serviceName, payload:payload});
    if(this.queue_.length == 1) {
      this.timer_ = this.getWindow().setTimeout(this.deliverQueuedCb_, 1)
    }
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.deliverQueued_ = function() {
  while(this.queue_.length) {
    var msg = this.queue_.shift();
    this.channel_.deliver_(msg.serviceName, msg.payload)
  }
};
goog.net.xpc.FrameElementMethodTransport.prototype.send = function(service, payload) {
  this.recursive_ = true;
  this.outgoing_(service, payload);
  this.recursive_ = false
};
goog.net.xpc.FrameElementMethodTransport.prototype.disposeInternal = function() {
  goog.net.xpc.FrameElementMethodTransport.superClass_.disposeInternal.call(this);
  this.outgoing_ = null;
  this.iframeElm_ = null
};
goog.provide("goog.net.xpc.IframePollingTransport");
goog.provide("goog.net.xpc.IframePollingTransport.Receiver");
goog.provide("goog.net.xpc.IframePollingTransport.Sender");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframePollingTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.sendUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI];
  this.rcvUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI];
  this.sendQueue_ = []
};
goog.inherits(goog.net.xpc.IframePollingTransport, goog.net.xpc.Transport);
goog.net.xpc.IframePollingTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING;
goog.net.xpc.IframePollingTransport.prototype.sequence_ = 0;
goog.net.xpc.IframePollingTransport.prototype.waitForAck_ = false;
goog.net.xpc.IframePollingTransport.prototype.initialized_ = false;
goog.net.xpc.IframePollingTransport.IFRAME_PREFIX = "googlexpc";
goog.net.xpc.IframePollingTransport.prototype.getMsgFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_msg"
};
goog.net.xpc.IframePollingTransport.prototype.getAckFrameName_ = function() {
  return goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_" + this.channel_.name + "_ack"
};
goog.net.xpc.IframePollingTransport.prototype.connect = function() {
  goog.net.xpc.logger.fine("transport connect called");
  if(!this.initialized_) {
    goog.net.xpc.logger.fine("initializing...");
    this.constructSenderFrames_();
    this.initialized_ = true
  }
  this.checkForeignFramesReady_()
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrames_ = function() {
  var name = this.getMsgFrameName_();
  this.msgIframeElm_ = this.constructSenderFrame_(name);
  this.msgWinObj_ = this.getWindow().frames[name];
  name = this.getAckFrameName_();
  this.ackIframeElm_ = this.constructSenderFrame_(name);
  this.ackWinObj_ = this.getWindow().frames[name]
};
goog.net.xpc.IframePollingTransport.prototype.constructSenderFrame_ = function(id) {
  goog.net.xpc.logger.finest("constructing sender frame: " + id);
  var ifr = goog.dom.createElement("iframe");
  var s = ifr.style;
  s.position = "absolute";
  s.top = "-10px";
  s.left = "10px";
  s.width = "1px";
  s.height = "1px";
  ifr.id = ifr.name = id;
  ifr.src = this.sendUri_ + "#INITIAL";
  this.getWindow().document.body.appendChild(ifr);
  return ifr
};
goog.net.xpc.IframePollingTransport.prototype.innerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("innerPeerReconnect called");
  this.channel_.name = goog.net.xpc.getRandomString(10);
  goog.net.xpc.logger.finest("switching channels: " + this.channel_.name);
  this.deconstructSenderFrames_();
  this.initialized_ = false;
  this.reconnectFrame_ = this.constructSenderFrame_(goog.net.xpc.IframePollingTransport.IFRAME_PREFIX + "_reconnect_" + this.channel_.name)
};
goog.net.xpc.IframePollingTransport.prototype.outerPeerReconnect_ = function() {
  goog.net.xpc.logger.finest("outerPeerReconnect called");
  var frames = this.channel_.peerWindowObject_.frames;
  var length = frames.length;
  for(var i = 0;i < length;i++) {
    var frameName;
    try {
      if(frames[i] && frames[i].name) {
        frameName = frames[i].name
      }
    }catch(e) {
    }
    if(!frameName) {
      continue
    }
    var message = frameName.split("_");
    if(message.length == 3 && message[0] == goog.net.xpc.IframePollingTransport.IFRAME_PREFIX && message[1] == "reconnect") {
      this.channel_.name = message[2];
      this.deconstructSenderFrames_();
      this.initialized_ = false;
      break
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.deconstructSenderFrames_ = function() {
  goog.net.xpc.logger.finest("deconstructSenderFrames called");
  if(this.msgIframeElm_) {
    this.msgIframeElm_.parentNode.removeChild(this.msgIframeElm_);
    this.msgIframeElm_ = null;
    this.msgWinObj_ = null
  }
  if(this.ackIframeElm_) {
    this.ackIframeElm_.parentNode.removeChild(this.ackIframeElm_);
    this.ackIframeElm_ = null;
    this.ackWinObj_ = null
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkForeignFramesReady_ = function() {
  if(!(this.isRcvFrameReady_(this.getMsgFrameName_()) && this.isRcvFrameReady_(this.getAckFrameName_()))) {
    goog.net.xpc.logger.finest("foreign frames not (yet) present");
    if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !this.reconnectFrame_) {
      this.innerPeerReconnect_()
    }else {
      if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
        this.outerPeerReconnect_()
      }
    }
    this.getWindow().setTimeout(goog.bind(this.connect, this), 100)
  }else {
    goog.net.xpc.logger.fine("foreign frames present");
    this.msgReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getMsgFrameName_()], goog.bind(this.processIncomingMsg, this));
    this.ackReceiver_ = new goog.net.xpc.IframePollingTransport.Receiver(this, this.channel_.peerWindowObject_.frames[this.getAckFrameName_()], goog.bind(this.processIncomingAck, this));
    this.checkLocalFramesPresent_()
  }
};
goog.net.xpc.IframePollingTransport.prototype.isRcvFrameReady_ = function(frameName) {
  goog.net.xpc.logger.finest("checking for receive frame: " + frameName);
  try {
    var winObj = this.channel_.peerWindowObject_.frames[frameName];
    if(!winObj || winObj.location.href.indexOf(this.rcvUri_) != 0) {
      return false
    }
  }catch(e) {
    return false
  }
  return true
};
goog.net.xpc.IframePollingTransport.prototype.checkLocalFramesPresent_ = function() {
  var frames = this.channel_.peerWindowObject_.frames;
  if(!(frames[this.getAckFrameName_()] && frames[this.getMsgFrameName_()])) {
    if(!this.checkLocalFramesPresentCb_) {
      this.checkLocalFramesPresentCb_ = goog.bind(this.checkLocalFramesPresent_, this)
    }
    this.getWindow().setTimeout(this.checkLocalFramesPresentCb_, 100);
    goog.net.xpc.logger.fine("local frames not (yet) present")
  }else {
    this.msgSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.msgWinObj_);
    this.ackSender_ = new goog.net.xpc.IframePollingTransport.Sender(this.sendUri_, this.ackWinObj_);
    goog.net.xpc.logger.fine("local frames ready");
    this.getWindow().setTimeout(goog.bind(function() {
      this.msgSender_.send(goog.net.xpc.SETUP);
      this.sentConnectionSetup_ = true;
      this.waitForAck_ = true;
      goog.net.xpc.logger.fine("SETUP sent")
    }, this), 100)
  }
};
goog.net.xpc.IframePollingTransport.prototype.checkIfConnected_ = function() {
  if(this.sentConnectionSetupAck_ && this.rcvdConnectionSetupAck_) {
    this.channel_.notifyConnected_();
    if(this.deliveryQueue_) {
      goog.net.xpc.logger.fine("delivering queued messages " + "(" + this.deliveryQueue_.length + ")");
      for(var i = 0, m;i < this.deliveryQueue_.length;i++) {
        m = this.deliveryQueue_[i];
        this.channel_.deliver_(m.service, m.payload)
      }
      delete this.deliveryQueue_
    }
  }else {
    goog.net.xpc.logger.finest("checking if connected: " + "ack sent:" + this.sentConnectionSetupAck_ + ", ack rcvd: " + this.rcvdConnectionSetupAck_)
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingMsg = function(raw) {
  goog.net.xpc.logger.finest("msg received: " + raw);
  if(raw == goog.net.xpc.SETUP) {
    if(!this.ackSender_) {
      return
    }
    this.ackSender_.send(goog.net.xpc.SETUP_ACK_);
    goog.net.xpc.logger.finest("SETUP_ACK sent");
    this.sentConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected() || this.sentConnectionSetupAck_) {
      var pos = raw.indexOf("|");
      var head = raw.substring(0, pos);
      var frame = raw.substring(pos + 1);
      pos = head.indexOf(",");
      if(pos == -1) {
        var seq = head;
        this.ackSender_.send("ACK:" + seq);
        this.deliverPayload_(frame)
      }else {
        var seq = head.substring(0, pos);
        this.ackSender_.send("ACK:" + seq);
        var partInfo = head.substring(pos + 1).split("/");
        var part0 = parseInt(partInfo[0], 10);
        var part1 = parseInt(partInfo[1], 10);
        if(part0 == 1) {
          this.parts_ = []
        }
        this.parts_.push(frame);
        if(part0 == part1) {
          this.deliverPayload_(this.parts_.join(""));
          delete this.parts_
        }
      }
    }else {
      goog.net.xpc.logger.warning("received msg, but channel is not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.processIncomingAck = function(msgStr) {
  goog.net.xpc.logger.finest("ack received: " + msgStr);
  if(msgStr == goog.net.xpc.SETUP_ACK_) {
    this.waitForAck_ = false;
    this.rcvdConnectionSetupAck_ = true;
    this.checkIfConnected_()
  }else {
    if(this.channel_.isConnected()) {
      if(!this.waitForAck_) {
        goog.net.xpc.logger.warning("got unexpected ack");
        return
      }
      var seq = parseInt(msgStr.split(":")[1], 10);
      if(seq == this.sequence_) {
        this.waitForAck_ = false;
        this.sendNextFrame_()
      }else {
        goog.net.xpc.logger.warning("got ack with wrong sequence")
      }
    }else {
      goog.net.xpc.logger.warning("received ack, but channel not connected")
    }
  }
};
goog.net.xpc.IframePollingTransport.prototype.sendNextFrame_ = function() {
  if(this.waitForAck_ || !this.sendQueue_.length) {
    return
  }
  var s = this.sendQueue_.shift();
  ++this.sequence_;
  this.msgSender_.send(this.sequence_ + s);
  goog.net.xpc.logger.finest("msg sent: " + this.sequence_ + s);
  this.waitForAck_ = true
};
goog.net.xpc.IframePollingTransport.prototype.deliverPayload_ = function(s) {
  var pos = s.indexOf(":");
  var service = s.substr(0, pos);
  var payload = s.substring(pos + 1);
  if(!this.channel_.isConnected()) {
    (this.deliveryQueue_ || (this.deliveryQueue_ = [])).push({service:service, payload:payload});
    goog.net.xpc.logger.finest("queued delivery")
  }else {
    this.channel_.deliver_(service, payload)
  }
};
goog.net.xpc.IframePollingTransport.prototype.MAX_FRAME_LENGTH_ = 3800;
goog.net.xpc.IframePollingTransport.prototype.send = function(service, payload) {
  var frame = service + ":" + payload;
  if(!goog.userAgent.IE || payload.length <= this.MAX_FRAME_LENGTH_) {
    this.sendQueue_.push("|" + frame)
  }else {
    var l = payload.length;
    var num = Math.ceil(l / this.MAX_FRAME_LENGTH_);
    var pos = 0;
    var i = 1;
    while(pos < l) {
      this.sendQueue_.push("," + i + "/" + num + "|" + frame.substr(pos, this.MAX_FRAME_LENGTH_));
      i++;
      pos += this.MAX_FRAME_LENGTH_
    }
  }
  this.sendNextFrame_()
};
goog.net.xpc.IframePollingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  var receivers = goog.net.xpc.IframePollingTransport.receivers_;
  goog.array.remove(receivers, this.msgReceiver_);
  goog.array.remove(receivers, this.ackReceiver_);
  this.msgReceiver_ = this.ackReceiver_ = null;
  goog.dom.removeNode(this.msgIframeElm_);
  goog.dom.removeNode(this.ackIframeElm_);
  this.msgIframeElm_ = this.ackIframeElm_ = null;
  this.msgWinObj_ = this.ackWinObj_ = null
};
goog.net.xpc.IframePollingTransport.receivers_ = [];
goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ = 10;
goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_ = 100;
goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ = 1E3;
goog.net.xpc.IframePollingTransport.receive_ = function() {
  var rcvd = false;
  try {
    for(var i = 0, l = goog.net.xpc.IframePollingTransport.receivers_.length;i < l;i++) {
      rcvd = rcvd || goog.net.xpc.IframePollingTransport.receivers_[i].receive()
    }
  }catch(e) {
    goog.net.xpc.logger.info("receive_() failed: " + e);
    goog.net.xpc.IframePollingTransport.receivers_[i].transport_.channel_.notifyTransportError_();
    if(!goog.net.xpc.IframePollingTransport.receivers_.length) {
      return
    }
  }
  var now = goog.now();
  if(rcvd) {
    goog.net.xpc.IframePollingTransport.lastActivity_ = now
  }
  var t = now - goog.net.xpc.IframePollingTransport.lastActivity_ < goog.net.xpc.IframePollingTransport.TIME_SHORT_POLL_AFTER_ACTIVITY_ ? goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_ : goog.net.xpc.IframePollingTransport.TIME_POLL_LONG_;
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, t)
};
goog.net.xpc.IframePollingTransport.receiveCb_ = goog.bind(goog.net.xpc.IframePollingTransport.receive_, goog.net.xpc.IframePollingTransport);
goog.net.xpc.IframePollingTransport.startRcvTimer_ = function() {
  goog.net.xpc.logger.fine("starting receive-timer");
  goog.net.xpc.IframePollingTransport.lastActivity_ = goog.now();
  if(goog.net.xpc.IframePollingTransport.rcvTimer_) {
    window.clearTimeout(goog.net.xpc.IframePollingTransport.rcvTimer_)
  }
  goog.net.xpc.IframePollingTransport.rcvTimer_ = window.setTimeout(goog.net.xpc.IframePollingTransport.receiveCb_, goog.net.xpc.IframePollingTransport.TIME_POLL_SHORT_)
};
goog.net.xpc.IframePollingTransport.Sender = function(url, windowObj) {
  this.sendUri_ = url;
  this.sendFrame_ = windowObj;
  this.cycle_ = 0
};
goog.net.xpc.IframePollingTransport.Sender.prototype.send = function(payload) {
  this.cycle_ = ++this.cycle_ % 2;
  var url = this.sendUri_ + "#" + this.cycle_ + encodeURIComponent(payload);
  try {
    if(goog.userAgent.WEBKIT) {
      this.sendFrame_.location.href = url
    }else {
      this.sendFrame_.location.replace(url)
    }
  }catch(e) {
    goog.net.xpc.logger.severe("sending failed", e)
  }
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver = function(transport, windowObj, callback) {
  this.transport_ = transport;
  this.rcvFrame_ = windowObj;
  this.cb_ = callback;
  this.currentLoc_ = this.rcvFrame_.location.href.split("#")[0] + "#INITIAL";
  goog.net.xpc.IframePollingTransport.receivers_.push(this);
  goog.net.xpc.IframePollingTransport.startRcvTimer_()
};
goog.net.xpc.IframePollingTransport.Receiver.prototype.receive = function() {
  var loc = this.rcvFrame_.location.href;
  if(loc != this.currentLoc_) {
    this.currentLoc_ = loc;
    var payload = loc.split("#")[1];
    if(payload) {
      payload = payload.substr(1);
      this.cb_(decodeURIComponent(payload))
    }
    return true
  }else {
    return false
  }
};
goog.provide("goog.net.xpc.IframeRelayTransport");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.IframeRelayTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerRelayUri_ = this.channel_.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI];
  this.peerIframeId_ = this.channel_.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.startCleanupTimer_()
  }
};
goog.inherits(goog.net.xpc.IframeRelayTransport, goog.net.xpc.Transport);
if(goog.userAgent.WEBKIT) {
  goog.net.xpc.IframeRelayTransport.iframeRefs_ = [];
  goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_ = 1E3;
  goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_ = 3E3;
  goog.net.xpc.IframeRelayTransport.cleanupTimer_ = 0;
  goog.net.xpc.IframeRelayTransport.startCleanupTimer_ = function() {
    if(!goog.net.xpc.IframeRelayTransport.cleanupTimer_) {
      goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(function() {
        goog.net.xpc.IframeRelayTransport.cleanup_()
      }, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
    }
  };
  goog.net.xpc.IframeRelayTransport.cleanup_ = function(opt_maxAge) {
    var now = goog.now();
    var maxAge = opt_maxAge || goog.net.xpc.IframeRelayTransport.IFRAME_MAX_AGE_;
    while(goog.net.xpc.IframeRelayTransport.iframeRefs_.length && now - goog.net.xpc.IframeRelayTransport.iframeRefs_[0].timestamp >= maxAge) {
      var ifr = goog.net.xpc.IframeRelayTransport.iframeRefs_.shift().iframeElement;
      goog.dom.removeNode(ifr);
      goog.net.xpc.logger.finest("iframe removed")
    }
    goog.net.xpc.IframeRelayTransport.cleanupTimer_ = window.setTimeout(goog.net.xpc.IframeRelayTransport.cleanupCb_, goog.net.xpc.IframeRelayTransport.CLEANUP_INTERVAL_)
  };
  goog.net.xpc.IframeRelayTransport.cleanupCb_ = function() {
    goog.net.xpc.IframeRelayTransport.cleanup_()
  }
}
goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_ = 1800;
goog.net.xpc.IframeRelayTransport.FragmentInfo;
goog.net.xpc.IframeRelayTransport.fragmentMap_ = {};
goog.net.xpc.IframeRelayTransport.prototype.transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY;
goog.net.xpc.IframeRelayTransport.prototype.connect = function() {
  if(!this.getWindow()["xpcRelay"]) {
    this.getWindow()["xpcRelay"] = goog.net.xpc.IframeRelayTransport.receiveMessage_
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP)
};
goog.net.xpc.IframeRelayTransport.receiveMessage_ = function(channelName, frame) {
  var pos = frame.indexOf(":");
  var header = frame.substr(0, pos);
  var payload = frame.substr(pos + 1);
  if(!goog.userAgent.IE || (pos = header.indexOf("|")) == -1) {
    var service = header
  }else {
    var service = header.substr(0, pos);
    var fragmentIdStr = header.substr(pos + 1);
    pos = fragmentIdStr.indexOf("+");
    var messageIdStr = fragmentIdStr.substr(0, pos);
    var fragmentNum = parseInt(fragmentIdStr.substr(pos + 1), 10);
    var fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr];
    if(!fragmentInfo) {
      fragmentInfo = goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr] = {fragments:[], received:0, expected:0}
    }
    if(goog.string.contains(fragmentIdStr, "++")) {
      fragmentInfo.expected = fragmentNum + 1
    }
    fragmentInfo.fragments[fragmentNum] = payload;
    fragmentInfo.received++;
    if(fragmentInfo.received != fragmentInfo.expected) {
      return
    }
    payload = fragmentInfo.fragments.join("");
    delete goog.net.xpc.IframeRelayTransport.fragmentMap_[messageIdStr]
  }
  goog.net.xpc.channels_[channelName].deliver_(service, decodeURIComponent(payload))
};
goog.net.xpc.IframeRelayTransport.prototype.transportServiceHandler = function(payload) {
  if(payload == goog.net.xpc.SETUP) {
    this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
    this.channel_.notifyConnected_()
  }else {
    if(payload == goog.net.xpc.SETUP_ACK_) {
      this.channel_.notifyConnected_()
    }
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send = function(service, payload) {
  var encodedPayload = encodeURIComponent(payload);
  var encodedLen = encodedPayload.length;
  var maxSize = goog.net.xpc.IframeRelayTransport.IE_PAYLOAD_MAX_SIZE_;
  if(goog.userAgent.IE && encodedLen > maxSize) {
    var messageIdStr = goog.string.getRandomString();
    for(var startIndex = 0, fragmentNum = 0;startIndex < encodedLen;fragmentNum++) {
      var payloadFragment = encodedPayload.substr(startIndex, maxSize);
      startIndex += maxSize;
      var fragmentIdStr = messageIdStr + (startIndex >= encodedLen ? "++" : "+") + fragmentNum;
      this.send_(service, payloadFragment, fragmentIdStr)
    }
  }else {
    this.send_(service, encodedPayload)
  }
};
goog.net.xpc.IframeRelayTransport.prototype.send_ = function(service, encodedPayload, opt_fragmentIdStr) {
  if(goog.userAgent.IE) {
    var div = this.getWindow().document.createElement("div");
    div.innerHTML = '<iframe onload="this.xpcOnload()"></iframe>';
    var ifr = div.childNodes[0];
    div = null;
    ifr["xpcOnload"] = goog.net.xpc.IframeRelayTransport.iframeLoadHandler_
  }else {
    var ifr = this.getWindow().document.createElement("iframe");
    if(goog.userAgent.WEBKIT) {
      goog.net.xpc.IframeRelayTransport.iframeRefs_.push({timestamp:goog.now(), iframeElement:ifr})
    }else {
      goog.events.listen(ifr, "load", goog.net.xpc.IframeRelayTransport.iframeLoadHandler_)
    }
  }
  var style = ifr.style;
  style.visibility = "hidden";
  style.width = ifr.style.height = "0px";
  style.position = "absolute";
  var url = this.peerRelayUri_;
  url += "#" + this.channel_.name;
  if(this.peerIframeId_) {
    url += "," + this.peerIframeId_
  }
  url += "|" + service;
  if(opt_fragmentIdStr) {
    url += "|" + opt_fragmentIdStr
  }
  url += ":" + encodedPayload;
  ifr.src = url;
  this.getWindow().document.body.appendChild(ifr);
  goog.net.xpc.logger.finest("msg sent: " + url)
};
goog.net.xpc.IframeRelayTransport.iframeLoadHandler_ = function() {
  goog.net.xpc.logger.finest("iframe-load");
  goog.dom.removeNode(this);
  this.xpcOnload = null
};
goog.net.xpc.IframeRelayTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(goog.userAgent.WEBKIT) {
    goog.net.xpc.IframeRelayTransport.cleanup_(0)
  }
};
goog.provide("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.events");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NativeMessagingTransport = function(channel, peerHostname, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.peerHostname_ = peerHostname || "*"
};
goog.inherits(goog.net.xpc.NativeMessagingTransport, goog.net.xpc.Transport);
goog.net.xpc.NativeMessagingTransport.prototype.initialized_ = false;
goog.net.xpc.NativeMessagingTransport.prototype.transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING;
goog.net.xpc.NativeMessagingTransport.activeCount_ = {};
goog.net.xpc.NativeMessagingTransport.initialize_ = function(listenWindow) {
  var uid = goog.getUid(listenWindow);
  var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
  if(!goog.isNumber(value)) {
    value = 0
  }
  if(value == 0) {
    goog.events.listen(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
  }
  goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value + 1
};
goog.net.xpc.NativeMessagingTransport.messageReceived_ = function(msgEvt) {
  var data = msgEvt.getBrowserEvent().data;
  var headDelim = data.indexOf("|");
  var serviceDelim = data.indexOf(":");
  if(headDelim == -1 || serviceDelim == -1) {
    return false
  }
  var channelName = data.substring(0, headDelim);
  var service = data.substring(headDelim + 1, serviceDelim);
  var payload = data.substring(serviceDelim + 1);
  goog.net.xpc.logger.fine("messageReceived: channel=" + channelName + ", service=" + service + ", payload=" + payload);
  var channel = goog.net.xpc.channels_[channelName];
  if(channel) {
    channel.deliver_(service, payload, msgEvt.getBrowserEvent().origin);
    return true
  }
  for(var staleChannelName in goog.net.xpc.channels_) {
    var staleChannel = goog.net.xpc.channels_[staleChannelName];
    if(staleChannel.getRole() == goog.net.xpc.CrossPageChannel.Role.INNER && !staleChannel.isConnected() && service == goog.net.xpc.TRANSPORT_SERVICE_ && payload == goog.net.xpc.SETUP) {
      goog.net.xpc.logger.fine("changing channel name to " + channelName);
      staleChannel.name = channelName;
      delete goog.net.xpc.channels_[staleChannelName];
      goog.net.xpc.channels_[channelName] = staleChannel;
      staleChannel.deliver_(service, payload);
      return true
    }
  }
  goog.net.xpc.logger.info('channel name mismatch; message ignored"');
  return false
};
goog.net.xpc.NativeMessagingTransport.prototype.transportServiceHandler = function(payload) {
  switch(payload) {
    case goog.net.xpc.SETUP:
      this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP_ACK_);
      break;
    case goog.net.xpc.SETUP_ACK_:
      this.channel_.notifyConnected_();
      break
  }
};
goog.net.xpc.NativeMessagingTransport.prototype.connect = function() {
  goog.net.xpc.NativeMessagingTransport.initialize_(this.getWindow());
  this.initialized_ = true;
  this.connectWithRetries_()
};
goog.net.xpc.NativeMessagingTransport.prototype.connectWithRetries_ = function() {
  if(this.channel_.isConnected() || this.isDisposed()) {
    return
  }
  this.send(goog.net.xpc.TRANSPORT_SERVICE_, goog.net.xpc.SETUP);
  this.getWindow().setTimeout(goog.bind(this.connectWithRetries_, this), 100)
};
goog.net.xpc.NativeMessagingTransport.prototype.send = function(service, payload) {
  var win = this.channel_.peerWindowObject_;
  if(!win) {
    goog.net.xpc.logger.fine("send(): window not ready");
    return
  }
  var obj = win.postMessage ? win : win.document;
  this.send = function(service, payload) {
    goog.net.xpc.logger.fine("send(): payload=" + payload + " to hostname=" + this.peerHostname_);
    obj.postMessage(this.channel_.name + "|" + service + ":" + payload, this.peerHostname_)
  };
  this.send(service, payload)
};
goog.net.xpc.NativeMessagingTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  if(this.initialized_) {
    var listenWindow = this.getWindow();
    var uid = goog.getUid(listenWindow);
    var value = goog.net.xpc.NativeMessagingTransport.activeCount_[uid];
    goog.net.xpc.NativeMessagingTransport.activeCount_[uid] = value - 1;
    if(value == 1) {
      goog.events.unlisten(listenWindow.postMessage ? listenWindow : listenWindow.document, "message", goog.net.xpc.NativeMessagingTransport.messageReceived_, false, goog.net.xpc.NativeMessagingTransport)
    }
  }
};
goog.provide("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.Transport");
goog.net.xpc.NixTransport = function(channel, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.channel_ = channel;
  this.authToken_ = channel[goog.net.xpc.CfgFields.AUTH_TOKEN] || "";
  this.remoteAuthToken_ = channel[goog.net.xpc.CfgFields.REMOTE_AUTH_TOKEN] || "";
  goog.net.xpc.NixTransport.conductGlobalSetup_(this.getWindow());
  this[goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE] = this.handleMessage_;
  this[goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL] = this.createChannel_
};
goog.inherits(goog.net.xpc.NixTransport, goog.net.xpc.Transport);
goog.net.xpc.NixTransport.NIX_WRAPPER = "GCXPC____NIXVBS_wrapper";
goog.net.xpc.NixTransport.NIX_GET_WRAPPER = "GCXPC____NIXVBS_get_wrapper";
goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE = "GCXPC____NIXJS_handle_message";
goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL = "GCXPC____NIXJS_create_channel";
goog.net.xpc.NixTransport.NIX_ID_FIELD = "GCXPC____NIXVBS_container";
goog.net.xpc.NixTransport.conductGlobalSetup_ = function(listenWindow) {
  if(listenWindow["nix_setup_complete"]) {
    return
  }
  var vbscript = "Class " + goog.net.xpc.NixTransport.NIX_WRAPPER + "\n " + "Private m_Transport\n" + "Private m_Auth\n" + "Public Sub SetTransport(transport)\n" + "If isEmpty(m_Transport) Then\n" + "Set m_Transport = transport\n" + "End If\n" + "End Sub\n" + "Public Sub SetAuth(auth)\n" + "If isEmpty(m_Auth) Then\n" + "m_Auth = auth\n" + "End If\n" + "End Sub\n" + "Public Function GetAuthToken()\n " + "GetAuthToken = m_Auth\n" + "End Function\n" + "Public Sub SendMessage(service, payload)\n " + 
  "Call m_Transport." + goog.net.xpc.NixTransport.NIX_HANDLE_MESSAGE + "(service, payload)\n" + "End Sub\n" + "Public Sub CreateChannel(channel)\n " + "Call m_Transport." + goog.net.xpc.NixTransport.NIX_CREATE_CHANNEL + "(channel)\n" + "End Sub\n" + "Public Sub " + goog.net.xpc.NixTransport.NIX_ID_FIELD + "()\n " + "End Sub\n" + "End Class\n " + "Function " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + "(transport, auth)\n" + "Dim wrap\n" + "Set wrap = New " + goog.net.xpc.NixTransport.NIX_WRAPPER + 
  "\n" + "wrap.SetTransport transport\n" + "wrap.SetAuth auth\n" + "Set " + goog.net.xpc.NixTransport.NIX_GET_WRAPPER + " = wrap\n" + "End Function";
  try {
    listenWindow.execScript(vbscript, "vbscript");
    listenWindow["nix_setup_complete"] = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting global setup: " + e)
  }
};
goog.net.xpc.NixTransport.prototype.transportType = goog.net.xpc.TransportTypes.NIX;
goog.net.xpc.NixTransport.prototype.localSetupCompleted_ = false;
goog.net.xpc.NixTransport.prototype.nixChannel_ = null;
goog.net.xpc.NixTransport.prototype.connect = function() {
  if(this.channel_.getRole() == goog.net.xpc.CrossPageChannel.Role.OUTER) {
    this.attemptOuterSetup_()
  }else {
    this.attemptInnerSetup_()
  }
};
goog.net.xpc.NixTransport.prototype.attemptOuterSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  var innerFrame = this.channel_.iframeElement_;
  try {
    innerFrame.contentWindow.opener = this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_);
    this.localSetupCompleted_ = true
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e)
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptOuterSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.attemptInnerSetup_ = function() {
  if(this.localSetupCompleted_) {
    return
  }
  try {
    var opener = this.getWindow().opener;
    if(opener && goog.net.xpc.NixTransport.NIX_ID_FIELD in opener) {
      this.nixChannel_ = opener;
      var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
      if(remoteAuthToken != this.remoteAuthToken_) {
        goog.net.xpc.logger.severe("Invalid auth token from other party");
        return
      }
      this.nixChannel_["CreateChannel"](this.getWindow()[goog.net.xpc.NixTransport.NIX_GET_WRAPPER](this, this.authToken_));
      this.localSetupCompleted_ = true;
      this.channel_.notifyConnected_()
    }
  }catch(e) {
    goog.net.xpc.logger.severe("exception caught while attempting setup: " + e);
    return
  }
  if(!this.localSetupCompleted_) {
    this.getWindow().setTimeout(goog.bind(this.attemptInnerSetup_, this), 100)
  }
};
goog.net.xpc.NixTransport.prototype.createChannel_ = function(channel) {
  if(typeof channel != "unknown" || !(goog.net.xpc.NixTransport.NIX_ID_FIELD in channel)) {
    goog.net.xpc.logger.severe("Invalid NIX channel given to createChannel_")
  }
  this.nixChannel_ = channel;
  var remoteAuthToken = this.nixChannel_["GetAuthToken"]();
  if(remoteAuthToken != this.remoteAuthToken_) {
    goog.net.xpc.logger.severe("Invalid auth token from other party");
    return
  }
  this.channel_.notifyConnected_()
};
goog.net.xpc.NixTransport.prototype.handleMessage_ = function(serviceName, payload) {
  function deliveryHandler() {
    this.channel_.deliver_(serviceName, payload)
  }
  this.getWindow().setTimeout(goog.bind(deliveryHandler, this), 1)
};
goog.net.xpc.NixTransport.prototype.send = function(service, payload) {
  if(typeof this.nixChannel_ !== "unknown") {
    goog.net.xpc.logger.severe("NIX channel not connected")
  }
  this.nixChannel_["SendMessage"](service, payload)
};
goog.net.xpc.NixTransport.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.nixChannel_ = null
};
goog.provide("goog.net.xpc.CrossPageChannel");
goog.provide("goog.net.xpc.CrossPageChannel.Role");
goog.require("goog.Disposable");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.json");
goog.require("goog.messaging.AbstractChannel");
goog.require("goog.net.xpc");
goog.require("goog.net.xpc.FrameElementMethodTransport");
goog.require("goog.net.xpc.IframePollingTransport");
goog.require("goog.net.xpc.IframeRelayTransport");
goog.require("goog.net.xpc.NativeMessagingTransport");
goog.require("goog.net.xpc.NixTransport");
goog.require("goog.net.xpc.Transport");
goog.require("goog.userAgent");
goog.net.xpc.CrossPageChannel = function(cfg, opt_domHelper) {
  goog.base(this);
  for(var i = 0, uriField;uriField = goog.net.xpc.UriCfgFields[i];i++) {
    if(uriField in cfg && !/^https?:\/\//.test(cfg[uriField])) {
      throw Error("URI " + cfg[uriField] + " is invalid for field " + uriField);
    }
  }
  this.cfg_ = cfg;
  this.name = this.cfg_[goog.net.xpc.CfgFields.CHANNEL_NAME] || goog.net.xpc.getRandomString(10);
  this.domHelper_ = opt_domHelper || goog.dom.getDomHelper();
  goog.net.xpc.channels_[this.name] = this;
  goog.events.listen(window, "unload", goog.net.xpc.CrossPageChannel.disposeAll_);
  goog.net.xpc.logger.info("CrossPageChannel created: " + this.name)
};
goog.inherits(goog.net.xpc.CrossPageChannel, goog.messaging.AbstractChannel);
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_ = new RegExp("^%*" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_ = new RegExp("^%+" + goog.net.xpc.TRANSPORT_SERVICE_ + "$");
goog.net.xpc.CrossPageChannel.prototype.transport_ = null;
goog.net.xpc.CrossPageChannel.prototype.state_ = goog.net.xpc.ChannelStates.NOT_CONNECTED;
goog.net.xpc.CrossPageChannel.prototype.isConnected = function() {
  return this.state_ == goog.net.xpc.ChannelStates.CONNECTED
};
goog.net.xpc.CrossPageChannel.prototype.peerWindowObject_ = null;
goog.net.xpc.CrossPageChannel.prototype.iframeElement_ = null;
goog.net.xpc.CrossPageChannel.prototype.setPeerWindowObject = function(peerWindowObject) {
  this.peerWindowObject_ = peerWindowObject
};
goog.net.xpc.CrossPageChannel.prototype.determineTransportType_ = function() {
  var transportType;
  if(goog.isFunction(document.postMessage) || goog.isFunction(window.postMessage) || goog.userAgent.IE && window.postMessage) {
    transportType = goog.net.xpc.TransportTypes.NATIVE_MESSAGING
  }else {
    if(goog.userAgent.GECKO) {
      transportType = goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD
    }else {
      if(goog.userAgent.IE && this.cfg_[goog.net.xpc.CfgFields.PEER_RELAY_URI]) {
        transportType = goog.net.xpc.TransportTypes.IFRAME_RELAY
      }else {
        if(goog.userAgent.IE) {
          transportType = goog.net.xpc.TransportTypes.NIX
        }else {
          if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI] && this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
            transportType = goog.net.xpc.TransportTypes.IFRAME_POLLING
          }
        }
      }
    }
  }
  return transportType
};
goog.net.xpc.CrossPageChannel.prototype.createTransport_ = function() {
  if(this.transport_) {
    return
  }
  if(!this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    this.cfg_[goog.net.xpc.CfgFields.TRANSPORT] = this.determineTransportType_()
  }
  switch(this.cfg_[goog.net.xpc.CfgFields.TRANSPORT]) {
    case goog.net.xpc.TransportTypes.NATIVE_MESSAGING:
      this.transport_ = new goog.net.xpc.NativeMessagingTransport(this, this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME], this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.NIX:
      this.transport_ = new goog.net.xpc.NixTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.FRAME_ELEMENT_METHOD:
      this.transport_ = new goog.net.xpc.FrameElementMethodTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_RELAY:
      this.transport_ = new goog.net.xpc.IframeRelayTransport(this, this.domHelper_);
      break;
    case goog.net.xpc.TransportTypes.IFRAME_POLLING:
      this.transport_ = new goog.net.xpc.IframePollingTransport(this, this.domHelper_);
      break
  }
  if(this.transport_) {
    goog.net.xpc.logger.info("Transport created: " + this.transport_.getName())
  }else {
    throw Error("CrossPageChannel: No suitable transport found!");
  }
};
goog.net.xpc.CrossPageChannel.prototype.getTransportType = function() {
  return this.transport_.getType()
};
goog.net.xpc.CrossPageChannel.prototype.getTransportName = function() {
  return this.transport_.getName()
};
goog.net.xpc.CrossPageChannel.prototype.getPeerConfiguration = function() {
  var peerCfg = {};
  peerCfg[goog.net.xpc.CfgFields.CHANNEL_NAME] = this.name;
  peerCfg[goog.net.xpc.CfgFields.TRANSPORT] = this.cfg_[goog.net.xpc.CfgFields.TRANSPORT];
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_RELAY_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_RELAY_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.PEER_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.LOCAL_POLL_URI]
  }
  if(this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]) {
    peerCfg[goog.net.xpc.CfgFields.LOCAL_POLL_URI] = this.cfg_[goog.net.xpc.CfgFields.PEER_POLL_URI]
  }
  return peerCfg
};
goog.net.xpc.CrossPageChannel.prototype.createPeerIframe = function(parentElm, opt_configureIframeCb, opt_addCfgParam) {
  var iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID];
  if(!iframeId) {
    iframeId = this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID] = "xpcpeer" + goog.net.xpc.getRandomString(4)
  }
  var iframeElm = goog.dom.createElement("IFRAME");
  iframeElm.id = iframeElm.name = iframeId;
  if(opt_configureIframeCb) {
    opt_configureIframeCb(iframeElm)
  }else {
    iframeElm.style.width = iframeElm.style.height = "100%"
  }
  var peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI];
  if(goog.isString(peerUri)) {
    peerUri = this.cfg_[goog.net.xpc.CfgFields.PEER_URI] = new goog.Uri(peerUri)
  }
  if(opt_addCfgParam !== false) {
    peerUri.setParameterValue("xpc", goog.json.serialize(this.getPeerConfiguration()))
  }
  if(goog.userAgent.GECKO || goog.userAgent.WEBKIT) {
    this.deferConnect_ = true;
    window.setTimeout(goog.bind(function() {
      this.deferConnect_ = false;
      parentElm.appendChild(iframeElm);
      iframeElm.src = peerUri.toString();
      goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")");
      if(this.connectDeferred_) {
        this.connect(this.connectCb_)
      }
    }, this), 1)
  }else {
    iframeElm.src = peerUri.toString();
    parentElm.appendChild(iframeElm);
    goog.net.xpc.logger.info("peer iframe created (" + iframeId + ")")
  }
  return iframeElm
};
goog.net.xpc.CrossPageChannel.prototype.deferConnect_ = false;
goog.net.xpc.CrossPageChannel.prototype.connectDeferred_ = false;
goog.net.xpc.CrossPageChannel.prototype.connect = function(opt_connectCb) {
  this.connectCb_ = opt_connectCb || goog.nullFunction;
  if(this.deferConnect_) {
    goog.net.xpc.logger.info("connect() deferred");
    this.connectDeferred_ = true;
    return
  }
  goog.net.xpc.logger.info("connect()");
  if(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]) {
    this.iframeElement_ = this.domHelper_.getElement(this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID])
  }
  if(this.iframeElement_) {
    var winObj = this.iframeElement_.contentWindow;
    if(!winObj) {
      winObj = window.frames[this.cfg_[goog.net.xpc.CfgFields.IFRAME_ID]]
    }
    this.setPeerWindowObject(winObj)
  }
  if(!this.peerWindowObject_) {
    if(window == top) {
      throw Error("CrossPageChannel: Can't connect, peer window-object not set.");
    }else {
      this.setPeerWindowObject(window.parent)
    }
  }
  this.createTransport_();
  this.transport_.connect()
};
goog.net.xpc.CrossPageChannel.prototype.close = function() {
  if(!this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CLOSED;
  this.transport_.dispose();
  this.transport_ = null;
  goog.net.xpc.logger.info('Channel "' + this.name + '" closed')
};
goog.net.xpc.CrossPageChannel.prototype.notifyConnected_ = function() {
  if(this.isConnected()) {
    return
  }
  this.state_ = goog.net.xpc.ChannelStates.CONNECTED;
  goog.net.xpc.logger.info('Channel "' + this.name + '" connected');
  this.connectCb_()
};
goog.net.xpc.CrossPageChannel.prototype.notifyTransportError_ = function() {
  goog.net.xpc.logger.info("Transport Error");
  this.close()
};
goog.net.xpc.CrossPageChannel.prototype.send = function(serviceName, payload) {
  if(!this.isConnected()) {
    goog.net.xpc.logger.severe("Can't send. Channel not connected.");
    return
  }
  if(this.peerWindowObject_.closed) {
    goog.net.xpc.logger.severe("Peer has disappeared.");
    this.close();
    return
  }
  if(goog.isObject(payload)) {
    payload = goog.json.serialize(payload)
  }
  this.transport_.send(this.escapeServiceName_(serviceName), payload)
};
goog.net.xpc.CrossPageChannel.prototype.deliver_ = function(serviceName, payload, opt_origin) {
  if(!this.isMessageOriginAcceptable_(opt_origin)) {
    goog.net.xpc.logger.warning('Message received from unapproved origin "' + opt_origin + '" - rejected.');
    return
  }
  if(this.isDisposed()) {
    goog.net.xpc.logger.warning("CrossPageChannel::deliver_(): Disposed.")
  }else {
    if(!serviceName || serviceName == goog.net.xpc.TRANSPORT_SERVICE_) {
      this.transport_.transportServiceHandler(payload)
    }else {
      if(this.isConnected()) {
        this.deliver(this.unescapeServiceName_(serviceName), payload)
      }else {
        goog.net.xpc.logger.info("CrossPageChannel::deliver_(): Not connected.")
      }
    }
  }
};
goog.net.xpc.CrossPageChannel.prototype.escapeServiceName_ = function(name) {
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_ESCAPE_RE_.test(name)) {
    name = "%" + name
  }
  return name.replace(/[%:|]/g, encodeURIComponent)
};
goog.net.xpc.CrossPageChannel.prototype.unescapeServiceName_ = function(name) {
  name = name.replace(/%[0-9a-f]{2}/gi, decodeURIComponent);
  if(goog.net.xpc.CrossPageChannel.TRANSPORT_SERVICE_UNESCAPE_RE_.test(name)) {
    return name.substring(1)
  }else {
    return name
  }
};
goog.net.xpc.CrossPageChannel.Role = {OUTER:0, INNER:1};
goog.net.xpc.CrossPageChannel.prototype.getRole = function() {
  return window.parent == this.peerWindowObject_ ? goog.net.xpc.CrossPageChannel.Role.INNER : goog.net.xpc.CrossPageChannel.Role.OUTER
};
goog.net.xpc.CrossPageChannel.prototype.isMessageOriginAcceptable_ = function(opt_origin) {
  var peerHostname = this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME];
  return goog.string.isEmptySafe(opt_origin) || goog.string.isEmptySafe(peerHostname) || opt_origin == this.cfg_[goog.net.xpc.CfgFields.PEER_HOSTNAME]
};
goog.net.xpc.CrossPageChannel.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.close();
  this.peerWindowObject_ = null;
  this.iframeElement_ = null;
  delete goog.net.xpc.channels_[this.name]
};
goog.net.xpc.CrossPageChannel.disposeAll_ = function() {
  for(var name in goog.net.xpc.channels_) {
    var ch = goog.net.xpc.channels_[name];
    if(ch) {
      ch.dispose()
    }
  }
};
goog.provide("clojure.browser.net");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.net.xpc.CrossPageChannel");
goog.require("goog.net.xpc.CfgFields");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
clojure.browser.net._STAR_timeout_STAR_ = 1E4;
clojure.browser.net.event_types = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__13013) {
  var vec__13014__13015 = p__13013;
  var k__13016 = cljs.core.nth.call(null, vec__13014__13015, 0, null);
  var v__13017 = cljs.core.nth.call(null, vec__13014__13015, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__13016.toLowerCase()), v__13017], true)
}, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))));
clojure.browser.net.IConnection = {};
clojure.browser.net.connect = function() {
  var connect = null;
  var connect__1 = function(this$) {
    if(function() {
      var and__3822__auto____13034 = this$;
      if(and__3822__auto____13034) {
        return this$.clojure$browser$net$IConnection$connect$arity$1
      }else {
        return and__3822__auto____13034
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$1(this$)
    }else {
      var x__2413__auto____13035 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13036 = clojure.browser.net.connect[goog.typeOf(x__2413__auto____13035)];
        if(or__3824__auto____13036) {
          return or__3824__auto____13036
        }else {
          var or__3824__auto____13037 = clojure.browser.net.connect["_"];
          if(or__3824__auto____13037) {
            return or__3824__auto____13037
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var connect__2 = function(this$, opt1) {
    if(function() {
      var and__3822__auto____13038 = this$;
      if(and__3822__auto____13038) {
        return this$.clojure$browser$net$IConnection$connect$arity$2
      }else {
        return and__3822__auto____13038
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$2(this$, opt1)
    }else {
      var x__2413__auto____13039 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13040 = clojure.browser.net.connect[goog.typeOf(x__2413__auto____13039)];
        if(or__3824__auto____13040) {
          return or__3824__auto____13040
        }else {
          var or__3824__auto____13041 = clojure.browser.net.connect["_"];
          if(or__3824__auto____13041) {
            return or__3824__auto____13041
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1)
    }
  };
  var connect__3 = function(this$, opt1, opt2) {
    if(function() {
      var and__3822__auto____13042 = this$;
      if(and__3822__auto____13042) {
        return this$.clojure$browser$net$IConnection$connect$arity$3
      }else {
        return and__3822__auto____13042
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$3(this$, opt1, opt2)
    }else {
      var x__2413__auto____13043 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13044 = clojure.browser.net.connect[goog.typeOf(x__2413__auto____13043)];
        if(or__3824__auto____13044) {
          return or__3824__auto____13044
        }else {
          var or__3824__auto____13045 = clojure.browser.net.connect["_"];
          if(or__3824__auto____13045) {
            return or__3824__auto____13045
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2)
    }
  };
  var connect__4 = function(this$, opt1, opt2, opt3) {
    if(function() {
      var and__3822__auto____13046 = this$;
      if(and__3822__auto____13046) {
        return this$.clojure$browser$net$IConnection$connect$arity$4
      }else {
        return and__3822__auto____13046
      }
    }()) {
      return this$.clojure$browser$net$IConnection$connect$arity$4(this$, opt1, opt2, opt3)
    }else {
      var x__2413__auto____13047 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13048 = clojure.browser.net.connect[goog.typeOf(x__2413__auto____13047)];
        if(or__3824__auto____13048) {
          return or__3824__auto____13048
        }else {
          var or__3824__auto____13049 = clojure.browser.net.connect["_"];
          if(or__3824__auto____13049) {
            return or__3824__auto____13049
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.connect", this$);
          }
        }
      }().call(null, this$, opt1, opt2, opt3)
    }
  };
  connect = function(this$, opt1, opt2, opt3) {
    switch(arguments.length) {
      case 1:
        return connect__1.call(this, this$);
      case 2:
        return connect__2.call(this, this$, opt1);
      case 3:
        return connect__3.call(this, this$, opt1, opt2);
      case 4:
        return connect__4.call(this, this$, opt1, opt2, opt3)
    }
    throw"Invalid arity: " + arguments.length;
  };
  connect.cljs$lang$arity$1 = connect__1;
  connect.cljs$lang$arity$2 = connect__2;
  connect.cljs$lang$arity$3 = connect__3;
  connect.cljs$lang$arity$4 = connect__4;
  return connect
}();
clojure.browser.net.transmit = function() {
  var transmit = null;
  var transmit__2 = function(this$, opt) {
    if(function() {
      var and__3822__auto____13070 = this$;
      if(and__3822__auto____13070) {
        return this$.clojure$browser$net$IConnection$transmit$arity$2
      }else {
        return and__3822__auto____13070
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$2(this$, opt)
    }else {
      var x__2413__auto____13071 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13072 = clojure.browser.net.transmit[goog.typeOf(x__2413__auto____13071)];
        if(or__3824__auto____13072) {
          return or__3824__auto____13072
        }else {
          var or__3824__auto____13073 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____13073) {
            return or__3824__auto____13073
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt)
    }
  };
  var transmit__3 = function(this$, opt, opt2) {
    if(function() {
      var and__3822__auto____13074 = this$;
      if(and__3822__auto____13074) {
        return this$.clojure$browser$net$IConnection$transmit$arity$3
      }else {
        return and__3822__auto____13074
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$3(this$, opt, opt2)
    }else {
      var x__2413__auto____13075 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13076 = clojure.browser.net.transmit[goog.typeOf(x__2413__auto____13075)];
        if(or__3824__auto____13076) {
          return or__3824__auto____13076
        }else {
          var or__3824__auto____13077 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____13077) {
            return or__3824__auto____13077
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2)
    }
  };
  var transmit__4 = function(this$, opt, opt2, opt3) {
    if(function() {
      var and__3822__auto____13078 = this$;
      if(and__3822__auto____13078) {
        return this$.clojure$browser$net$IConnection$transmit$arity$4
      }else {
        return and__3822__auto____13078
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$4(this$, opt, opt2, opt3)
    }else {
      var x__2413__auto____13079 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13080 = clojure.browser.net.transmit[goog.typeOf(x__2413__auto____13079)];
        if(or__3824__auto____13080) {
          return or__3824__auto____13080
        }else {
          var or__3824__auto____13081 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____13081) {
            return or__3824__auto____13081
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3)
    }
  };
  var transmit__5 = function(this$, opt, opt2, opt3, opt4) {
    if(function() {
      var and__3822__auto____13082 = this$;
      if(and__3822__auto____13082) {
        return this$.clojure$browser$net$IConnection$transmit$arity$5
      }else {
        return and__3822__auto____13082
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$5(this$, opt, opt2, opt3, opt4)
    }else {
      var x__2413__auto____13083 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13084 = clojure.browser.net.transmit[goog.typeOf(x__2413__auto____13083)];
        if(or__3824__auto____13084) {
          return or__3824__auto____13084
        }else {
          var or__3824__auto____13085 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____13085) {
            return or__3824__auto____13085
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4)
    }
  };
  var transmit__6 = function(this$, opt, opt2, opt3, opt4, opt5) {
    if(function() {
      var and__3822__auto____13086 = this$;
      if(and__3822__auto____13086) {
        return this$.clojure$browser$net$IConnection$transmit$arity$6
      }else {
        return and__3822__auto____13086
      }
    }()) {
      return this$.clojure$browser$net$IConnection$transmit$arity$6(this$, opt, opt2, opt3, opt4, opt5)
    }else {
      var x__2413__auto____13087 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13088 = clojure.browser.net.transmit[goog.typeOf(x__2413__auto____13087)];
        if(or__3824__auto____13088) {
          return or__3824__auto____13088
        }else {
          var or__3824__auto____13089 = clojure.browser.net.transmit["_"];
          if(or__3824__auto____13089) {
            return or__3824__auto____13089
          }else {
            throw cljs.core.missing_protocol.call(null, "IConnection.transmit", this$);
          }
        }
      }().call(null, this$, opt, opt2, opt3, opt4, opt5)
    }
  };
  transmit = function(this$, opt, opt2, opt3, opt4, opt5) {
    switch(arguments.length) {
      case 2:
        return transmit__2.call(this, this$, opt);
      case 3:
        return transmit__3.call(this, this$, opt, opt2);
      case 4:
        return transmit__4.call(this, this$, opt, opt2, opt3);
      case 5:
        return transmit__5.call(this, this$, opt, opt2, opt3, opt4);
      case 6:
        return transmit__6.call(this, this$, opt, opt2, opt3, opt4, opt5)
    }
    throw"Invalid arity: " + arguments.length;
  };
  transmit.cljs$lang$arity$2 = transmit__2;
  transmit.cljs$lang$arity$3 = transmit__3;
  transmit.cljs$lang$arity$4 = transmit__4;
  transmit.cljs$lang$arity$5 = transmit__5;
  transmit.cljs$lang$arity$6 = transmit__6;
  return transmit
}();
clojure.browser.net.close = function close(this$) {
  if(function() {
    var and__3822__auto____13094 = this$;
    if(and__3822__auto____13094) {
      return this$.clojure$browser$net$IConnection$close$arity$1
    }else {
      return and__3822__auto____13094
    }
  }()) {
    return this$.clojure$browser$net$IConnection$close$arity$1(this$)
  }else {
    var x__2413__auto____13095 = this$ == null ? null : this$;
    return function() {
      var or__3824__auto____13096 = clojure.browser.net.close[goog.typeOf(x__2413__auto____13095)];
      if(or__3824__auto____13096) {
        return or__3824__auto____13096
      }else {
        var or__3824__auto____13097 = clojure.browser.net.close["_"];
        if(or__3824__auto____13097) {
          return or__3824__auto____13097
        }else {
          throw cljs.core.missing_protocol.call(null, "IConnection.close", this$);
        }
      }
    }().call(null, this$)
  }
};
goog.net.XhrIo.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrIo.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__13098) {
    var vec__13099__13100 = p__13098;
    var k__13101 = cljs.core.nth.call(null, vec__13099__13100, 0, null);
    var v__13102 = cljs.core.nth.call(null, vec__13099__13100, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__13101.toLowerCase()), v__13102], true)
  }, cljs.core.merge.call(null, cljs.core.js__GT_clj.call(null, goog.net.EventType))))
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$ = true;
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$2 = function(this$, uri) {
  return clojure.browser.net.transmit.call(null, this$, uri, "GET", null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, uri, method) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, null, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$4 = function(this$, uri, method, content) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, null, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$5 = function(this$, uri, method, content, headers) {
  return clojure.browser.net.transmit.call(null, this$, uri, method, content, headers, clojure.browser.net._STAR_timeout_STAR_)
};
goog.net.XhrIo.prototype.clojure$browser$net$IConnection$transmit$arity$6 = function(this$, uri, method, content, headers, timeout) {
  this$.setTimeoutInterval(timeout);
  return this$.send(uri, method, content, headers)
};
clojure.browser.net.xpc_config_fields = cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__13103) {
  var vec__13104__13105 = p__13103;
  var k__13106 = cljs.core.nth.call(null, vec__13104__13105, 0, null);
  var v__13107 = cljs.core.nth.call(null, vec__13104__13105, 1, null);
  return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__13106.toLowerCase()), v__13107], true)
}, cljs.core.js__GT_clj.call(null, goog.net.xpc.CfgFields)));
clojure.browser.net.xhr_connection = function xhr_connection() {
  return new goog.net.XhrIo
};
clojure.browser.net.ICrossPageChannel = {};
clojure.browser.net.register_service = function() {
  var register_service = null;
  var register_service__3 = function(this$, service_name, fn) {
    if(function() {
      var and__3822__auto____13116 = this$;
      if(and__3822__auto____13116) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3
      }else {
        return and__3822__auto____13116
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$3(this$, service_name, fn)
    }else {
      var x__2413__auto____13117 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13118 = clojure.browser.net.register_service[goog.typeOf(x__2413__auto____13117)];
        if(or__3824__auto____13118) {
          return or__3824__auto____13118
        }else {
          var or__3824__auto____13119 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____13119) {
            return or__3824__auto____13119
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn)
    }
  };
  var register_service__4 = function(this$, service_name, fn, encode_json_QMARK_) {
    if(function() {
      var and__3822__auto____13120 = this$;
      if(and__3822__auto____13120) {
        return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4
      }else {
        return and__3822__auto____13120
      }
    }()) {
      return this$.clojure$browser$net$ICrossPageChannel$register_service$arity$4(this$, service_name, fn, encode_json_QMARK_)
    }else {
      var x__2413__auto____13121 = this$ == null ? null : this$;
      return function() {
        var or__3824__auto____13122 = clojure.browser.net.register_service[goog.typeOf(x__2413__auto____13121)];
        if(or__3824__auto____13122) {
          return or__3824__auto____13122
        }else {
          var or__3824__auto____13123 = clojure.browser.net.register_service["_"];
          if(or__3824__auto____13123) {
            return or__3824__auto____13123
          }else {
            throw cljs.core.missing_protocol.call(null, "ICrossPageChannel.register-service", this$);
          }
        }
      }().call(null, this$, service_name, fn, encode_json_QMARK_)
    }
  };
  register_service = function(this$, service_name, fn, encode_json_QMARK_) {
    switch(arguments.length) {
      case 3:
        return register_service__3.call(this, this$, service_name, fn);
      case 4:
        return register_service__4.call(this, this$, service_name, fn, encode_json_QMARK_)
    }
    throw"Invalid arity: " + arguments.length;
  };
  register_service.cljs$lang$arity$3 = register_service__3;
  register_service.cljs$lang$arity$4 = register_service__4;
  return register_service
}();
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$1 = function(this$) {
  return clojure.browser.net.connect.call(null, this$, null)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$2 = function(this$, on_connect_fn) {
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$3 = function(this$, on_connect_fn, config_iframe_fn) {
  return clojure.browser.net.connect.call(null, this$, on_connect_fn, config_iframe_fn, document.body)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$connect$arity$4 = function(this$, on_connect_fn, config_iframe_fn, iframe_parent) {
  this$.createPeerIframe(iframe_parent, config_iframe_fn);
  return this$.connect(on_connect_fn)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$transmit$arity$3 = function(this$, service_name, payload) {
  return this$.send(cljs.core.name.call(null, service_name), payload)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$IConnection$close$arity$1 = function(this$) {
  return this$.close(cljs.core.List.EMPTY)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$ = true;
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$3 = function(this$, service_name, fn) {
  return clojure.browser.net.register_service.call(null, this$, service_name, fn, false)
};
goog.net.xpc.CrossPageChannel.prototype.clojure$browser$net$ICrossPageChannel$register_service$arity$4 = function(this$, service_name, fn, encode_json_QMARK_) {
  return this$.registerService(cljs.core.name.call(null, service_name), fn, encode_json_QMARK_)
};
clojure.browser.net.xpc_connection = function() {
  var xpc_connection = null;
  var xpc_connection__0 = function() {
    var temp__3974__auto____13135 = (new goog.Uri(window.location.href)).getParameterValue("xpc");
    if(cljs.core.truth_(temp__3974__auto____13135)) {
      var config__13136 = temp__3974__auto____13135;
      return new goog.net.xpc.CrossPageChannel(goog.json.parse(config__13136))
    }else {
      return null
    }
  };
  var xpc_connection__1 = function(config) {
    return new goog.net.xpc.CrossPageChannel(cljs.core.reduce.call(null, function(sum, p__13137) {
      var vec__13138__13139 = p__13137;
      var k__13140 = cljs.core.nth.call(null, vec__13138__13139, 0, null);
      var v__13141 = cljs.core.nth.call(null, vec__13138__13139, 1, null);
      var temp__3971__auto____13142 = cljs.core._lookup.call(null, clojure.browser.net.xpc_config_fields, k__13140, null);
      if(cljs.core.truth_(temp__3971__auto____13142)) {
        var field__13143 = temp__3971__auto____13142;
        var G__13144__13145 = sum;
        G__13144__13145[field__13143] = v__13141;
        return G__13144__13145
      }else {
        return sum
      }
    }, {}, config))
  };
  xpc_connection = function(config) {
    switch(arguments.length) {
      case 0:
        return xpc_connection__0.call(this);
      case 1:
        return xpc_connection__1.call(this, config)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpc_connection.cljs$lang$arity$0 = xpc_connection__0;
  xpc_connection.cljs$lang$arity$1 = xpc_connection__1;
  return xpc_connection
}();
goog.provide("clojure.browser.repl");
goog.require("cljs.core");
goog.require("clojure.browser.event");
goog.require("clojure.browser.net");
clojure.browser.repl.xpc_connection = cljs.core.atom.call(null, null);
clojure.browser.repl.repl_print = function repl_print(data) {
  var temp__3971__auto____12995 = cljs.core.deref.call(null, clojure.browser.repl.xpc_connection);
  if(cljs.core.truth_(temp__3971__auto____12995)) {
    var conn__12996 = temp__3971__auto____12995;
    return clojure.browser.net.transmit.call(null, conn__12996, "\ufdd0'print", cljs.core.pr_str.call(null, data))
  }else {
    return null
  }
};
clojure.browser.repl.evaluate_javascript = function evaluate_javascript(conn, block) {
  var result__13002 = function() {
    try {
      return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value"], {"\ufdd0'status":"\ufdd0'success", "\ufdd0'value":[cljs.core.str(eval(block))].join("")})
    }catch(e13000) {
      if(cljs.core.instance_QMARK_.call(null, Error, e13000)) {
        var e__13001 = e13000;
        return cljs.core.ObjMap.fromObject(["\ufdd0'status", "\ufdd0'value", "\ufdd0'stacktrace"], {"\ufdd0'status":"\ufdd0'exception", "\ufdd0'value":cljs.core.pr_str.call(null, e__13001), "\ufdd0'stacktrace":cljs.core.truth_(e__13001.hasOwnProperty("stack")) ? e__13001.stack : "No stacktrace available."})
      }else {
        if("\ufdd0'else") {
          throw e13000;
        }else {
          return null
        }
      }
    }
  }();
  return cljs.core.pr_str.call(null, result__13002)
};
clojure.browser.repl.send_result = function send_result(connection, url, data) {
  return clojure.browser.net.transmit.call(null, connection, url, "POST", data, null, 0)
};
clojure.browser.repl.send_print = function() {
  var send_print = null;
  var send_print__2 = function(url, data) {
    return send_print.call(null, url, data, 0)
  };
  var send_print__3 = function(url, data, n) {
    var conn__13004 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, conn__13004, "\ufdd0'error", function(_) {
      if(n < 10) {
        return send_print.call(null, url, data, n + 1)
      }else {
        return console.log([cljs.core.str("Could not send "), cljs.core.str(data), cljs.core.str(" after "), cljs.core.str(n), cljs.core.str(" attempts.")].join(""))
      }
    });
    return clojure.browser.net.transmit.call(null, conn__13004, url, "POST", data, null, 0)
  };
  send_print = function(url, data, n) {
    switch(arguments.length) {
      case 2:
        return send_print__2.call(this, url, data);
      case 3:
        return send_print__3.call(this, url, data, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  send_print.cljs$lang$arity$2 = send_print__2;
  send_print.cljs$lang$arity$3 = send_print__3;
  return send_print
}();
clojure.browser.repl.order = cljs.core.atom.call(null, 0);
clojure.browser.repl.wrap_message = function wrap_message(t, data) {
  return cljs.core.pr_str.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'type", "\ufdd0'content", "\ufdd0'order"], {"\ufdd0'type":t, "\ufdd0'content":data, "\ufdd0'order":cljs.core.swap_BANG_.call(null, clojure.browser.repl.order, cljs.core.inc)}))
};
clojure.browser.repl.start_evaluator = function start_evaluator(url) {
  var temp__3971__auto____13008 = clojure.browser.net.xpc_connection.call(null);
  if(cljs.core.truth_(temp__3971__auto____13008)) {
    var repl_connection__13009 = temp__3971__auto____13008;
    var connection__13010 = clojure.browser.net.xhr_connection.call(null);
    clojure.browser.event.listen.call(null, connection__13010, "\ufdd0'success", function(e) {
      return clojure.browser.net.transmit.call(null, repl_connection__13009, "\ufdd0'evaluate-javascript", e.currentTarget.getResponseText(cljs.core.List.EMPTY))
    });
    clojure.browser.net.register_service.call(null, repl_connection__13009, "\ufdd0'send-result", function(data) {
      return clojure.browser.repl.send_result.call(null, connection__13010, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'result", data))
    });
    clojure.browser.net.register_service.call(null, repl_connection__13009, "\ufdd0'print", function(data) {
      return clojure.browser.repl.send_print.call(null, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'print", data))
    });
    clojure.browser.net.connect.call(null, repl_connection__13009, cljs.core.constantly.call(null, null));
    return setTimeout(function() {
      return clojure.browser.repl.send_result.call(null, connection__13010, url, clojure.browser.repl.wrap_message.call(null, "\ufdd0'ready", "ready"))
    }, 50)
  }else {
    return alert("No 'xpc' param provided to child iframe.")
  }
};
clojure.browser.repl.connect = function connect(repl_server_url) {
  var repl_connection__13012 = clojure.browser.net.xpc_connection.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'peer_uri"], {"\ufdd0'peer_uri":repl_server_url}));
  cljs.core.swap_BANG_.call(null, clojure.browser.repl.xpc_connection, cljs.core.constantly.call(null, repl_connection__13012));
  clojure.browser.net.register_service.call(null, repl_connection__13012, "\ufdd0'evaluate-javascript", function(js) {
    return clojure.browser.net.transmit.call(null, repl_connection__13012, "\ufdd0'send-result", clojure.browser.repl.evaluate_javascript.call(null, repl_connection__13012, js))
  });
  return clojure.browser.net.connect.call(null, repl_connection__13012, cljs.core.constantly.call(null, null), function(iframe) {
    return iframe.style.display = "none"
  })
};
goog.provide("shoreleave.brepl");
goog.require("cljs.core");
goog.require("clojure.browser.repl");
shoreleave.brepl.connect = function connect() {
  return clojure.browser.repl.connect.call(null, "http://localhost:9000/repl")
};
goog.provide("shoreleave.common");
goog.require("cljs.core");
goog.require("shoreleave.brepl");
shoreleave.common.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        var out__12955 = {};
        var G__12956__12957 = cljs.core.seq.call(null, x);
        if(G__12956__12957) {
          var G__12959__12961 = cljs.core.first.call(null, G__12956__12957);
          var vec__12960__12962 = G__12959__12961;
          var k__12963 = cljs.core.nth.call(null, vec__12960__12962, 0, null);
          var v__12964 = cljs.core.nth.call(null, vec__12960__12962, 1, null);
          var G__12956__12965 = G__12956__12957;
          var G__12959__12966 = G__12959__12961;
          var G__12956__12967 = G__12956__12965;
          while(true) {
            var vec__12968__12969 = G__12959__12966;
            var k__12970 = cljs.core.nth.call(null, vec__12968__12969, 0, null);
            var v__12971 = cljs.core.nth.call(null, vec__12968__12969, 1, null);
            var G__12956__12972 = G__12956__12967;
            out__12955[cljs.core.name.call(null, k__12970)] = clj__GT_js.call(null, v__12971);
            var temp__3974__auto____12973 = cljs.core.next.call(null, G__12956__12972);
            if(temp__3974__auto____12973) {
              var G__12956__12974 = temp__3974__auto____12973;
              var G__12975 = cljs.core.first.call(null, G__12956__12974);
              var G__12976 = G__12956__12974;
              G__12959__12966 = G__12975;
              G__12956__12967 = G__12976;
              continue
            }else {
            }
            break
          }
        }else {
        }
        return out__12955
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
shoreleave.common.args_map = function args_map(location_str) {
  var query_args_obj__12978 = new goog.Uri.QueryData(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray(["#", "?"]), cljs.core._lookup.call(null, location_str, 0, null)) ? cljs.core.subs.call(null, location_str, 1) : location_str);
  return cljs.core.zipmap.call(null, cljs.core.map.call(null, cljs.core.keyword, query_args_obj__12978.getKeys()), query_args_obj__12978.getValues())
};
shoreleave.common.query_args_map = function query_args_map() {
  return shoreleave.common.args_map.call(null, window.location.search)
};
shoreleave.common.hash_args_map = function hash_args_map() {
  return shoreleave.common.args_map.call(null, window.location.hash)
};
shoreleave.common.set_window_hash_args = function set_window_hash_args(args_map) {
  var hash_str__12991 = cljs.core.reduce.call(null, function(old_str, p__12986) {
    var vec__12987__12988 = p__12986;
    var k__12989 = cljs.core.nth.call(null, vec__12987__12988, 0, null);
    var v__12990 = cljs.core.nth.call(null, vec__12987__12988, 1, null);
    return[cljs.core.str(old_str), cljs.core.str(cljs.core.name.call(null, k__12989)), cljs.core.str("="), cljs.core.str(v__12990), cljs.core.str("&")].join("")
  }, "#", args_map);
  var clean_hash_str__12992 = cljs.core.subs.call(null, hash_str__12991, 0, cljs.core.count.call(null, hash_str__12991) - 1);
  window.location.hash = clean_hash_str__12992;
  return args_map
};
shoreleave.common.toggle_brepl = function() {
  var toggle_brepl = null;
  var toggle_brepl__0 = function() {
    return toggle_brepl.call(null, shoreleave.common.query_args_map.call(null))
  };
  var toggle_brepl__1 = function(query_map) {
    return toggle_brepl.call(null, query_map, "\ufdd0'brepl")
  };
  var toggle_brepl__2 = function(query_map, query_key) {
    if(cljs.core.truth_(query_map.call(null, query_key))) {
      return shoreleave.brepl.connect.call(null)
    }else {
      return null
    }
  };
  toggle_brepl = function(query_map, query_key) {
    switch(arguments.length) {
      case 0:
        return toggle_brepl__0.call(this);
      case 1:
        return toggle_brepl__1.call(this, query_map);
      case 2:
        return toggle_brepl__2.call(this, query_map, query_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  toggle_brepl.cljs$lang$arity$0 = toggle_brepl__0;
  toggle_brepl.cljs$lang$arity$1 = toggle_brepl__1;
  toggle_brepl.cljs$lang$arity$2 = toggle_brepl__2;
  return toggle_brepl
}();
goog.provide("shoreleave.remotes.jquery");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
shoreleave.remotes.jquery.ajax = function() {
  var ajax__delegate = function(url, kw_opts) {
    var kw_map__7449 = cljs.core.apply.call(null, cljs.core.hash_map, kw_opts);
    return jQuery.ajax(shoreleave.common.clj__GT_js.call(null, cljs.core.assoc.call(null, kw_map__7449, "\ufdd0'url", url)))
  };
  var ajax = function(url, var_args) {
    var kw_opts = null;
    if(goog.isDef(var_args)) {
      kw_opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return ajax__delegate.call(this, url, kw_opts)
  };
  ajax.cljs$lang$maxFixedArity = 1;
  ajax.cljs$lang$applyTo = function(arglist__7450) {
    var url = cljs.core.first(arglist__7450);
    var kw_opts = cljs.core.rest(arglist__7450);
    return ajax__delegate(url, kw_opts)
  };
  ajax.cljs$lang$arity$variadic = ajax__delegate;
  return ajax
}();
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var scrollEl = dom.getDocumentScrollElement();
  var inContainer;
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && (el.scrollWidth != el.clientWidth || el.scrollHeight != el.clientHeight) && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x);
      inContainer = inContainer || el != scrollEl
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  if(goog.userAgent.WEBKIT) {
    visibleRect.left += scrollX;
    visibleRect.top += scrollY
  }else {
    visibleRect.left = Math.max(visibleRect.left, scrollX);
    visibleRect.top = Math.max(visibleRect.top, scrollY)
  }
  if(!inContainer || goog.userAgent.WEBKIT) {
    visibleRect.right += scrollX;
    visibleRect.bottom += scrollY
  }
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return new goog.math.Size(element.offsetWidth, element.offsetHeight)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var originalWidth = element.offsetWidth;
  var originalHeight = element.offsetHeight;
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return new goog.math.Size(originalWidth, originalHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function() {
  var mockElement = goog.dom.createElement("div");
  mockElement.style.cssText = "visibility:hidden;overflow:scroll;" + "position:absolute;top:0;width:100px;height:100px";
  goog.dom.appendChild(goog.dom.getDocument().body, mockElement);
  var width = mockElement.offsetWidth - mockElement.clientWidth;
  goog.dom.removeNode(mockElement);
  return width
};
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.dom");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5E3
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  if(!document.documentElement.firstChild) {
    if(opt_errorCallback) {
      opt_errorCallback(payload)
    }
    return null
  }
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  if(!goog.global[goog.net.Jsonp.CALLBACKS]) {
    goog.global[goog.net.Jsonp.CALLBACKS] = {}
  }
  var script = goog.dom.createElement("script");
  var timeout = null;
  if(this.timeout_ > 0) {
    var error = goog.net.Jsonp.newErrorHandler_(id, script, payload, opt_errorCallback);
    timeout = goog.global.setTimeout(error, this.timeout_)
  }
  var uri = this.uri_.clone();
  if(payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri)
  }
  if(opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, script, opt_replyCallback, timeout);
    goog.global[goog.net.Jsonp.CALLBACKS][id] = reply;
    uri.setParameterValues(this.callbackParamName_, goog.net.Jsonp.CALLBACKS + "." + id)
  }
  goog.dom.setProperties(script, {"type":"text/javascript", "id":id, "charset":"UTF-8", "src":uri.toString()});
  goog.dom.appendChild(document.getElementsByTagName("head")[0], script);
  return{id_:id, timeout_:timeout}
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if(request && request.id_) {
    var scriptNode = goog.dom.getElement(request.id_);
    if(scriptNode && scriptNode.tagName == "SCRIPT" && typeof goog.global[goog.net.Jsonp.CALLBACKS][request.id_] == "function") {
      request.timeout_ && goog.global.clearTimeout(request.timeout_);
      goog.net.Jsonp.cleanup_(request.id_, scriptNode, false)
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, scriptNode, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, scriptNode, false);
    if(opt_errorCallback) {
      opt_errorCallback(payload)
    }
  }
};
goog.net.Jsonp.newReplyHandler_ = function(id, scriptNode, replyCallback, timeout) {
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    goog.net.Jsonp.cleanup_(id, scriptNode, true);
    replyCallback.apply(undefined, arguments)
  }
};
goog.net.Jsonp.cleanup_ = function(id, scriptNode, deleteReplyHandler) {
  goog.global.setTimeout(function() {
    goog.dom.removeNode(scriptNode)
  }, 0);
  if(goog.global[goog.net.Jsonp.CALLBACKS][id]) {
    if(deleteReplyHandler) {
      delete goog.global[goog.net.Jsonp.CALLBACKS][id]
    }else {
      goog.global[goog.net.Jsonp.CALLBACKS][id] = goog.nullFunction
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for(var name in payload) {
    if(!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name])
    }
  }
  return uri
};
goog.provide("shoreleave.remotes.jsonp");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("goog.net.Jsonp");
shoreleave.remotes.jsonp.jsonp = function() {
  var jsonp__delegate = function(uri, opts) {
    var map__7466__7467 = opts;
    var map__7466__7468 = cljs.core.seq_QMARK_.call(null, map__7466__7467) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7466__7467) : map__7466__7467;
    var timeout_ms__7469 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'timeout-ms", null);
    var callback_value__7470 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'callback-value", null);
    var callback_name__7471 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'callback-name", null);
    var content__7472 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'content", null);
    var on_timeout__7473 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'on-timeout", null);
    var on_success__7474 = cljs.core._lookup.call(null, map__7466__7468, "\ufdd0'on-success", null);
    var req__7475 = new goog.net.Jsonp(uri, callback_name__7471);
    var data__7476 = cljs.core.truth_(content__7472) ? shoreleave.common.clj__GT_js.call(null, content__7472) : null;
    var on_success__7477 = cljs.core.truth_(on_success__7474) ? function(p1__7451_SHARP_) {
      return on_success__7474.call(null, cljs.core.js__GT_clj.call(null, p1__7451_SHARP_, "\ufdd0'keywordize-keys", true))
    } : null;
    var on_timeout__7478 = cljs.core.truth_(on_timeout__7473) ? function(p1__7452_SHARP_) {
      return on_timeout__7473.call(null, cljs.core.js__GT_clj.call(null, p1__7452_SHARP_, "\ufdd0'keywordize-keys", true))
    } : null;
    if(cljs.core.truth_(timeout_ms__7469)) {
      req__7475.setRequestTimeout(timeout_ms__7469)
    }else {
    }
    return req__7475.send(data__7476, on_success__7477, on_timeout__7478, callback_value__7470)
  };
  var jsonp = function(uri, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return jsonp__delegate.call(this, uri, opts)
  };
  jsonp.cljs$lang$maxFixedArity = 1;
  jsonp.cljs$lang$applyTo = function(arglist__7479) {
    var uri = cljs.core.first(arglist__7479);
    var opts = cljs.core.rest(arglist__7479);
    return jsonp__delegate(uri, opts)
  };
  jsonp.cljs$lang$arity$variadic = jsonp__delegate;
  return jsonp
}();
goog.provide("goog.structs.Queue");
goog.require("goog.array");
goog.structs.Queue = function() {
  this.elements_ = []
};
goog.structs.Queue.prototype.head_ = 0;
goog.structs.Queue.prototype.tail_ = 0;
goog.structs.Queue.prototype.enqueue = function(element) {
  this.elements_[this.tail_++] = element
};
goog.structs.Queue.prototype.dequeue = function() {
  if(this.head_ == this.tail_) {
    return undefined
  }
  var result = this.elements_[this.head_];
  delete this.elements_[this.head_];
  this.head_++;
  return result
};
goog.structs.Queue.prototype.peek = function() {
  if(this.head_ == this.tail_) {
    return undefined
  }
  return this.elements_[this.head_]
};
goog.structs.Queue.prototype.getCount = function() {
  return this.tail_ - this.head_
};
goog.structs.Queue.prototype.isEmpty = function() {
  return this.tail_ - this.head_ == 0
};
goog.structs.Queue.prototype.clear = function() {
  this.elements_.length = 0;
  this.head_ = 0;
  this.tail_ = 0
};
goog.structs.Queue.prototype.contains = function(obj) {
  return goog.array.contains(this.elements_, obj)
};
goog.structs.Queue.prototype.remove = function(obj) {
  var index = goog.array.indexOf(this.elements_, obj);
  if(index < 0) {
    return false
  }
  if(index == this.head_) {
    this.dequeue()
  }else {
    goog.array.removeAt(this.elements_, index);
    this.tail_--
  }
  return true
};
goog.structs.Queue.prototype.getValues = function() {
  return this.elements_.slice(this.head_, this.tail_)
};
goog.provide("goog.structs.Pool");
goog.require("goog.Disposable");
goog.require("goog.structs.Queue");
goog.require("goog.structs.Set");
goog.structs.Pool = function(opt_minCount, opt_maxCount) {
  goog.Disposable.call(this);
  this.minCount_ = opt_minCount || 0;
  this.maxCount_ = opt_maxCount || 10;
  if(this.minCount_ > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.freeQueue_ = new goog.structs.Queue;
  this.inUseSet_ = new goog.structs.Set;
  this.adjustForMinMax();
  var magicProps = {canBeReused:0}
};
goog.inherits(goog.structs.Pool, goog.Disposable);
goog.structs.Pool.ERROR_MIN_MAX_ = "[goog.structs.Pool] Min can not be greater than max";
goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_ = "[goog.structs.Pool] Objects not released";
goog.structs.Pool.prototype.setMinimumCount = function(min) {
  if(min > this.maxCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.minCount_ = min;
  this.adjustForMinMax()
};
goog.structs.Pool.prototype.setMaximumCount = function(max) {
  if(max < this.minCount_) {
    throw Error(goog.structs.Pool.ERROR_MIN_MAX_);
  }
  this.maxCount_ = max;
  this.adjustForMinMax()
};
goog.structs.Pool.prototype.getObject = function() {
  var obj = this.removeFreeObject_();
  if(obj) {
    this.inUseSet_.add(obj)
  }
  return obj
};
goog.structs.Pool.prototype.releaseObject = function(obj) {
  if(this.inUseSet_.remove(obj)) {
    this.addFreeObject(obj);
    return true
  }
  return false
};
goog.structs.Pool.prototype.removeFreeObject_ = function() {
  var obj;
  while(this.getFreeCount() > 0) {
    obj = this.freeQueue_.dequeue();
    if(!this.objectCanBeReused(obj)) {
      this.adjustForMinMax()
    }else {
      break
    }
  }
  if(!obj && this.getCount() < this.maxCount_) {
    obj = this.createObject()
  }
  return obj
};
goog.structs.Pool.prototype.addFreeObject = function(obj) {
  this.inUseSet_.remove(obj);
  if(this.objectCanBeReused(obj) && this.getCount() < this.maxCount_) {
    this.freeQueue_.enqueue(obj)
  }else {
    this.disposeObject(obj)
  }
};
goog.structs.Pool.prototype.adjustForMinMax = function() {
  var freeQueue = this.freeQueue_;
  while(this.getCount() < this.minCount_) {
    freeQueue.enqueue(this.createObject())
  }
  while(this.getCount() > this.maxCount_ && this.getFreeCount() > 0) {
    this.disposeObject(freeQueue.dequeue())
  }
};
goog.structs.Pool.prototype.createObject = function() {
  return{}
};
goog.structs.Pool.prototype.disposeObject = function(obj) {
  if(typeof obj.dispose == "function") {
    obj.dispose()
  }else {
    for(var i in obj) {
      obj[i] = null
    }
  }
};
goog.structs.Pool.prototype.objectCanBeReused = function(obj) {
  if(typeof obj.canBeReused == "function") {
    return obj.canBeReused()
  }
  return true
};
goog.structs.Pool.prototype.contains = function(obj) {
  return this.freeQueue_.contains(obj) || this.inUseSet_.contains(obj)
};
goog.structs.Pool.prototype.getCount = function() {
  return this.freeQueue_.getCount() + this.inUseSet_.getCount()
};
goog.structs.Pool.prototype.getInUseCount = function() {
  return this.inUseSet_.getCount()
};
goog.structs.Pool.prototype.getFreeCount = function() {
  return this.freeQueue_.getCount()
};
goog.structs.Pool.prototype.isEmpty = function() {
  return this.freeQueue_.isEmpty() && this.inUseSet_.isEmpty()
};
goog.structs.Pool.prototype.disposeInternal = function() {
  goog.structs.Pool.superClass_.disposeInternal.call(this);
  if(this.getInUseCount() > 0) {
    throw Error(goog.structs.Pool.ERROR_DISPOSE_UNRELEASED_OBJS_);
  }
  delete this.inUseSet_;
  var freeQueue = this.freeQueue_;
  while(!freeQueue.isEmpty()) {
    this.disposeObject(freeQueue.dequeue())
  }
  delete this.freeQueue_
};
goog.provide("goog.structs.Heap");
goog.require("goog.array");
goog.require("goog.structs.Node");
goog.structs.Heap = function(opt_heap) {
  this.nodes_ = [];
  if(opt_heap) {
    this.insertAll(opt_heap)
  }
};
goog.structs.Heap.prototype.insert = function(key, value) {
  var node = new goog.structs.Node(key, value);
  var nodes = this.nodes_;
  nodes.push(node);
  this.moveUp_(nodes.length - 1)
};
goog.structs.Heap.prototype.insertAll = function(heap) {
  var keys, values;
  if(heap instanceof goog.structs.Heap) {
    keys = heap.getKeys();
    values = heap.getValues();
    if(heap.getCount() <= 0) {
      var nodes = this.nodes_;
      for(var i = 0;i < keys.length;i++) {
        nodes.push(new goog.structs.Node(keys[i], values[i]))
      }
      return
    }
  }else {
    keys = goog.object.getKeys(heap);
    values = goog.object.getValues(heap)
  }
  for(var i = 0;i < keys.length;i++) {
    this.insert(keys[i], values[i])
  }
};
goog.structs.Heap.prototype.remove = function() {
  var nodes = this.nodes_;
  var count = nodes.length;
  var rootNode = nodes[0];
  if(count <= 0) {
    return undefined
  }else {
    if(count == 1) {
      goog.array.clear(nodes)
    }else {
      nodes[0] = nodes.pop();
      this.moveDown_(0)
    }
  }
  return rootNode.getValue()
};
goog.structs.Heap.prototype.peek = function() {
  var nodes = this.nodes_;
  if(nodes.length == 0) {
    return undefined
  }
  return nodes[0].getValue()
};
goog.structs.Heap.prototype.peekKey = function() {
  return this.nodes_[0] && this.nodes_[0].getKey()
};
goog.structs.Heap.prototype.moveDown_ = function(index) {
  var nodes = this.nodes_;
  var count = nodes.length;
  var node = nodes[index];
  while(index < Math.floor(count / 2)) {
    var leftChildIndex = this.getLeftChildIndex_(index);
    var rightChildIndex = this.getRightChildIndex_(index);
    var smallerChildIndex = rightChildIndex < count && nodes[rightChildIndex].getKey() < nodes[leftChildIndex].getKey() ? rightChildIndex : leftChildIndex;
    if(nodes[smallerChildIndex].getKey() > node.getKey()) {
      break
    }
    nodes[index] = nodes[smallerChildIndex];
    index = smallerChildIndex
  }
  nodes[index] = node
};
goog.structs.Heap.prototype.moveUp_ = function(index) {
  var nodes = this.nodes_;
  var node = nodes[index];
  while(index > 0) {
    var parentIndex = this.getParentIndex_(index);
    if(nodes[parentIndex].getKey() > node.getKey()) {
      nodes[index] = nodes[parentIndex];
      index = parentIndex
    }else {
      break
    }
  }
  nodes[index] = node
};
goog.structs.Heap.prototype.getLeftChildIndex_ = function(index) {
  return index * 2 + 1
};
goog.structs.Heap.prototype.getRightChildIndex_ = function(index) {
  return index * 2 + 2
};
goog.structs.Heap.prototype.getParentIndex_ = function(index) {
  return Math.floor((index - 1) / 2)
};
goog.structs.Heap.prototype.getValues = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for(var i = 0;i < l;i++) {
    rv.push(nodes[i].getValue())
  }
  return rv
};
goog.structs.Heap.prototype.getKeys = function() {
  var nodes = this.nodes_;
  var rv = [];
  var l = nodes.length;
  for(var i = 0;i < l;i++) {
    rv.push(nodes[i].getKey())
  }
  return rv
};
goog.structs.Heap.prototype.containsValue = function(val) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getValue() == val
  })
};
goog.structs.Heap.prototype.containsKey = function(key) {
  return goog.array.some(this.nodes_, function(node) {
    return node.getKey() == key
  })
};
goog.structs.Heap.prototype.clone = function() {
  return new goog.structs.Heap(this)
};
goog.structs.Heap.prototype.getCount = function() {
  return this.nodes_.length
};
goog.structs.Heap.prototype.isEmpty = function() {
  return goog.array.isEmpty(this.nodes_)
};
goog.structs.Heap.prototype.clear = function() {
  goog.array.clear(this.nodes_)
};
goog.provide("goog.structs.PriorityQueue");
goog.require("goog.structs");
goog.require("goog.structs.Heap");
goog.structs.PriorityQueue = function() {
  goog.structs.Heap.call(this)
};
goog.inherits(goog.structs.PriorityQueue, goog.structs.Heap);
goog.structs.PriorityQueue.prototype.enqueue = function(priority, value) {
  this.insert(priority, value)
};
goog.structs.PriorityQueue.prototype.dequeue = function() {
  return this.remove()
};
goog.provide("goog.structs.PriorityPool");
goog.require("goog.structs.Pool");
goog.require("goog.structs.PriorityQueue");
goog.structs.PriorityPool = function(opt_minCount, opt_maxCount) {
  this.requestQueue_ = new goog.structs.PriorityQueue;
  goog.structs.Pool.call(this, opt_minCount, opt_maxCount)
};
goog.inherits(goog.structs.PriorityPool, goog.structs.Pool);
goog.structs.PriorityPool.DEFAULT_PRIORITY_ = 100;
goog.structs.PriorityPool.prototype.getObject = function(opt_callback, opt_priority) {
  if(!opt_callback) {
    return goog.structs.PriorityPool.superClass_.getObject.call(this)
  }
  var priority = opt_priority || goog.structs.PriorityPool.DEFAULT_PRIORITY_;
  this.requestQueue_.enqueue(priority, opt_callback);
  this.handleQueueRequests_();
  return undefined
};
goog.structs.PriorityPool.prototype.handleQueueRequests_ = function() {
  var requestQueue = this.requestQueue_;
  while(requestQueue.getCount() > 0) {
    var obj = this.getObject();
    if(!obj) {
      return
    }else {
      var requestCallback = requestQueue.dequeue();
      requestCallback.apply(this, [obj])
    }
  }
};
goog.structs.PriorityPool.prototype.addFreeObject = function(obj) {
  goog.structs.PriorityPool.superClass_.addFreeObject.call(this, obj);
  this.handleQueueRequests_()
};
goog.structs.PriorityPool.prototype.adjustForMinMax = function() {
  goog.structs.PriorityPool.superClass_.adjustForMinMax.call(this);
  this.handleQueueRequests_()
};
goog.structs.PriorityPool.prototype.disposeInternal = function() {
  goog.structs.PriorityPool.superClass_.disposeInternal.call(this);
  this.requestQueue_.clear();
  this.requestQueue_ = null
};
goog.provide("goog.net.XhrIoPool");
goog.require("goog.net.XhrIo");
goog.require("goog.structs");
goog.require("goog.structs.PriorityPool");
goog.net.XhrIoPool = function(opt_headers, opt_minCount, opt_maxCount) {
  goog.structs.PriorityPool.call(this, opt_minCount, opt_maxCount);
  this.headers_ = opt_headers
};
goog.inherits(goog.net.XhrIoPool, goog.structs.PriorityPool);
goog.net.XhrIoPool.prototype.createObject = function() {
  var xhrIo = new goog.net.XhrIo;
  var headers = this.headers_;
  if(headers) {
    goog.structs.forEach(headers, function(value, key) {
      xhrIo.headers.set(key, value)
    })
  }
  return xhrIo
};
goog.net.XhrIoPool.prototype.disposeObject = function(obj) {
  obj.dispose()
};
goog.net.XhrIoPool.prototype.objectCanBeReused = function(obj) {
  return!obj.isDisposed() && !obj.isActive()
};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.require("goog.object");
goog.require("goog.structs.SimplePool");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.KEY_POOL_INITIAL_COUNT = 0;
goog.events.EventHandler.KEY_POOL_MAX_COUNT = 100;
goog.events.EventHandler.keyPool_ = new goog.structs.SimplePool(goog.events.EventHandler.KEY_POOL_INITIAL_COUNT, goog.events.EventHandler.KEY_POOL_MAX_COUNT);
goog.events.EventHandler.keys_ = null;
goog.events.EventHandler.key_ = null;
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.recordListenerKey_(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.recordListenerKey_ = function(key) {
  if(this.keys_) {
    this.keys_[key] = true
  }else {
    if(this.key_) {
      this.keys_ = goog.events.EventHandler.keyPool_.getObject();
      this.keys_[this.key_] = true;
      this.key_ = null;
      this.keys_[key] = true
    }else {
      this.key_ = key
    }
  }
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(this.key_ || this.keys_) {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
      }
    }else {
      var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
      if(listener) {
        var key = listener.key;
        goog.events.unlistenByKey(key);
        if(this.keys_) {
          goog.object.remove(this.keys_, key)
        }else {
          if(this.key_ == key) {
            this.key_ = null
          }
        }
      }
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  if(this.keys_) {
    for(var key in this.keys_) {
      goog.events.unlistenByKey(key);
      delete this.keys_[key]
    }
    goog.events.EventHandler.keyPool_.releaseObject(this.keys_);
    this.keys_ = null
  }else {
    if(this.key_) {
      goog.events.unlistenByKey(this.key_)
    }
  }
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.net.XhrManager");
goog.provide("goog.net.XhrManager.Event");
goog.provide("goog.net.XhrManager.Request");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.net.EventType");
goog.require("goog.net.XhrIo");
goog.require("goog.net.XhrIoPool");
goog.require("goog.structs.Map");
goog.net.XhrManager = function(opt_maxRetries, opt_headers, opt_minCount, opt_maxCount, opt_timeoutInterval) {
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.timeoutInterval_ = goog.isDef(opt_timeoutInterval) ? Math.max(0, opt_timeoutInterval) : 0;
  this.xhrPool_ = new goog.net.XhrIoPool(opt_headers, opt_minCount, opt_maxCount);
  this.requests_ = new goog.structs.Map;
  this.eventHandler_ = new goog.events.EventHandler(this)
};
goog.inherits(goog.net.XhrManager, goog.events.EventTarget);
goog.net.XhrManager.ERROR_ID_IN_USE_ = "[goog.net.XhrManager] ID in use";
goog.net.XhrManager.XHR_EVENT_TYPES_ = [goog.net.EventType.READY, goog.net.EventType.COMPLETE, goog.net.EventType.SUCCESS, goog.net.EventType.ERROR, goog.net.EventType.ABORT, goog.net.EventType.TIMEOUT];
goog.net.XhrManager.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrManager.prototype.getOutstandingCount = function() {
  return this.requests_.getCount()
};
goog.net.XhrManager.prototype.send = function(id, url, opt_method, opt_content, opt_headers, opt_priority, opt_callback, opt_maxRetries) {
  var requests = this.requests_;
  if(requests.get(id)) {
    throw Error(goog.net.XhrManager.ERROR_ID_IN_USE_);
  }
  var request = new goog.net.XhrManager.Request(url, goog.bind(this.handleEvent_, this, id), opt_method, opt_content, opt_headers, opt_callback, goog.isDef(opt_maxRetries) ? opt_maxRetries : this.maxRetries_);
  this.requests_.set(id, request);
  var callback = goog.bind(this.handleAvailableXhr_, this, id);
  this.xhrPool_.getObject(callback, opt_priority);
  return request
};
goog.net.XhrManager.prototype.abort = function(id, opt_force) {
  var request = this.requests_.get(id);
  if(request) {
    var xhrIo = request.xhrIo;
    request.setAborted(true);
    if(opt_force) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      goog.events.listenOnce(xhrIo, goog.net.EventType.READY, function() {
        this.xhrPool_.releaseObject(xhrIo)
      }, false, this);
      this.requests_.remove(id)
    }
    if(xhrIo) {
      xhrIo.abort()
    }
  }
};
goog.net.XhrManager.prototype.handleAvailableXhr_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request && !request.xhrIo) {
    this.addXhrListener_(xhrIo, request.getXhrEventCallback());
    xhrIo.setTimeoutInterval(this.timeoutInterval_);
    request.xhrIo = request.xhrLite = xhrIo;
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.READY, this, id, xhrIo));
    this.retry_(id, xhrIo);
    if(request.getAborted()) {
      xhrIo.abort()
    }
  }else {
    this.xhrPool_.releaseObject(xhrIo)
  }
};
goog.net.XhrManager.prototype.handleEvent_ = function(id, e) {
  var xhrIo = e.target;
  switch(e.type) {
    case goog.net.EventType.READY:
      this.retry_(id, xhrIo);
      break;
    case goog.net.EventType.COMPLETE:
      return this.handleComplete_(id, xhrIo, e);
    case goog.net.EventType.SUCCESS:
      this.handleSuccess_(id, xhrIo);
      break;
    case goog.net.EventType.TIMEOUT:
    ;
    case goog.net.EventType.ERROR:
      this.handleError_(id, xhrIo);
      break;
    case goog.net.EventType.ABORT:
      this.handleAbort_(id, xhrIo);
      break
  }
  return null
};
goog.net.XhrManager.prototype.retry_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request && !request.getCompleted() && !request.hasReachedMaxRetries()) {
    request.increaseAttemptCount();
    xhrIo.send(request.getUrl(), request.getMethod(), request.getContent(), request.getHeaders())
  }else {
    if(request) {
      this.removeXhrListener_(xhrIo, request.getXhrEventCallback());
      this.requests_.remove(id)
    }
    this.xhrPool_.releaseObject(xhrIo)
  }
};
goog.net.XhrManager.prototype.handleComplete_ = function(id, xhrIo, e) {
  var request = this.requests_.get(id);
  if(xhrIo.getLastErrorCode() == goog.net.ErrorCode.ABORT || xhrIo.isSuccess() || request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.COMPLETE, this, id, xhrIo));
    if(request) {
      request.setCompleted(true);
      if(request.getCompleteCallback()) {
        return request.getCompleteCallback().call(xhrIo, e)
      }
    }
  }
  return null
};
goog.net.XhrManager.prototype.handleAbort_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ABORT, this, id, xhrIo))
};
goog.net.XhrManager.prototype.handleSuccess_ = function(id, xhrIo) {
  this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.SUCCESS, this, id, xhrIo))
};
goog.net.XhrManager.prototype.handleError_ = function(id, xhrIo) {
  var request = this.requests_.get(id);
  if(request.hasReachedMaxRetries()) {
    this.dispatchEvent(new goog.net.XhrManager.Event(goog.net.EventType.ERROR, this, id, xhrIo))
  }
};
goog.net.XhrManager.prototype.removeXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.unlisten(xhrIo, types, func)
};
goog.net.XhrManager.prototype.addXhrListener_ = function(xhrIo, func, opt_types) {
  var types = opt_types || goog.net.XhrManager.XHR_EVENT_TYPES_;
  this.eventHandler_.listen(xhrIo, types, func)
};
goog.net.XhrManager.prototype.disposeInternal = function() {
  goog.net.XhrManager.superClass_.disposeInternal.call(this);
  this.xhrPool_.dispose();
  this.xhrPool_ = null;
  this.eventHandler_.dispose();
  this.eventHandler_ = null;
  var requests = this.requests_;
  goog.structs.forEach(requests, function(value, key) {
    value.dispose()
  });
  requests.clear();
  this.requests_ = null
};
goog.net.XhrManager.Event = function(type, target, id, xhrIo) {
  goog.events.Event.call(this, type, target);
  this.id = id;
  this.xhrIo = xhrIo;
  this.xhrLite = xhrIo
};
goog.inherits(goog.net.XhrManager.Event, goog.events.Event);
goog.net.XhrManager.Event.prototype.disposeInternal = function() {
  goog.net.XhrManager.Event.superClass_.disposeInternal.call(this);
  delete this.id;
  this.xhrIo = null;
  this.xhrLite = null
};
goog.net.XhrManager.Request = function(url, xhrEventCallback, opt_method, opt_content, opt_headers, opt_callback, opt_maxRetries) {
  goog.Disposable.call(this);
  this.url_ = url;
  this.method_ = opt_method || "GET";
  this.content_ = opt_content;
  this.headers_ = opt_headers || null;
  this.maxRetries_ = goog.isDef(opt_maxRetries) ? opt_maxRetries : 1;
  this.attemptCount_ = 0;
  this.completed_ = false;
  this.aborted_ = false;
  this.xhrEventCallback_ = xhrEventCallback;
  this.completeCallback_ = opt_callback;
  this.xhrIo = null
};
goog.inherits(goog.net.XhrManager.Request, goog.Disposable);
goog.net.XhrManager.Request.prototype.getUrl = function() {
  return this.url_
};
goog.net.XhrManager.Request.prototype.getMethod = function() {
  return this.method_
};
goog.net.XhrManager.Request.prototype.getContent = function() {
  return this.content_
};
goog.net.XhrManager.Request.prototype.getHeaders = function() {
  return this.headers_
};
goog.net.XhrManager.Request.prototype.getMaxRetries = function() {
  return this.maxRetries_
};
goog.net.XhrManager.Request.prototype.getAttemptCount = function() {
  return this.attemptCount_
};
goog.net.XhrManager.Request.prototype.increaseAttemptCount = function() {
  this.attemptCount_++
};
goog.net.XhrManager.Request.prototype.hasReachedMaxRetries = function() {
  return this.attemptCount_ > this.maxRetries_
};
goog.net.XhrManager.Request.prototype.setCompleted = function(complete) {
  this.completed_ = complete
};
goog.net.XhrManager.Request.prototype.getCompleted = function() {
  return this.completed_
};
goog.net.XhrManager.Request.prototype.setAborted = function(aborted) {
  this.aborted_ = aborted
};
goog.net.XhrManager.Request.prototype.getAborted = function() {
  return this.aborted_
};
goog.net.XhrManager.Request.prototype.getXhrEventCallback = function() {
  return this.xhrEventCallback_
};
goog.net.XhrManager.Request.prototype.getCompleteCallback = function() {
  return this.completeCallback_
};
goog.net.XhrManager.Request.prototype.disposeInternal = function() {
  goog.net.XhrManager.Request.superClass_.disposeInternal.call(this);
  delete this.xhrEventCallback_;
  delete this.completeCallback_
};
goog.provide("goog.net.Cookies");
goog.provide("goog.net.cookies");
goog.require("goog.userAgent");
goog.net.Cookies = function(context) {
  this.document_ = context
};
goog.net.Cookies.MAX_COOKIE_LENGTH = 3950;
goog.net.Cookies.SPLIT_RE_ = /\s*;\s*/;
goog.net.Cookies.TEST_COOKIE_NAME_ = "COOKIES_TEST_";
goog.net.Cookies.prototype.isEnabled = function() {
  var isEnabled = this.isNavigatorCookieEnabled_();
  if(isEnabled && goog.userAgent.WEBKIT) {
    var cookieName = goog.net.Cookies.TEST_COOKIE_NAME_ + goog.now();
    goog.net.cookies.set(cookieName, "1");
    if(!this.get(cookieName)) {
      return false
    }
    this.remove(cookieName)
  }
  return isEnabled
};
goog.net.Cookies.prototype.isValidName = function(name) {
  return!/[;=\s]/.test(name)
};
goog.net.Cookies.prototype.isValidValue = function(value) {
  return!/[;\r\n]/.test(value)
};
goog.net.Cookies.prototype.set = function(name, value, opt_maxAge, opt_path, opt_domain, opt_secure) {
  if(!this.isValidName(name)) {
    throw Error('Invalid cookie name "' + name + '"');
  }
  if(!this.isValidValue(value)) {
    throw Error('Invalid cookie value "' + value + '"');
  }
  if(!goog.isDef(opt_maxAge)) {
    opt_maxAge = -1
  }
  var domainStr = opt_domain ? ";domain=" + opt_domain : "";
  var pathStr = opt_path ? ";path=" + opt_path : "";
  var secureStr = opt_secure ? ";secure" : "";
  var expiresStr;
  if(opt_maxAge < 0) {
    expiresStr = ""
  }else {
    if(opt_maxAge == 0) {
      var pastDate = new Date(1970, 1, 1);
      expiresStr = ";expires=" + pastDate.toUTCString()
    }else {
      var futureDate = new Date(goog.now() + opt_maxAge * 1E3);
      expiresStr = ";expires=" + futureDate.toUTCString()
    }
  }
  this.setCookie_(name + "=" + value + domainStr + pathStr + expiresStr + secureStr)
};
goog.net.Cookies.prototype.get = function(name, opt_default) {
  var nameEq = name + "=";
  var parts = this.getParts_();
  for(var i = 0, part;part = parts[i];i++) {
    if(part.indexOf(nameEq) == 0) {
      return part.substr(nameEq.length)
    }
  }
  return opt_default
};
goog.net.Cookies.prototype.remove = function(name, opt_path, opt_domain) {
  var rv = this.containsKey(name);
  this.set(name, "", 0, opt_path, opt_domain);
  return rv
};
goog.net.Cookies.prototype.getKeys = function() {
  return this.getKeyValues_().keys
};
goog.net.Cookies.prototype.getValues = function() {
  return this.getKeyValues_().values
};
goog.net.Cookies.prototype.isEmpty = function() {
  return!this.getCookie_()
};
goog.net.Cookies.prototype.getCount = function() {
  var cookie = this.getCookie_();
  if(!cookie) {
    return 0
  }
  return this.getParts_().length
};
goog.net.Cookies.prototype.containsKey = function(key) {
  return goog.isDef(this.get(key))
};
goog.net.Cookies.prototype.containsValue = function(value) {
  var values = this.getKeyValues_().values;
  for(var i = 0;i < values.length;i++) {
    if(values[i] == value) {
      return true
    }
  }
  return false
};
goog.net.Cookies.prototype.clear = function() {
  var keys = this.getKeyValues_().keys;
  for(var i = keys.length - 1;i >= 0;i--) {
    this.remove(keys[i])
  }
};
goog.net.Cookies.prototype.setCookie_ = function(s) {
  this.document_.cookie = s
};
goog.net.Cookies.prototype.getCookie_ = function() {
  return this.document_.cookie
};
goog.net.Cookies.prototype.getParts_ = function() {
  return(this.getCookie_() || "").split(goog.net.Cookies.SPLIT_RE_)
};
goog.net.Cookies.prototype.isNavigatorCookieEnabled_ = function() {
  return navigator.cookieEnabled
};
goog.net.Cookies.prototype.getKeyValues_ = function() {
  var parts = this.getParts_();
  var keys = [], values = [], index, part;
  for(var i = 0;part = parts[i];i++) {
    index = part.indexOf("=");
    if(index == -1) {
      keys.push("");
      values.push(part)
    }else {
      keys.push(part.substring(0, index));
      values.push(part.substring(index + 1))
    }
  }
  return{keys:keys, values:values}
};
goog.net.cookies = new goog.net.Cookies(document);
goog.net.cookies.MAX_COOKIE_LENGTH = goog.net.Cookies.MAX_COOKIE_LENGTH;
goog.provide("shoreleave.browser.cookies");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.net.Cookies");
goog.net.Cookies.prototype.cljs$core$IHash$ = true;
goog.net.Cookies.prototype.cljs$core$IHash$_hash$arity$1 = function(c) {
  return cljs.core._hash.call(null, cljs.core._persistent_BANG_.call(null, c))
};
goog.net.Cookies.prototype.cljs$core$ILookup$ = true;
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$2 = function(c, k) {
  return cljs.core._lookup.call(null, c, k, null)
};
goog.net.Cookies.prototype.cljs$core$ILookup$_lookup$arity$3 = function(c, k, not_found) {
  var v__12864 = c.get(cljs.core.name.call(null, k), not_found);
  if(cljs.core.string_QMARK_.call(null, v__12864)) {
    return goog.string.urlDecode(v__12864)
  }else {
    return v__12864
  }
};
goog.net.Cookies.prototype.cljs$core$IAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(c, k, v) {
  return cljs.core._assoc.call(null, cljs.core._persistent_BANG_.call(null, c), k, v)
};
goog.net.Cookies.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(c, k) {
  return c.containsKey(cljs.core.name.call(null, k))
};
goog.net.Cookies.prototype.cljs$core$IFn$ = true;
goog.net.Cookies.prototype.call = function() {
  var G__12889 = null;
  var G__12889__2 = function(this_sym12865, k) {
    var this_sym12865__12867 = this;
    var c__12868 = this_sym12865__12867;
    return cljs.core._lookup.call(null, c__12868, k)
  };
  var G__12889__3 = function(this_sym12866, k, not_found) {
    var this_sym12866__12869 = this;
    var c__12870 = this_sym12866__12869;
    return cljs.core._lookup.call(null, c__12870, k, not_found)
  };
  G__12889 = function(this_sym12866, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12889__2.call(this, this_sym12866, k);
      case 3:
        return G__12889__3.call(this, this_sym12866, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__12889
}();
goog.net.Cookies.prototype.apply = function(this_sym12862, args12863) {
  return this_sym12862.call.apply(this_sym12862, [this_sym12862].concat(args12863.slice()))
};
goog.net.Cookies.prototype.cljs$core$ITransientMap$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$4 = function() {
  var G__12890__delegate = function(c, k, opts) {
    var temp__3974__auto____12872 = function() {
      var and__3822__auto____12871 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____12871)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____12871
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____12872)) {
      var k__12873 = temp__3974__auto____12872;
      var map__12874__12875 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__12874__12876 = cljs.core.seq_QMARK_.call(null, map__12874__12875) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12874__12875) : map__12874__12875;
      var domain__12877 = cljs.core._lookup.call(null, map__12874__12876, "\ufdd0'domain", null);
      var path__12878 = cljs.core._lookup.call(null, map__12874__12876, "\ufdd0'path", null);
      return c.remove(k__12873, path__12878, domain__12877)
    }else {
      return null
    }
  };
  var G__12890 = function(c, k, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return G__12890__delegate.call(this, c, k, opts)
  };
  G__12890.cljs$lang$maxFixedArity = 2;
  G__12890.cljs$lang$applyTo = function(arglist__12891) {
    var c = cljs.core.first(arglist__12891);
    var k = cljs.core.first(cljs.core.next(arglist__12891));
    var opts = cljs.core.rest(cljs.core.next(arglist__12891));
    return G__12890__delegate(c, k, opts)
  };
  G__12890.cljs$lang$arity$variadic = G__12890__delegate;
  return G__12890
}();
goog.net.Cookies.prototype.cljs$core$ISeqable$ = true;
goog.net.Cookies.prototype.cljs$core$ISeqable$_seq$arity$1 = function(c) {
  return cljs.core.map.call(null, cljs.core.vector, c.getKeys(), c.getValues())
};
goog.net.Cookies.prototype.cljs$core$IPrintable$ = true;
goog.net.Cookies.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(c, opts) {
  return cljs.core._pr_seq.call(null, cljs.core._persistent_BANG_.call(null, c), opts)
};
goog.net.Cookies.prototype.cljs$core$ICounted$ = true;
goog.net.Cookies.prototype.cljs$core$ICounted$_count$arity$1 = function(c) {
  return c.getCount()
};
goog.net.Cookies.prototype.cljs$core$ITransientCollection$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(c) {
  return shoreleave.browser.cookies.as_hash_map.call(null, c)
};
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$ = true;
goog.net.Cookies.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$5 = function() {
  var G__12892__delegate = function(c, k, v, opts) {
    var temp__3974__auto____12880 = function() {
      var and__3822__auto____12879 = c.isValidName(cljs.core.name.call(null, k));
      if(cljs.core.truth_(and__3822__auto____12879)) {
        return cljs.core.name.call(null, k)
      }else {
        return and__3822__auto____12879
      }
    }();
    if(cljs.core.truth_(temp__3974__auto____12880)) {
      var k__12881 = temp__3974__auto____12880;
      var map__12882__12883 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
      var map__12882__12884 = cljs.core.seq_QMARK_.call(null, map__12882__12883) ? cljs.core.apply.call(null, cljs.core.hash_map, map__12882__12883) : map__12882__12883;
      var secure_QMARK___12885 = cljs.core._lookup.call(null, map__12882__12884, "\ufdd0'secure?", null);
      var domain__12886 = cljs.core._lookup.call(null, map__12882__12884, "\ufdd0'domain", null);
      var path__12887 = cljs.core._lookup.call(null, map__12882__12884, "\ufdd0'path", null);
      var max_age__12888 = cljs.core._lookup.call(null, map__12882__12884, "\ufdd0'max-age", null);
      return c.set(k__12881, v, max_age__12888, path__12887, domain__12886, secure_QMARK___12885)
    }else {
      return null
    }
  };
  var G__12892 = function(c, k, v, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return G__12892__delegate.call(this, c, k, v, opts)
  };
  G__12892.cljs$lang$maxFixedArity = 3;
  G__12892.cljs$lang$applyTo = function(arglist__12893) {
    var c = cljs.core.first(arglist__12893);
    var k = cljs.core.first(cljs.core.next(arglist__12893));
    var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__12893)));
    var opts = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__12893)));
    return G__12892__delegate(c, k, v, opts)
  };
  G__12892.cljs$lang$arity$variadic = G__12892__delegate;
  return G__12892
}();
shoreleave.browser.cookies.cookies = new goog.net.Cookies(document);
shoreleave.browser.cookies.as_hash_map = function() {
  var as_hash_map = null;
  var as_hash_map__0 = function() {
    return as_hash_map.call(null, shoreleave.browser.cookies.cookies)
  };
  var as_hash_map__1 = function(cks) {
    return cljs.core.zipmap.call(null, cks.getKeys(), cks.getValues())
  };
  as_hash_map = function(cks) {
    switch(arguments.length) {
      case 0:
        return as_hash_map__0.call(this);
      case 1:
        return as_hash_map__1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  as_hash_map.cljs$lang$arity$0 = as_hash_map__0;
  as_hash_map.cljs$lang$arity$1 = as_hash_map__1;
  return as_hash_map
}();
shoreleave.browser.cookies.cookies_enabled_QMARK_ = function() {
  var cookies_enabled_QMARK_ = null;
  var cookies_enabled_QMARK___0 = function() {
    return cookies_enabled_QMARK_.call(null, shoreleave.browser.cookies.cookies)
  };
  var cookies_enabled_QMARK___1 = function(cks) {
    return cks.isEnabled()
  };
  cookies_enabled_QMARK_ = function(cks) {
    switch(arguments.length) {
      case 0:
        return cookies_enabled_QMARK___0.call(this);
      case 1:
        return cookies_enabled_QMARK___1.call(this, cks)
    }
    throw"Invalid arity: " + arguments.length;
  };
  cookies_enabled_QMARK_.cljs$lang$arity$0 = cookies_enabled_QMARK___0;
  cookies_enabled_QMARK_.cljs$lang$arity$1 = cookies_enabled_QMARK___1;
  return cookies_enabled_QMARK_
}();
shoreleave.browser.cookies.empty_BANG_ = function empty_BANG_(cks) {
  return cks.clear()
};
goog.provide("shoreleave.remotes.common");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.browser.cookies");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.Uri.QueryData");
goog.require("clojure.string");
shoreleave.remotes.common.rand_id_str = function rand_id_str() {
  return goog.string.getRandomString()
};
shoreleave.remotes.common.__GT_url_method = function __GT_url_method(m) {
  return clojure.string.upper_case.call(null, cljs.core.name.call(null, m))
};
shoreleave.remotes.common.parse_route = function parse_route(route) {
  if(cljs.core.string_QMARK_.call(null, route)) {
    return cljs.core.PersistentVector.fromArray(["GET", route], true)
  }else {
    if(cljs.core.vector_QMARK_.call(null, route)) {
      var vec__7427__7428 = route;
      var m__7429 = cljs.core.nth.call(null, vec__7427__7428, 0, null);
      var u__7430 = cljs.core.nth.call(null, vec__7427__7428, 1, null);
      return cljs.core.PersistentVector.fromArray([shoreleave.remotes.common.__GT_url_method.call(null, m__7429), u__7430], true)
    }else {
      if("\ufdd0'else") {
        return cljs.core.PersistentVector.fromArray(["GET", route], true)
      }else {
        return null
      }
    }
  }
};
shoreleave.remotes.common.__GT_simple_callback = function __GT_simple_callback(callback) {
  if(cljs.core.truth_(callback)) {
    return function(req) {
      var data__7432 = req.getResponseText();
      return callback.call(null, data__7432)
    }
  }else {
    return null
  }
};
shoreleave.remotes.common.csrf_protected = function csrf_protected(content_map, method) {
  var temp__3971__auto____7437 = function() {
    var and__3822__auto____7436 = cljs.core._EQ_.call(null, method, "POST");
    if(and__3822__auto____7436) {
      return(new cljs.core.Keyword("\ufdd0'__anti-forgery-token")).call(null, shoreleave.browser.cookies.cookies)
    }else {
      return and__3822__auto____7436
    }
  }();
  if(cljs.core.truth_(temp__3971__auto____7437)) {
    var anti_forgery_token__7438 = temp__3971__auto____7437;
    return cljs.core.merge.call(null, content_map, cljs.core.ObjMap.fromObject(["\ufdd0'__anti-forgery-token"], {"\ufdd0'__anti-forgery-token":anti_forgery_token__7438}))
  }else {
    return content_map
  }
};
shoreleave.remotes.common.__GT_data_str = function __GT_data_str(d) {
  var cur__7441 = shoreleave.common.clj__GT_js.call(null, d);
  var query__7442 = goog.Uri.QueryData.createFromMap(new goog.structs.Map(cur__7441));
  return[cljs.core.str(query__7442)].join("")
};
goog.provide("shoreleave.remotes.request");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.net.XhrManager");
goog.require("clojure.browser.event");
goog.require("cljs.reader");
shoreleave.remotes.request.responders = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
shoreleave.remotes.request.add_responders = function add_responders(id, success, error, use_json) {
  if(cljs.core.truth_(function() {
    var or__3824__auto____232904 = success;
    if(cljs.core.truth_(or__3824__auto____232904)) {
      return or__3824__auto____232904
    }else {
      return error
    }
  }())) {
    return cljs.core.swap_BANG_.call(null, shoreleave.remotes.request.responders, cljs.core.assoc, id, cljs.core.ObjMap.fromObject(["\ufdd0'success", "\ufdd0'error", "\ufdd0'use-json"], {"\ufdd0'success":success, "\ufdd0'error":error, "\ufdd0'use-json":use_json}))
  }else {
    return null
  }
};
goog.net.XhrManager.prototype.clojure$browser$event$EventType$ = true;
goog.net.XhrManager.prototype.clojure$browser$event$EventType$event_types$arity$1 = function(this$) {
  return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, cljs.core.map.call(null, function(p__232905) {
    var vec__232906__232907 = p__232905;
    var k__232908 = cljs.core.nth.call(null, vec__232906__232907, 0, null);
    var v__232909 = cljs.core.nth.call(null, vec__232906__232907, 1, null);
    return cljs.core.PersistentVector.fromArray([cljs.core.keyword.call(null, k__232908.toLowerCase()), v__232909], true)
  }, cljs.core.js__GT_clj.call(null, goog.net.EventType)))
};
shoreleave.remotes.request._STAR_xhr_manager_STAR_ = new goog.net.XhrManager(null, null, null, 0, 5E3);
shoreleave.remotes.request.request = function() {
  var request__delegate = function(route, p__232910) {
    var map__232928__232929 = p__232910;
    var map__232928__232930 = cljs.core.seq_QMARK_.call(null, map__232928__232929) ? cljs.core.apply.call(null, cljs.core.hash_map, map__232928__232929) : map__232928__232929;
    var use_json__232931 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'use-json", false);
    var on_error__232932 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'on-error", null);
    var on_success__232933 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'on-success", null);
    var retries__232934 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'retries", 0);
    var priority__232935 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'priority", null);
    var headers__232936 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'headers", null);
    var content__232937 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'content", null);
    var id__232938 = cljs.core._lookup.call(null, map__232928__232930, "\ufdd0'id", shoreleave.remotes.common.rand_id_str.call(null));
    var vec__232939__232940 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__232941 = cljs.core.nth.call(null, vec__232939__232940, 0, null);
    var uri__232942 = cljs.core.nth.call(null, vec__232939__232940, 1, null);
    try {
      shoreleave.remotes.request.add_responders.call(null, id__232938, on_success__232933, on_error__232932, use_json__232931);
      return shoreleave.remotes.request._STAR_xhr_manager_STAR_.send(id__232938, uri__232942, method__232941, cljs.core.truth_(content__232937) ? shoreleave.remotes.common.__GT_data_str.call(null, shoreleave.remotes.common.csrf_protected.call(null, content__232937, method__232941)) : null, shoreleave.common.clj__GT_js.call(null, headers__232936), priority__232935, null, retries__232934)
    }catch(e232943) {
      if(cljs.core.instance_QMARK_.call(null, Error, e232943)) {
        var e__232944 = e232943;
        return null
      }else {
        if("\ufdd0'else") {
          throw e232943;
        }else {
          return null
        }
      }
    }
  };
  var request = function(route, var_args) {
    var p__232910 = null;
    if(goog.isDef(var_args)) {
      p__232910 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return request__delegate.call(this, route, p__232910)
  };
  request.cljs$lang$maxFixedArity = 1;
  request.cljs$lang$applyTo = function(arglist__232945) {
    var route = cljs.core.first(arglist__232945);
    var p__232910 = cljs.core.rest(arglist__232945);
    return request__delegate(route, p__232910)
  };
  request.cljs$lang$arity$variadic = request__delegate;
  return request
}();
shoreleave.remotes.request.response_success = function response_success(e) {
  var temp__3974__auto____232952 = cljs.core._lookup.call(null, cljs.core.deref.call(null, shoreleave.remotes.request.responders), (new cljs.core.Keyword("\ufdd0'id")).call(null, e), null);
  if(cljs.core.truth_(temp__3974__auto____232952)) {
    var map__232953__232954 = temp__3974__auto____232952;
    var map__232953__232955 = cljs.core.seq_QMARK_.call(null, map__232953__232954) ? cljs.core.apply.call(null, cljs.core.hash_map, map__232953__232954) : map__232953__232954;
    var success__232956 = cljs.core._lookup.call(null, map__232953__232955, "\ufdd0'success", null);
    var use_json__232957 = cljs.core._lookup.call(null, map__232953__232955, "\ufdd0'use-json", null);
    success__232956.call(null, e);
    return cljs.core.swap_BANG_.call(null, shoreleave.remotes.request.responders, cljs.core.dissoc, (new cljs.core.Keyword("\ufdd0'id")).call(null, e))
  }else {
    return null
  }
};
shoreleave.remotes.request.response_error = function response_error(e) {
  var temp__3974__auto____232963 = cljs.core._lookup.call(null, cljs.core.deref.call(null, shoreleave.remotes.request.responders), (new cljs.core.Keyword("\ufdd0'id")).call(null, e), null);
  if(cljs.core.truth_(temp__3974__auto____232963)) {
    var map__232964__232965 = temp__3974__auto____232963;
    var map__232964__232966 = cljs.core.seq_QMARK_.call(null, map__232964__232965) ? cljs.core.apply.call(null, cljs.core.hash_map, map__232964__232965) : map__232964__232965;
    var error__232967 = cljs.core._lookup.call(null, map__232964__232966, "\ufdd0'error", null);
    error__232967.call(null, e);
    return cljs.core.swap_BANG_.call(null, shoreleave.remotes.request.responders, cljs.core.dissoc, (new cljs.core.Keyword("\ufdd0'id")).call(null, e))
  }else {
    return null
  }
};
shoreleave.remotes.request.response_received = function response_received(f, e) {
  return f.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'id", "\ufdd0'body", "\ufdd0'status", "\ufdd0'event"], {"\ufdd0'id":e.id, "\ufdd0'body":cljs.core.truth_((new cljs.core.Keyword("\ufdd0'use-json")).call(null, cljs.core._lookup.call(null, cljs.core.deref.call(null, shoreleave.remotes.request.responders), e.id, null))) ? e.xhrIo.getResponseJson() : e.xhrIo.getResponse(), "\ufdd0'status":e.xhrIo.getStatus(), "\ufdd0'event":e}))
};
clojure.browser.event.listen.call(null, shoreleave.remotes.request._STAR_xhr_manager_STAR_, "success", cljs.core.partial.call(null, shoreleave.remotes.request.response_received, shoreleave.remotes.request.response_success));
clojure.browser.event.listen.call(null, shoreleave.remotes.request._STAR_xhr_manager_STAR_, "error", cljs.core.partial.call(null, shoreleave.remotes.request.response_received, shoreleave.remotes.request.response_error));
goog.provide("goog.dom.xml");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.dom.xml.MAX_XML_SIZE_KB = 2 * 1024;
goog.dom.xml.MAX_ELEMENT_DEPTH = 256;
goog.dom.xml.createDocument = function(opt_rootTagName, opt_namespaceUri) {
  if(opt_namespaceUri && !opt_rootTagName) {
    throw Error("Can't create document with namespace and no root tag");
  }
  if(document.implementation && document.implementation.createDocument) {
    return document.implementation.createDocument(opt_namespaceUri || "", opt_rootTagName || "", null)
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      if(doc) {
        if(opt_rootTagName) {
          doc.appendChild(doc.createNode(goog.dom.NodeType.ELEMENT, opt_rootTagName, opt_namespaceUri || ""))
        }
        return doc
      }
    }
  }
  throw Error("Your browser does not support creating new documents");
};
goog.dom.xml.loadXml = function(xml) {
  if(typeof DOMParser != "undefined") {
    return(new DOMParser).parseFromString(xml, "application/xml")
  }else {
    if(typeof ActiveXObject != "undefined") {
      var doc = goog.dom.xml.createMsXmlDocument_();
      doc.loadXML(xml);
      return doc
    }
  }
  throw Error("Your browser does not support loading xml documents");
};
goog.dom.xml.serialize = function(xml) {
  if(typeof XMLSerializer != "undefined") {
    return(new XMLSerializer).serializeToString(xml)
  }
  var text = xml.xml;
  if(text) {
    return text
  }
  throw Error("Your browser does not support serializing XML documents");
};
goog.dom.xml.selectSingleNode = function(node, path) {
  if(typeof node.selectSingleNode != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectSingleNode(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var result = doc.evaluate(path, node, resolver, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
      return result.singleNodeValue
    }
  }
  return null
};
goog.dom.xml.selectNodes = function(node, path) {
  if(typeof node.selectNodes != "undefined") {
    var doc = goog.dom.getOwnerDocument(node);
    if(typeof doc.setProperty != "undefined") {
      doc.setProperty("SelectionLanguage", "XPath")
    }
    return node.selectNodes(path)
  }else {
    if(document.implementation.hasFeature("XPath", "3.0")) {
      var doc = goog.dom.getOwnerDocument(node);
      var resolver = doc.createNSResolver(doc.documentElement);
      var nodes = doc.evaluate(path, node, resolver, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
      var results = [];
      var count = nodes.snapshotLength;
      for(var i = 0;i < count;i++) {
        results.push(nodes.snapshotItem(i))
      }
      return results
    }else {
      return[]
    }
  }
};
goog.dom.xml.createMsXmlDocument_ = function() {
  var doc = new ActiveXObject("MSXML2.DOMDocument");
  if(doc) {
    doc.resolveExternals = false;
    doc.validateOnParse = false;
    try {
      doc.setProperty("ProhibitDTD", true);
      doc.setProperty("MaxXMLSize", goog.dom.xml.MAX_XML_SIZE_KB);
      doc.setProperty("MaxElementDepth", goog.dom.xml.MAX_ELEMENT_DEPTH)
    }catch(e) {
    }
  }
  return doc
};
goog.provide("goog.dom.forms");
goog.require("goog.structs.Map");
goog.dom.forms.getFormDataMap = function(form) {
  var map = new goog.structs.Map;
  goog.dom.forms.getFormDataHelper_(form, map, goog.dom.forms.addFormDataToMap_);
  return map
};
goog.dom.forms.getFormDataString = function(form) {
  var sb = [];
  goog.dom.forms.getFormDataHelper_(form, sb, goog.dom.forms.addFormDataToStringBuffer_);
  return sb.join("&")
};
goog.dom.forms.getFormDataHelper_ = function(form, result, fnAppend) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(el.disabled || el.tagName.toLowerCase() == "fieldset") {
      continue
    }
    var name = el.name;
    var type = el.type.toLowerCase();
    switch(type) {
      case "file":
      ;
      case "submit":
      ;
      case "reset":
      ;
      case "button":
        break;
      case "select-multiple":
        var values = goog.dom.forms.getValue(el);
        if(values != null) {
          for(var value, j = 0;value = values[j];j++) {
            fnAppend(result, name, value)
          }
        }
        break;
      default:
        var value = goog.dom.forms.getValue(el);
        if(value != null) {
          fnAppend(result, name, value)
        }
    }
  }
  var inputs = form.getElementsByTagName("input");
  for(var input, i = 0;input = inputs[i];i++) {
    if(input.form == form && input.type.toLowerCase() == "image") {
      name = input.name;
      fnAppend(result, name, input.value);
      fnAppend(result, name + ".x", "0");
      fnAppend(result, name + ".y", "0")
    }
  }
};
goog.dom.forms.addFormDataToMap_ = function(map, name, value) {
  var array = map.get(name);
  if(!array) {
    array = [];
    map.set(name, array)
  }
  array.push(value)
};
goog.dom.forms.addFormDataToStringBuffer_ = function(sb, name, value) {
  sb.push(encodeURIComponent(name) + "=" + encodeURIComponent(value))
};
goog.dom.forms.hasFileInput = function(form) {
  var els = form.elements;
  for(var el, i = 0;el = els[i];i++) {
    if(!el.disabled && el.type && el.type.toLowerCase() == "file") {
      return true
    }
  }
  return false
};
goog.dom.forms.setDisabled = function(el, disabled) {
  if(el.tagName == "FORM") {
    var els = el.elements;
    for(var i = 0;el = els[i];i++) {
      goog.dom.forms.setDisabled(el, disabled)
    }
  }else {
    if(disabled == true) {
      el.blur()
    }
    el.disabled = disabled
  }
};
goog.dom.forms.focusAndSelect = function(el) {
  el.focus();
  if(el.select) {
    el.select()
  }
};
goog.dom.forms.hasValue = function(el) {
  var value = goog.dom.forms.getValue(el);
  return!!value
};
goog.dom.forms.hasValueByName = function(form, name) {
  var value = goog.dom.forms.getValueByName(form, name);
  return!!value
};
goog.dom.forms.getValue = function(el) {
  var type = el.type;
  if(!goog.isDef(type)) {
    return null
  }
  switch(type.toLowerCase()) {
    case "checkbox":
    ;
    case "radio":
      return goog.dom.forms.getInputChecked_(el);
    case "select-one":
      return goog.dom.forms.getSelectSingle_(el);
    case "select-multiple":
      return goog.dom.forms.getSelectMultiple_(el);
    default:
      return goog.isDef(el.value) ? el.value : null
  }
};
goog.dom.$F = goog.dom.forms.getValue;
goog.dom.forms.getValueByName = function(form, name) {
  var els = form.elements[name];
  if(els.type) {
    return goog.dom.forms.getValue(els)
  }else {
    for(var i = 0;i < els.length;i++) {
      var val = goog.dom.forms.getValue(els[i]);
      if(val) {
        return val
      }
    }
    return null
  }
};
goog.dom.forms.getInputChecked_ = function(el) {
  return el.checked ? el.value : null
};
goog.dom.forms.getSelectSingle_ = function(el) {
  var selectedIndex = el.selectedIndex;
  return selectedIndex >= 0 ? el.options[selectedIndex].value : null
};
goog.dom.forms.getSelectMultiple_ = function(el) {
  var values = [];
  for(var option, i = 0;option = el.options[i];i++) {
    if(option.selected) {
      values.push(option.value)
    }
  }
  return values.length ? values : null
};
goog.dom.forms.setValue = function(el, opt_value) {
  var type = el.type;
  if(goog.isDef(type)) {
    switch(type.toLowerCase()) {
      case "checkbox":
      ;
      case "radio":
        goog.dom.forms.setInputChecked_(el, opt_value);
        break;
      case "select-one":
        goog.dom.forms.setSelectSingle_(el, opt_value);
        break;
      case "select-multiple":
        goog.dom.forms.setSelectMultiple_(el, opt_value);
        break;
      default:
        el.value = goog.isDefAndNotNull(opt_value) ? opt_value : ""
    }
  }
};
goog.dom.forms.setInputChecked_ = function(el, opt_value) {
  el.checked = opt_value ? "checked" : null
};
goog.dom.forms.setSelectSingle_ = function(el, opt_value) {
  el.selectedIndex = -1;
  if(goog.isString(opt_value)) {
    for(var option, i = 0;option = el.options[i];i++) {
      if(option.value == opt_value) {
        option.selected = true;
        break
      }
    }
  }
};
goog.dom.forms.setSelectMultiple_ = function(el, opt_value) {
  if(goog.isString(opt_value)) {
    opt_value = [opt_value]
  }
  for(var option, i = 0;option = el.options[i];i++) {
    option.selected = false;
    if(opt_value) {
      for(var value, j = 0;value = opt_value[j];j++) {
        if(option.value == value) {
          option.selected = true
        }
      }
    }
  }
};
goog.provide("domina.support");
goog.require("cljs.core");
goog.require("goog.events");
goog.require("goog.dom");
var div__12860 = document.createElement("div");
var test_html__12861 = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
div__12860.innerHTML = test_html__12861;
domina.support.leading_whitespace_QMARK_ = cljs.core._EQ_.call(null, div__12860.firstChild.nodeType, 3);
domina.support.extraneous_tbody_QMARK_ = cljs.core._EQ_.call(null, div__12860.getElementsByTagName("tbody").length, 0);
domina.support.unscoped_html_elements_QMARK_ = cljs.core._EQ_.call(null, div__12860.getElementsByTagName("link").length, 0);
goog.provide("domina");
goog.require("cljs.core");
goog.require("domina.support");
goog.require("goog.dom.classes");
goog.require("goog.events");
goog.require("goog.dom.xml");
goog.require("goog.dom.forms");
goog.require("goog.dom");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("goog.style");
goog.require("cljs.core");
domina.re_html = /<|&#?\w+;/;
domina.re_leading_whitespace = /^\s+/;
domina.re_xhtml_tag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/i;
domina.re_tag_name = /<([\w:]+)/;
domina.re_no_inner_html = /<(?:script|style)/i;
domina.re_tbody = /<tbody/i;
var opt_wrapper__12453 = cljs.core.PersistentVector.fromArray([1, "<select multiple='multiple'>", "</select>"], true);
var table_section_wrapper__12454 = cljs.core.PersistentVector.fromArray([1, "<table>", "</table>"], true);
var cell_wrapper__12455 = cljs.core.PersistentVector.fromArray([3, "<table><tbody><tr>", "</tr></tbody></table>"], true);
domina.wrap_map = cljs.core.ObjMap.fromObject(["col", "\ufdd0'default", "tfoot", "caption", "optgroup", "legend", "area", "td", "thead", "th", "option", "tbody", "tr", "colgroup"], {"col":cljs.core.PersistentVector.fromArray([2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"], true), "\ufdd0'default":cljs.core.PersistentVector.fromArray([0, "", ""], true), "tfoot":table_section_wrapper__12454, "caption":table_section_wrapper__12454, "optgroup":opt_wrapper__12453, "legend":cljs.core.PersistentVector.fromArray([1, 
"<fieldset>", "</fieldset>"], true), "area":cljs.core.PersistentVector.fromArray([1, "<map>", "</map>"], true), "td":cell_wrapper__12455, "thead":table_section_wrapper__12454, "th":cell_wrapper__12455, "option":opt_wrapper__12453, "tbody":table_section_wrapper__12454, "tr":cljs.core.PersistentVector.fromArray([2, "<table><tbody>", "</tbody></table>"], true), "colgroup":table_section_wrapper__12454});
domina.remove_extraneous_tbody_BANG_ = function remove_extraneous_tbody_BANG_(div, html) {
  var no_tbody_QMARK___12468 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_tbody, html));
  var tbody__12472 = function() {
    var and__3822__auto____12469 = cljs.core._EQ_.call(null, domina.tag_name, "table");
    if(and__3822__auto____12469) {
      return no_tbody_QMARK___12468
    }else {
      return and__3822__auto____12469
    }
  }() ? function() {
    var and__3822__auto____12470 = div.firstChild;
    if(cljs.core.truth_(and__3822__auto____12470)) {
      return div.firstChild.childNodes
    }else {
      return and__3822__auto____12470
    }
  }() : function() {
    var and__3822__auto____12471 = cljs.core._EQ_.call(null, domina.start_wrap, "<table>");
    if(and__3822__auto____12471) {
      return no_tbody_QMARK___12468
    }else {
      return and__3822__auto____12471
    }
  }() ? divchildNodes : cljs.core.PersistentVector.EMPTY;
  var G__12473__12474 = cljs.core.seq.call(null, tbody__12472);
  if(G__12473__12474) {
    var child__12475 = cljs.core.first.call(null, G__12473__12474);
    var G__12473__12476 = G__12473__12474;
    while(true) {
      if(function() {
        var and__3822__auto____12477 = cljs.core._EQ_.call(null, child__12475.nodeName, "tbody");
        if(and__3822__auto____12477) {
          return cljs.core._EQ_.call(null, child__12475.childNodes.length, 0)
        }else {
          return and__3822__auto____12477
        }
      }()) {
        child__12475.parentNode.removeChild(child__12475)
      }else {
      }
      var temp__3974__auto____12478 = cljs.core.next.call(null, G__12473__12476);
      if(temp__3974__auto____12478) {
        var G__12473__12479 = temp__3974__auto____12478;
        var G__12480 = cljs.core.first.call(null, G__12473__12479);
        var G__12481 = G__12473__12479;
        child__12475 = G__12480;
        G__12473__12476 = G__12481;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
domina.restore_leading_whitespace_BANG_ = function restore_leading_whitespace_BANG_(div, html) {
  return div.insertBefore(document.createTextNode(cljs.core.first.call(null, cljs.core.re_find.call(null, domina.re_leading_whitespace, html))), div.firstChild)
};
domina.html_to_dom = function html_to_dom(html) {
  var html__12495 = clojure.string.replace.call(null, html, domina.re_xhtml_tag, "<$1></$2>");
  var tag_name__12496 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html__12495)))].join("").toLowerCase();
  var vec__12494__12497 = cljs.core._lookup.call(null, domina.wrap_map, tag_name__12496, (new cljs.core.Keyword("\ufdd0'default")).call(null, domina.wrap_map));
  var depth__12498 = cljs.core.nth.call(null, vec__12494__12497, 0, null);
  var start_wrap__12499 = cljs.core.nth.call(null, vec__12494__12497, 1, null);
  var end_wrap__12500 = cljs.core.nth.call(null, vec__12494__12497, 2, null);
  var div__12504 = function() {
    var wrapper__12502 = function() {
      var div__12501 = document.createElement("div");
      div__12501.innerHTML = [cljs.core.str(start_wrap__12499), cljs.core.str(html__12495), cljs.core.str(end_wrap__12500)].join("");
      return div__12501
    }();
    var level__12503 = depth__12498;
    while(true) {
      if(level__12503 > 0) {
        var G__12506 = wrapper__12502.lastChild;
        var G__12507 = level__12503 - 1;
        wrapper__12502 = G__12506;
        level__12503 = G__12507;
        continue
      }else {
        return wrapper__12502
      }
      break
    }
  }();
  if(cljs.core.truth_(domina.support.extraneous_tbody_QMARK_)) {
    domina.remove_extraneous_tbody_BANG_.call(null, div__12504, html__12495)
  }else {
  }
  if(cljs.core.truth_(function() {
    var and__3822__auto____12505 = cljs.core.not.call(null, domina.support.leading_whitespace_QMARK_);
    if(and__3822__auto____12505) {
      return cljs.core.re_find.call(null, domina.re_leading_whitespace, html__12495)
    }else {
      return and__3822__auto____12505
    }
  }())) {
    domina.restore_leading_whitespace_BANG_.call(null, div__12504, html__12495)
  }else {
  }
  return div__12504.childNodes
};
domina.string_to_dom = function string_to_dom(s) {
  if(cljs.core.truth_(cljs.core.re_find.call(null, domina.re_html, s))) {
    return domina.html_to_dom.call(null, s)
  }else {
    return document.createTextNode(s)
  }
};
domina.DomContent = {};
domina.nodes = function nodes(content) {
  if(function() {
    var and__3822__auto____12512 = content;
    if(and__3822__auto____12512) {
      return content.domina$DomContent$nodes$arity$1
    }else {
      return and__3822__auto____12512
    }
  }()) {
    return content.domina$DomContent$nodes$arity$1(content)
  }else {
    var x__2413__auto____12513 = content == null ? null : content;
    return function() {
      var or__3824__auto____12514 = domina.nodes[goog.typeOf(x__2413__auto____12513)];
      if(or__3824__auto____12514) {
        return or__3824__auto____12514
      }else {
        var or__3824__auto____12515 = domina.nodes["_"];
        if(or__3824__auto____12515) {
          return or__3824__auto____12515
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.nodes", content);
        }
      }
    }().call(null, content)
  }
};
domina.single_node = function single_node(nodeseq) {
  if(function() {
    var and__3822__auto____12520 = nodeseq;
    if(and__3822__auto____12520) {
      return nodeseq.domina$DomContent$single_node$arity$1
    }else {
      return and__3822__auto____12520
    }
  }()) {
    return nodeseq.domina$DomContent$single_node$arity$1(nodeseq)
  }else {
    var x__2413__auto____12521 = nodeseq == null ? null : nodeseq;
    return function() {
      var or__3824__auto____12522 = domina.single_node[goog.typeOf(x__2413__auto____12521)];
      if(or__3824__auto____12522) {
        return or__3824__auto____12522
      }else {
        var or__3824__auto____12523 = domina.single_node["_"];
        if(or__3824__auto____12523) {
          return or__3824__auto____12523
        }else {
          throw cljs.core.missing_protocol.call(null, "DomContent.single-node", nodeseq);
        }
      }
    }().call(null, nodeseq)
  }
};
domina._STAR_debug_STAR_ = true;
domina.log_debug = function() {
  var log_debug__delegate = function(mesg) {
    if(cljs.core.truth_(function() {
      var and__3822__auto____12525 = domina._STAR_debug_STAR_;
      if(cljs.core.truth_(and__3822__auto____12525)) {
        return!cljs.core._EQ_.call(null, window.console, undefined)
      }else {
        return and__3822__auto____12525
      }
    }())) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log_debug = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log_debug__delegate.call(this, mesg)
  };
  log_debug.cljs$lang$maxFixedArity = 0;
  log_debug.cljs$lang$applyTo = function(arglist__12526) {
    var mesg = cljs.core.seq(arglist__12526);
    return log_debug__delegate(mesg)
  };
  log_debug.cljs$lang$arity$variadic = log_debug__delegate;
  return log_debug
}();
domina.log = function() {
  var log__delegate = function(mesg) {
    if(cljs.core.truth_(window.console)) {
      return console.log(cljs.core.apply.call(null, cljs.core.str, mesg))
    }else {
      return null
    }
  };
  var log = function(var_args) {
    var mesg = null;
    if(goog.isDef(var_args)) {
      mesg = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return log__delegate.call(this, mesg)
  };
  log.cljs$lang$maxFixedArity = 0;
  log.cljs$lang$applyTo = function(arglist__12527) {
    var mesg = cljs.core.seq(arglist__12527);
    return log__delegate(mesg)
  };
  log.cljs$lang$arity$variadic = log__delegate;
  return log
}();
domina.by_id = function by_id(id) {
  return goog.dom.getElement(cljs.core.name.call(null, id))
};
domina.by_class = function by_class(class_name) {
  if(void 0 === domina.t12535) {
    domina.t12535 = function(class_name, by_class, meta12536) {
      this.class_name = class_name;
      this.by_class = by_class;
      this.meta12536 = meta12536;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    domina.t12535.cljs$lang$type = true;
    domina.t12535.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
      return cljs.core.list.call(null, "domina/t12535")
    };
    domina.t12535.prototype.domina$DomContent$ = true;
    domina.t12535.prototype.domina$DomContent$nodes$arity$1 = function(_) {
      var this__12538 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementsByClass(cljs.core.name.call(null, this__12538.class_name)))
    };
    domina.t12535.prototype.domina$DomContent$single_node$arity$1 = function(_) {
      var this__12539 = this;
      return domina.normalize_seq.call(null, goog.dom.getElementByClass(cljs.core.name.call(null, this__12539.class_name)))
    };
    domina.t12535.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12537) {
      var this__12540 = this;
      return this__12540.meta12536
    };
    domina.t12535.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12537, meta12536) {
      var this__12541 = this;
      return new domina.t12535(this__12541.class_name, this__12541.by_class, meta12536)
    };
    domina.t12535
  }else {
  }
  return new domina.t12535(class_name, by_class, null)
};
domina.children = function children(content) {
  return cljs.core.doall.call(null, cljs.core.mapcat.call(null, goog.dom.getChildren, domina.nodes.call(null, content)))
};
domina.clone = function clone(content) {
  return cljs.core.map.call(null, function(p1__12542_SHARP_) {
    return p1__12542_SHARP_.cloneNode(true)
  }, domina.nodes.call(null, content))
};
domina.append_BANG_ = function append_BANG_(parent_content, child_content) {
  domina.apply_with_cloning.call(null, goog.dom.appendChild, parent_content, child_content);
  return parent_content
};
domina.insert_BANG_ = function insert_BANG_(parent_content, child_content, idx) {
  domina.apply_with_cloning.call(null, function(p1__12543_SHARP_, p2__12544_SHARP_) {
    return goog.dom.insertChildAt(p1__12543_SHARP_, p2__12544_SHARP_, idx)
  }, parent_content, child_content);
  return parent_content
};
domina.prepend_BANG_ = function prepend_BANG_(parent_content, child_content) {
  domina.insert_BANG_.call(null, parent_content, child_content, 0);
  return parent_content
};
domina.insert_before_BANG_ = function insert_before_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12546_SHARP_, p2__12545_SHARP_) {
    return goog.dom.insertSiblingBefore(p2__12545_SHARP_, p1__12546_SHARP_)
  }, content, new_content);
  return content
};
domina.insert_after_BANG_ = function insert_after_BANG_(content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12548_SHARP_, p2__12547_SHARP_) {
    return goog.dom.insertSiblingAfter(p2__12547_SHARP_, p1__12548_SHARP_)
  }, content, new_content);
  return content
};
domina.swap_content_BANG_ = function swap_content_BANG_(old_content, new_content) {
  domina.apply_with_cloning.call(null, function(p1__12550_SHARP_, p2__12549_SHARP_) {
    return goog.dom.replaceNode(p2__12549_SHARP_, p1__12550_SHARP_)
  }, old_content, new_content);
  return old_content
};
domina.detach_BANG_ = function detach_BANG_(content) {
  return cljs.core.doall.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_BANG_ = function destroy_BANG_(content) {
  return cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeNode, domina.nodes.call(null, content)))
};
domina.destroy_children_BANG_ = function destroy_children_BANG_(content) {
  cljs.core.dorun.call(null, cljs.core.map.call(null, goog.dom.removeChildren, domina.nodes.call(null, content)));
  return content
};
domina.style = function style(content, name) {
  var s__12552 = goog.style.getStyle(domina.single_node.call(null, content), cljs.core.name.call(null, name));
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, s__12552))) {
    return null
  }else {
    return s__12552
  }
};
domina.attr = function attr(content, name) {
  return domina.single_node.call(null, content).getAttribute(cljs.core.name.call(null, name))
};
domina.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(content, name, value) {
    var G__12559__12560 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12559__12560) {
      var n__12561 = cljs.core.first.call(null, G__12559__12560);
      var G__12559__12562 = G__12559__12560;
      while(true) {
        goog.style.setStyle(n__12561, cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12563 = cljs.core.next.call(null, G__12559__12562);
        if(temp__3974__auto____12563) {
          var G__12559__12564 = temp__3974__auto____12563;
          var G__12565 = cljs.core.first.call(null, G__12559__12564);
          var G__12566 = G__12559__12564;
          n__12561 = G__12565;
          G__12559__12562 = G__12566;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_style_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_style_BANG___delegate.call(this, content, name, value)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 2;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__12567) {
    var content = cljs.core.first(arglist__12567);
    var name = cljs.core.first(cljs.core.next(arglist__12567));
    var value = cljs.core.rest(cljs.core.next(arglist__12567));
    return set_style_BANG___delegate(content, name, value)
  };
  set_style_BANG_.cljs$lang$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
domina.set_attr_BANG_ = function() {
  var set_attr_BANG___delegate = function(content, name, value) {
    var G__12574__12575 = cljs.core.seq.call(null, domina.nodes.call(null, content));
    if(G__12574__12575) {
      var n__12576 = cljs.core.first.call(null, G__12574__12575);
      var G__12574__12577 = G__12574__12575;
      while(true) {
        n__12576.setAttribute(cljs.core.name.call(null, name), cljs.core.apply.call(null, cljs.core.str, value));
        var temp__3974__auto____12578 = cljs.core.next.call(null, G__12574__12577);
        if(temp__3974__auto____12578) {
          var G__12574__12579 = temp__3974__auto____12578;
          var G__12580 = cljs.core.first.call(null, G__12574__12579);
          var G__12581 = G__12574__12579;
          n__12576 = G__12580;
          G__12574__12577 = G__12581;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return content
  };
  var set_attr_BANG_ = function(content, name, var_args) {
    var value = null;
    if(goog.isDef(var_args)) {
      value = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return set_attr_BANG___delegate.call(this, content, name, value)
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 2;
  set_attr_BANG_.cljs$lang$applyTo = function(arglist__12582) {
    var content = cljs.core.first(arglist__12582);
    var name = cljs.core.first(cljs.core.next(arglist__12582));
    var value = cljs.core.rest(cljs.core.next(arglist__12582));
    return set_attr_BANG___delegate(content, name, value)
  };
  set_attr_BANG_.cljs$lang$arity$variadic = set_attr_BANG___delegate;
  return set_attr_BANG_
}();
domina.remove_attr_BANG_ = function remove_attr_BANG_(content, name) {
  var G__12589__12590 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12589__12590) {
    var n__12591 = cljs.core.first.call(null, G__12589__12590);
    var G__12589__12592 = G__12589__12590;
    while(true) {
      n__12591.removeAttribute(cljs.core.name.call(null, name));
      var temp__3974__auto____12593 = cljs.core.next.call(null, G__12589__12592);
      if(temp__3974__auto____12593) {
        var G__12589__12594 = temp__3974__auto____12593;
        var G__12595 = cljs.core.first.call(null, G__12589__12594);
        var G__12596 = G__12589__12594;
        n__12591 = G__12595;
        G__12589__12592 = G__12596;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.parse_style_attributes = function parse_style_attributes(style) {
  return cljs.core.reduce.call(null, function(acc, pair) {
    var vec__12602__12603 = pair.split(/\s*:\s*/);
    var k__12604 = cljs.core.nth.call(null, vec__12602__12603, 0, null);
    var v__12605 = cljs.core.nth.call(null, vec__12602__12603, 1, null);
    if(cljs.core.truth_(function() {
      var and__3822__auto____12606 = k__12604;
      if(cljs.core.truth_(and__3822__auto____12606)) {
        return v__12605
      }else {
        return and__3822__auto____12606
      }
    }())) {
      return cljs.core.assoc.call(null, acc, cljs.core.keyword.call(null, k__12604.toLowerCase()), v__12605)
    }else {
      return acc
    }
  }, cljs.core.ObjMap.EMPTY, style.split(/\s*;\s*/))
};
domina.styles = function styles(content) {
  var style__12609 = domina.attr.call(null, content, "style");
  if(cljs.core.string_QMARK_.call(null, style__12609)) {
    return domina.parse_style_attributes.call(null, style__12609)
  }else {
    if(cljs.core.truth_(style__12609.cssText)) {
      return domina.parse_style_attributes.call(null, style__12609.cssText)
    }else {
      return null
    }
  }
};
domina.attrs = function attrs(content) {
  var node__12615 = domina.single_node.call(null, content);
  var attrs__12616 = node__12615.attributes;
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, function(p1__12607_SHARP_) {
    var attr__12617 = attrs__12616.item(p1__12607_SHARP_);
    var value__12618 = attr__12617.nodeValue;
    if(function() {
      var and__3822__auto____12619 = cljs.core.not_EQ_.call(null, null, value__12618);
      if(and__3822__auto____12619) {
        return cljs.core.not_EQ_.call(null, "", value__12618)
      }else {
        return and__3822__auto____12619
      }
    }()) {
      return cljs.core.PersistentArrayMap.fromArrays([cljs.core.keyword.call(null, attr__12617.nodeName.toLowerCase())], [attr__12617.nodeValue])
    }else {
      return null
    }
  }, cljs.core.range.call(null, attrs__12616.length))))
};
domina.set_styles_BANG_ = function set_styles_BANG_(content, styles) {
  var G__12639__12640 = cljs.core.seq.call(null, styles);
  if(G__12639__12640) {
    var G__12642__12644 = cljs.core.first.call(null, G__12639__12640);
    var vec__12643__12645 = G__12642__12644;
    var name__12646 = cljs.core.nth.call(null, vec__12643__12645, 0, null);
    var value__12647 = cljs.core.nth.call(null, vec__12643__12645, 1, null);
    var G__12639__12648 = G__12639__12640;
    var G__12642__12649 = G__12642__12644;
    var G__12639__12650 = G__12639__12648;
    while(true) {
      var vec__12651__12652 = G__12642__12649;
      var name__12653 = cljs.core.nth.call(null, vec__12651__12652, 0, null);
      var value__12654 = cljs.core.nth.call(null, vec__12651__12652, 1, null);
      var G__12639__12655 = G__12639__12650;
      domina.set_style_BANG_.call(null, content, name__12653, value__12654);
      var temp__3974__auto____12656 = cljs.core.next.call(null, G__12639__12655);
      if(temp__3974__auto____12656) {
        var G__12639__12657 = temp__3974__auto____12656;
        var G__12658 = cljs.core.first.call(null, G__12639__12657);
        var G__12659 = G__12639__12657;
        G__12642__12649 = G__12658;
        G__12639__12650 = G__12659;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.set_attrs_BANG_ = function set_attrs_BANG_(content, attrs) {
  var G__12679__12680 = cljs.core.seq.call(null, attrs);
  if(G__12679__12680) {
    var G__12682__12684 = cljs.core.first.call(null, G__12679__12680);
    var vec__12683__12685 = G__12682__12684;
    var name__12686 = cljs.core.nth.call(null, vec__12683__12685, 0, null);
    var value__12687 = cljs.core.nth.call(null, vec__12683__12685, 1, null);
    var G__12679__12688 = G__12679__12680;
    var G__12682__12689 = G__12682__12684;
    var G__12679__12690 = G__12679__12688;
    while(true) {
      var vec__12691__12692 = G__12682__12689;
      var name__12693 = cljs.core.nth.call(null, vec__12691__12692, 0, null);
      var value__12694 = cljs.core.nth.call(null, vec__12691__12692, 1, null);
      var G__12679__12695 = G__12679__12690;
      domina.set_attr_BANG_.call(null, content, name__12693, value__12694);
      var temp__3974__auto____12696 = cljs.core.next.call(null, G__12679__12695);
      if(temp__3974__auto____12696) {
        var G__12679__12697 = temp__3974__auto____12696;
        var G__12698 = cljs.core.first.call(null, G__12679__12697);
        var G__12699 = G__12679__12697;
        G__12682__12689 = G__12698;
        G__12679__12690 = G__12699;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.has_class_QMARK_ = function has_class_QMARK_(content, class$) {
  return goog.dom.classes.has(domina.single_node.call(null, content), class$)
};
domina.add_class_BANG_ = function add_class_BANG_(content, class$) {
  var G__12706__12707 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12706__12707) {
    var node__12708 = cljs.core.first.call(null, G__12706__12707);
    var G__12706__12709 = G__12706__12707;
    while(true) {
      goog.dom.classes.add(node__12708, class$);
      var temp__3974__auto____12710 = cljs.core.next.call(null, G__12706__12709);
      if(temp__3974__auto____12710) {
        var G__12706__12711 = temp__3974__auto____12710;
        var G__12712 = cljs.core.first.call(null, G__12706__12711);
        var G__12713 = G__12706__12711;
        node__12708 = G__12712;
        G__12706__12709 = G__12713;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.remove_class_BANG_ = function remove_class_BANG_(content, class$) {
  var G__12720__12721 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12720__12721) {
    var node__12722 = cljs.core.first.call(null, G__12720__12721);
    var G__12720__12723 = G__12720__12721;
    while(true) {
      goog.dom.classes.remove(node__12722, class$);
      var temp__3974__auto____12724 = cljs.core.next.call(null, G__12720__12723);
      if(temp__3974__auto____12724) {
        var G__12720__12725 = temp__3974__auto____12724;
        var G__12726 = cljs.core.first.call(null, G__12720__12725);
        var G__12727 = G__12720__12725;
        node__12722 = G__12726;
        G__12720__12723 = G__12727;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.classes = function classes(content) {
  return cljs.core.seq.call(null, goog.dom.classes.get(domina.single_node.call(null, content)))
};
domina.set_classes_BANG_ = function set_classes_BANG_(content, classes) {
  var classes__12735 = cljs.core.coll_QMARK_.call(null, classes) ? clojure.string.join.call(null, " ", classes) : classes;
  var G__12736__12737 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12736__12737) {
    var node__12738 = cljs.core.first.call(null, G__12736__12737);
    var G__12736__12739 = G__12736__12737;
    while(true) {
      goog.dom.classes.set(node__12738, classes__12735);
      var temp__3974__auto____12740 = cljs.core.next.call(null, G__12736__12739);
      if(temp__3974__auto____12740) {
        var G__12736__12741 = temp__3974__auto____12740;
        var G__12742 = cljs.core.first.call(null, G__12736__12741);
        var G__12743 = G__12736__12741;
        node__12738 = G__12742;
        G__12736__12739 = G__12743;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.text = function text(content) {
  return goog.string.trim(goog.dom.getTextContent(domina.single_node.call(null, content)))
};
domina.set_text_BANG_ = function set_text_BANG_(content, value) {
  var G__12750__12751 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12750__12751) {
    var node__12752 = cljs.core.first.call(null, G__12750__12751);
    var G__12750__12753 = G__12750__12751;
    while(true) {
      goog.dom.setTextContent(node__12752, value);
      var temp__3974__auto____12754 = cljs.core.next.call(null, G__12750__12753);
      if(temp__3974__auto____12754) {
        var G__12750__12755 = temp__3974__auto____12754;
        var G__12756 = cljs.core.first.call(null, G__12750__12755);
        var G__12757 = G__12750__12755;
        node__12752 = G__12756;
        G__12750__12753 = G__12757;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.value = function value(content) {
  return goog.dom.forms.getValue(domina.single_node.call(null, content))
};
domina.set_value_BANG_ = function set_value_BANG_(content, value) {
  var G__12764__12765 = cljs.core.seq.call(null, domina.nodes.call(null, content));
  if(G__12764__12765) {
    var node__12766 = cljs.core.first.call(null, G__12764__12765);
    var G__12764__12767 = G__12764__12765;
    while(true) {
      goog.dom.forms.setValue(node__12766, value);
      var temp__3974__auto____12768 = cljs.core.next.call(null, G__12764__12767);
      if(temp__3974__auto____12768) {
        var G__12764__12769 = temp__3974__auto____12768;
        var G__12770 = cljs.core.first.call(null, G__12764__12769);
        var G__12771 = G__12764__12769;
        node__12766 = G__12770;
        G__12764__12767 = G__12771;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return content
};
domina.html = function html(content) {
  return domina.single_node.call(null, content).innerHTML
};
domina.replace_children_BANG_ = function replace_children_BANG_(content, inner_content) {
  return domina.append_BANG_.call(null, domina.destroy_children_BANG_.call(null, content), inner_content)
};
domina.set_inner_html_BANG_ = function set_inner_html_BANG_(content, html_string) {
  var allows_inner_html_QMARK___12788 = cljs.core.not.call(null, cljs.core.re_find.call(null, domina.re_no_inner_html, html_string));
  var leading_whitespace_QMARK___12789 = cljs.core.re_find.call(null, domina.re_leading_whitespace, html_string);
  var tag_name__12790 = [cljs.core.str(cljs.core.second.call(null, cljs.core.re_find.call(null, domina.re_tag_name, html_string)))].join("").toLowerCase();
  var special_tag_QMARK___12791 = cljs.core.contains_QMARK_.call(null, domina.wrap_map, tag_name__12790);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12792 = allows_inner_html_QMARK___12788;
    if(and__3822__auto____12792) {
      var and__3822__auto____12794 = function() {
        var or__3824__auto____12793 = domina.support.leading_whitespace_QMARK_;
        if(cljs.core.truth_(or__3824__auto____12793)) {
          return or__3824__auto____12793
        }else {
          return cljs.core.not.call(null, leading_whitespace_QMARK___12789)
        }
      }();
      if(cljs.core.truth_(and__3822__auto____12794)) {
        return!special_tag_QMARK___12791
      }else {
        return and__3822__auto____12794
      }
    }else {
      return and__3822__auto____12792
    }
  }())) {
    var value__12795 = clojure.string.replace.call(null, html_string, domina.re_xhtml_tag, "<$1></$2>");
    try {
      var G__12798__12799 = cljs.core.seq.call(null, domina.nodes.call(null, content));
      if(G__12798__12799) {
        var node__12800 = cljs.core.first.call(null, G__12798__12799);
        var G__12798__12801 = G__12798__12799;
        while(true) {
          goog.events.removeAll(node__12800);
          node__12800.innerHTML = value__12795;
          var temp__3974__auto____12802 = cljs.core.next.call(null, G__12798__12801);
          if(temp__3974__auto____12802) {
            var G__12798__12803 = temp__3974__auto____12802;
            var G__12804 = cljs.core.first.call(null, G__12798__12803);
            var G__12805 = G__12798__12803;
            node__12800 = G__12804;
            G__12798__12801 = G__12805;
            continue
          }else {
          }
          break
        }
      }else {
      }
    }catch(e12796) {
      if(cljs.core.instance_QMARK_.call(null, domina.Exception, e12796)) {
        var e__12797 = e12796;
        domina.replace_children_BANG_.call(null, content, value__12795)
      }else {
        if("\ufdd0'else") {
          throw e12796;
        }else {
        }
      }
    }
  }else {
    domina.replace_children_BANG_.call(null, content, html_string)
  }
  return content
};
domina.set_html_BANG_ = function set_html_BANG_(content, inner_content) {
  if(cljs.core.string_QMARK_.call(null, inner_content)) {
    return domina.set_inner_html_BANG_.call(null, content, inner_content)
  }else {
    return domina.replace_children_BANG_.call(null, content, inner_content)
  }
};
domina.get_data = function() {
  var get_data = null;
  var get_data__2 = function(node, key) {
    return get_data.call(null, node, key, false)
  };
  var get_data__3 = function(node, key, bubble) {
    var m__12811 = domina.single_node.call(null, node).__domina_data;
    var value__12812 = cljs.core.truth_(m__12811) ? cljs.core._lookup.call(null, m__12811, key, null) : null;
    if(cljs.core.truth_(function() {
      var and__3822__auto____12813 = bubble;
      if(cljs.core.truth_(and__3822__auto____12813)) {
        return value__12812 == null
      }else {
        return and__3822__auto____12813
      }
    }())) {
      var temp__3974__auto____12814 = domina.single_node.call(null, node).parentNode;
      if(cljs.core.truth_(temp__3974__auto____12814)) {
        var parent__12815 = temp__3974__auto____12814;
        return get_data.call(null, parent__12815, key, true)
      }else {
        return null
      }
    }else {
      return value__12812
    }
  };
  get_data = function(node, key, bubble) {
    switch(arguments.length) {
      case 2:
        return get_data__2.call(this, node, key);
      case 3:
        return get_data__3.call(this, node, key, bubble)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_data.cljs$lang$arity$2 = get_data__2;
  get_data.cljs$lang$arity$3 = get_data__3;
  return get_data
}();
domina.set_data_BANG_ = function set_data_BANG_(node, key, value) {
  var m__12821 = function() {
    var or__3824__auto____12820 = domina.single_node.call(null, node).__domina_data;
    if(cljs.core.truth_(or__3824__auto____12820)) {
      return or__3824__auto____12820
    }else {
      return cljs.core.ObjMap.EMPTY
    }
  }();
  return domina.single_node.call(null, node).__domina_data = cljs.core.assoc.call(null, m__12821, key, value)
};
domina.apply_with_cloning = function apply_with_cloning(f, parent_content, child_content) {
  var parents__12833 = domina.nodes.call(null, parent_content);
  var children__12834 = domina.nodes.call(null, child_content);
  var first_child__12842 = function() {
    var frag__12835 = document.createDocumentFragment();
    var G__12836__12837 = cljs.core.seq.call(null, children__12834);
    if(G__12836__12837) {
      var child__12838 = cljs.core.first.call(null, G__12836__12837);
      var G__12836__12839 = G__12836__12837;
      while(true) {
        frag__12835.appendChild(child__12838);
        var temp__3974__auto____12840 = cljs.core.next.call(null, G__12836__12839);
        if(temp__3974__auto____12840) {
          var G__12836__12841 = temp__3974__auto____12840;
          var G__12844 = cljs.core.first.call(null, G__12836__12841);
          var G__12845 = G__12836__12841;
          child__12838 = G__12844;
          G__12836__12839 = G__12845;
          continue
        }else {
        }
        break
      }
    }else {
    }
    return frag__12835
  }();
  var other_children__12843 = cljs.core.doall.call(null, cljs.core.repeatedly.call(null, cljs.core.count.call(null, parents__12833) - 1, function() {
    return first_child__12842.cloneNode(true)
  }));
  if(cljs.core.seq.call(null, parents__12833)) {
    f.call(null, cljs.core.first.call(null, parents__12833), first_child__12842);
    return cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__12816_SHARP_, p2__12817_SHARP_) {
      return f.call(null, p1__12816_SHARP_, p2__12817_SHARP_)
    }, cljs.core.rest.call(null, parents__12833), other_children__12843))
  }else {
    return null
  }
};
domina.lazy_nl_via_item = function() {
  var lazy_nl_via_item = null;
  var lazy_nl_via_item__1 = function(nl) {
    return lazy_nl_via_item.call(null, nl, 0)
  };
  var lazy_nl_via_item__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl.item(n), lazy_nl_via_item.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_item = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_item__1.call(this, nl);
      case 2:
        return lazy_nl_via_item__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_item.cljs$lang$arity$1 = lazy_nl_via_item__1;
  lazy_nl_via_item.cljs$lang$arity$2 = lazy_nl_via_item__2;
  return lazy_nl_via_item
}();
domina.lazy_nl_via_array_ref = function() {
  var lazy_nl_via_array_ref = null;
  var lazy_nl_via_array_ref__1 = function(nl) {
    return lazy_nl_via_array_ref.call(null, nl, 0)
  };
  var lazy_nl_via_array_ref__2 = function(nl, n) {
    if(n < nl.length) {
      return new cljs.core.LazySeq(null, false, function() {
        return cljs.core.cons.call(null, nl[n], lazy_nl_via_array_ref.call(null, nl, n + 1))
      }, null)
    }else {
      return null
    }
  };
  lazy_nl_via_array_ref = function(nl, n) {
    switch(arguments.length) {
      case 1:
        return lazy_nl_via_array_ref__1.call(this, nl);
      case 2:
        return lazy_nl_via_array_ref__2.call(this, nl, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  lazy_nl_via_array_ref.cljs$lang$arity$1 = lazy_nl_via_array_ref__1;
  lazy_nl_via_array_ref.cljs$lang$arity$2 = lazy_nl_via_array_ref__2;
  return lazy_nl_via_array_ref
}();
domina.lazy_nodelist = function lazy_nodelist(nl) {
  if(cljs.core.truth_(nl.item)) {
    return domina.lazy_nl_via_item.call(null, nl)
  }else {
    return domina.lazy_nl_via_array_ref.call(null, nl)
  }
};
domina.array_like_QMARK_ = function array_like_QMARK_(obj) {
  var and__3822__auto____12847 = obj;
  if(cljs.core.truth_(and__3822__auto____12847)) {
    return obj.length
  }else {
    return and__3822__auto____12847
  }
};
domina.normalize_seq = function normalize_seq(list_thing) {
  if(list_thing == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12851__12852 = list_thing;
      if(G__12851__12852) {
        if(function() {
          var or__3824__auto____12853 = G__12851__12852.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12853) {
            return or__3824__auto____12853
          }else {
            return G__12851__12852.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12851__12852.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12851__12852)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12851__12852)
      }
    }()) {
      return cljs.core.seq.call(null, list_thing)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, list_thing))) {
        return domina.lazy_nodelist.call(null, list_thing)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([list_thing], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["_"] = true;
domina.nodes["_"] = function(content) {
  if(content == null) {
    return cljs.core.List.EMPTY
  }else {
    if(function() {
      var G__12854__12855 = content;
      if(G__12854__12855) {
        if(function() {
          var or__3824__auto____12856 = G__12854__12855.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12856) {
            return or__3824__auto____12856
          }else {
            return G__12854__12855.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12854__12855.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12854__12855)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12854__12855)
      }
    }()) {
      return cljs.core.seq.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return domina.lazy_nodelist.call(null, content)
      }else {
        if("\ufdd0'default") {
          return cljs.core.seq.call(null, cljs.core.PersistentVector.fromArray([content], true))
        }else {
          return null
        }
      }
    }
  }
};
domina.single_node["_"] = function(content) {
  if(content == null) {
    return null
  }else {
    if(function() {
      var G__12857__12858 = content;
      if(G__12857__12858) {
        if(function() {
          var or__3824__auto____12859 = G__12857__12858.cljs$lang$protocol_mask$partition0$ & 8388608;
          if(or__3824__auto____12859) {
            return or__3824__auto____12859
          }else {
            return G__12857__12858.cljs$core$ISeqable$
          }
        }()) {
          return true
        }else {
          if(!G__12857__12858.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12857__12858)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__12857__12858)
      }
    }()) {
      return cljs.core.first.call(null, content)
    }else {
      if(cljs.core.truth_(domina.array_like_QMARK_.call(null, content))) {
        return content.item(0)
      }else {
        if("\ufdd0'default") {
          return content
        }else {
          return null
        }
      }
    }
  }
};
domina.DomContent["string"] = true;
domina.nodes["string"] = function(s) {
  return cljs.core.doall.call(null, domina.nodes.call(null, domina.string_to_dom.call(null, s)))
};
domina.single_node["string"] = function(s) {
  return domina.single_node.call(null, domina.string_to_dom.call(null, s))
};
if(cljs.core.truth_(typeof NodeList != "undefined")) {
  NodeList.prototype.cljs$core$ISeqable$ = true;
  NodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  NodeList.prototype.cljs$core$IIndexed$ = true;
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  NodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  NodeList.prototype.cljs$core$ICounted$ = true;
  NodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof StaticNodeList != "undefined")) {
  StaticNodeList.prototype.cljs$core$ISeqable$ = true;
  StaticNodeList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(nodelist) {
    return domina.lazy_nodelist.call(null, nodelist)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$ = true;
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$2 = function(nodelist, n) {
    return nodelist.item(n)
  };
  StaticNodeList.prototype.cljs$core$IIndexed$_nth$arity$3 = function(nodelist, n, not_found) {
    if(nodelist.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, nodelist, n)
    }
  };
  StaticNodeList.prototype.cljs$core$ICounted$ = true;
  StaticNodeList.prototype.cljs$core$ICounted$_count$arity$1 = function(nodelist) {
    return nodelist.length
  }
}else {
}
if(cljs.core.truth_(typeof HTMLCollection != "undefined")) {
  HTMLCollection.prototype.cljs$core$ISeqable$ = true;
  HTMLCollection.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
    return domina.lazy_nodelist.call(null, coll)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$ = true;
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
    return coll.item(n)
  };
  HTMLCollection.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
    if(coll.length <= n) {
      return not_found
    }else {
      return cljs.core.nth.call(null, coll, n)
    }
  };
  HTMLCollection.prototype.cljs$core$ICounted$ = true;
  HTMLCollection.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
    return coll.length
  }
}else {
}
;goog.provide("domina.xpath");
goog.require("cljs.core");
goog.require("goog.dom");
goog.require("domina");
domina.xpath.select_node_STAR_ = function select_node_STAR_(path, node, technique_1, technique_2) {
  var doc__12425 = goog.dom.getOwnerDocument(node);
  if(cljs.core.truth_(function() {
    var and__3822__auto____12426 = node.selectSingleNode;
    if(cljs.core.truth_(and__3822__auto____12426)) {
      return doc__12425.setProperty
    }else {
      return and__3822__auto____12426
    }
  }())) {
    doc__12425.setProperty("SelectionLanguage", "XPath");
    return technique_1.call(null, node, path)
  }else {
    if(cljs.core.truth_(doc__12425.evaluate)) {
      return technique_2.call(null, null, doc__12425, node, path)
    }else {
      if("\ufdd0'else") {
        throw new Error("Could not find XPath support in this browser.");
      }else {
        return null
      }
    }
  }
};
domina.xpath.select_node = function select_node(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node, expr) {
    return node.selectSingleNode(expr)
  }, function(resolver, doc, node, expr) {
    var result__12428 = doc.evaluate(expr, node, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result__12428.singleNodeValue
  })
};
domina.xpath.select_nodes = function select_nodes(expr, node) {
  return domina.xpath.select_node_STAR_.call(null, expr, node, function(node, expr) {
    return node.selectNodes(expr)
  }, function(resolver, doc, node, expr) {
    var result__12433 = doc.evaluate(expr, node, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    var num_results__12434 = result__12433.snapshotLength;
    var i__12435 = 0;
    var acc__12436 = null;
    while(true) {
      if(i__12435 < num_results__12434) {
        var G__12437 = i__12435 + 1;
        var G__12438 = cljs.core.cons.call(null, result__12433.snapshotItem(i__12435), acc__12436);
        i__12435 = G__12437;
        acc__12436 = G__12438;
        continue
      }else {
        return acc__12436
      }
      break
    }
  })
};
domina.xpath.root_element = function root_element() {
  return goog.dom.getElementsByTagNameAndClass("html")[0]
};
domina.xpath.xpath = function() {
  var xpath = null;
  var xpath__1 = function(expr) {
    return xpath.call(null, domina.xpath.root_element.call(null), expr)
  };
  var xpath__2 = function(base, expr) {
    if(void 0 === domina.xpath.t12446) {
      domina.xpath.t12446 = function(expr, base, xpath, meta12447) {
        this.expr = expr;
        this.base = base;
        this.xpath = xpath;
        this.meta12447 = meta12447;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      domina.xpath.t12446.cljs$lang$type = true;
      domina.xpath.t12446.cljs$lang$ctorPrSeq = function(this__2359__auto__) {
        return cljs.core.list.call(null, "domina.xpath/t12446")
      };
      domina.xpath.t12446.prototype.domina$DomContent$ = true;
      domina.xpath.t12446.prototype.domina$DomContent$nodes$arity$1 = function(_) {
        var this__12449 = this;
        return cljs.core.mapcat.call(null, cljs.core.partial.call(null, domina.xpath.select_nodes, this__12449.expr), domina.nodes.call(null, this__12449.base))
      };
      domina.xpath.t12446.prototype.domina$DomContent$single_node$arity$1 = function(_) {
        var this__12450 = this;
        return cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map.call(null, cljs.core.partial.call(null, domina.xpath.select_node, this__12450.expr), domina.nodes.call(null, this__12450.base))))
      };
      domina.xpath.t12446.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12448) {
        var this__12451 = this;
        return this__12451.meta12447
      };
      domina.xpath.t12446.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12448, meta12447) {
        var this__12452 = this;
        return new domina.xpath.t12446(this__12452.expr, this__12452.base, this__12452.xpath, meta12447)
      };
      domina.xpath.t12446
    }else {
    }
    return new domina.xpath.t12446(expr, base, xpath, null)
  };
  xpath = function(base, expr) {
    switch(arguments.length) {
      case 1:
        return xpath__1.call(this, base);
      case 2:
        return xpath__2.call(this, base, expr)
    }
    throw"Invalid arity: " + arguments.length;
  };
  xpath.cljs$lang$arity$1 = xpath__1;
  xpath.cljs$lang$arity$2 = xpath__2;
  return xpath
}();
goog.provide("cljs_intro.search");
goog.require("cljs.core");
goog.require("cljs_intro.pubsub");
goog.require("cljs_intro.views");
goog.require("shoreleave.remotes.request");
goog.require("goog.net.XhrIo");
goog.require("clojure.browser.event");
goog.require("domina.xpath");
goog.require("domina");
cljs_intro.search.search_button = domina.by_id.call(null, "search-btn");
cljs_intro.search.lastname_field = domina.by_id.call(null, "lname");
cljs_intro.search.history_button = domina.by_id.call(null, "history-btn");
domina.set_styles_BANG_.call(null, cljs_intro.search.history_button, cljs.core.ObjMap.fromObject(["\ufdd0'display"], {"\ufdd0'display":"none"}));
cljs_intro.search.update_results_div = function update_results_div(data) {
  var res_div__242095 = domina.xpath.xpath.call(null, "//div[@id='results']");
  domina.destroy_children_BANG_.call(null, res_div__242095);
  return domina.append_BANG_.call(null, res_div__242095, data)
};
cljs_intro.search.display_results = function display_results(data) {
  return cljs_intro.search.update_results_div.call(null, cljs_intro.views.show_stats.call(null, data))
};
cljs_intro.search.sl_display_results = function sl_display_results(p__242096) {
  var map__242102__242103 = p__242096;
  var map__242102__242104 = cljs.core.seq_QMARK_.call(null, map__242102__242103) ? cljs.core.apply.call(null, cljs.core.hash_map, map__242102__242103) : map__242102__242103;
  var event__242105 = cljs.core._lookup.call(null, map__242102__242104, "\ufdd0'event", null);
  var body__242106 = cljs.core._lookup.call(null, map__242102__242104, "\ufdd0'body", null);
  return cljs_intro.search.update_results_div.call(null, cljs_intro.views.show_stats.call(null, cljs.core.js__GT_clj.call(null, body__242106, "\ufdd0'keywordize-keys", true)))
};
cljs_intro.search.find_player = function find_player(lastname) {
  return shoreleave.remotes.request.request.call(null, [cljs.core.str("/player/"), cljs.core.str(lastname)].join(""), "\ufdd0'on-success", cljs_intro.search.sl_display_results, "\ufdd0'on-error", function() {
    return alert("an error!")
  }, "\ufdd0'use-json", true)
};
cljs_intro.search.search_state_change = function search_state_change(p__242107) {
  var map__242112__242113 = p__242107;
  var map__242112__242114 = cljs.core.seq_QMARK_.call(null, map__242112__242113) ? cljs.core.apply.call(null, cljs.core.hash_map, map__242112__242113) : map__242112__242113;
  var new__242115 = cljs.core._lookup.call(null, map__242112__242114, "\ufdd0'new", null);
  if(cljs.core.count.call(null, (new cljs.core.Keyword("\ufdd0'previous-searches")).call(null, new__242115)) > 0) {
    return domina.set_styles_BANG_.call(null, cljs_intro.search.history_button, cljs.core.ObjMap.fromObject(["\ufdd0'display"], {"\ufdd0'display":""}))
  }else {
    return null
  }
};
cljs_intro.search.view_history = function view_history(current_lname) {
  return cljs_intro.search.update_results_div.call(null, cljs_intro.views.show_history.call(null, cljs.core.conj.call(null, (new cljs.core.Keyword("\ufdd0'previous-searches")).call(null, cljs.core.deref.call(null, cljs_intro.pubsub.search_state)), current_lname)))
};
cljs_intro.pubsub.subscribe_to.call(null, "\ufdd0'search", cljs_intro.search.find_player);
cljs_intro.pubsub.subscribe_to.call(null, "\ufdd0'results", cljs_intro.search.display_results);
cljs_intro.pubsub.subscribe_to.call(null, cljs_intro.pubsub.search_state, cljs_intro.search.search_state_change);
cljs_intro.pubsub.subscribe_to.call(null, "\ufdd0'history", cljs_intro.search.view_history);
clojure.browser.event.listen.call(null, cljs_intro.search.search_button, "click", function() {
  return cljs_intro.pubsub.publish_search_string.call(null, domina.value.call(null, cljs_intro.search.lastname_field))
});
clojure.browser.event.listen.call(null, cljs_intro.search.history_button, "click", function() {
  return cljs_intro.pubsub.publish_view_history.call(null, domina.value.call(null, cljs_intro.search.lastname_field))
});
goog.provide("shoreleave.remotes.xhr");
goog.require("cljs.core");
goog.require("shoreleave.common");
goog.require("shoreleave.common");
goog.require("shoreleave.remotes.common");
goog.require("goog.events");
goog.require("goog.net.XhrIo");
shoreleave.remotes.xhr.xhr = function() {
  var xhr__delegate = function(route, opts) {
    var req__7559 = new goog.net.XhrIo;
    var vec__7557__7560 = shoreleave.remotes.common.parse_route.call(null, route);
    var method__7561 = cljs.core.nth.call(null, vec__7557__7560, 0, null);
    var uri__7562 = cljs.core.nth.call(null, vec__7557__7560, 1, null);
    var map__7558__7563 = cljs.core.apply.call(null, cljs.core.hash_map, opts);
    var map__7558__7564 = cljs.core.seq_QMARK_.call(null, map__7558__7563) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7558__7563) : map__7558__7563;
    var headers__7565 = cljs.core._lookup.call(null, map__7558__7564, "\ufdd0'headers", null);
    var content__7566 = cljs.core._lookup.call(null, map__7558__7564, "\ufdd0'content", null);
    var on_success__7567 = cljs.core._lookup.call(null, map__7558__7564, "\ufdd0'on-success", null);
    var content__7568 = shoreleave.remotes.common.csrf_protected.call(null, content__7566, method__7561);
    var data__7569 = shoreleave.remotes.common.__GT_data_str.call(null, content__7568);
    var callback__7570 = shoreleave.remotes.common.__GT_simple_callback.call(null, on_success__7567);
    if(cljs.core.truth_(callback__7570)) {
      goog.events.listen(req__7559, goog.net.EventType.COMPLETE, function() {
        return callback__7570.call(null, req__7559)
      })
    }else {
    }
    return req__7559.send(uri__7562, method__7561, data__7569, cljs.core.truth_(headers__7565) ? shoreleave.common.clj__GT_js.call(null, headers__7565) : null)
  };
  var xhr = function(route, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return xhr__delegate.call(this, route, opts)
  };
  xhr.cljs$lang$maxFixedArity = 1;
  xhr.cljs$lang$applyTo = function(arglist__7571) {
    var route = cljs.core.first(arglist__7571);
    var opts = cljs.core.rest(arglist__7571);
    return xhr__delegate(route, opts)
  };
  xhr.cljs$lang$arity$variadic = xhr__delegate;
  return xhr
}();
goog.provide("shoreleave.remotes.http_rpc");
goog.require("cljs.core");
goog.require("cljs.reader");
goog.require("shoreleave.remotes.xhr");
shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_ = "/_fetch";
shoreleave.remotes.http_rpc.remote_callback = function() {
  var remote_callback__delegate = function(remote, params, callback, extra_content) {
    return shoreleave.remotes.xhr.xhr.call(null, cljs.core.PersistentVector.fromArray(["\ufdd0'post", shoreleave.remotes.http_rpc._STAR_remote_uri_STAR_], true), "\ufdd0'content", cljs.core.merge.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'remote", "\ufdd0'params"], {"\ufdd0'remote":remote, "\ufdd0'params":cljs.core.pr_str.call(null, params)}), cljs.core.apply.call(null, cljs.core.hash_map, extra_content)), "\ufdd0'on-success", cljs.core.truth_(callback) ? function(data) {
      var data__7446 = cljs.core._EQ_.call(null, data, "") ? "nil" : data;
      return callback.call(null, cljs.reader.read_string.call(null, data__7446))
    } : null)
  };
  var remote_callback = function(remote, params, callback, var_args) {
    var extra_content = null;
    if(goog.isDef(var_args)) {
      extra_content = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return remote_callback__delegate.call(this, remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$maxFixedArity = 3;
  remote_callback.cljs$lang$applyTo = function(arglist__7447) {
    var remote = cljs.core.first(arglist__7447);
    var params = cljs.core.first(cljs.core.next(arglist__7447));
    var callback = cljs.core.first(cljs.core.next(cljs.core.next(arglist__7447)));
    var extra_content = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__7447)));
    return remote_callback__delegate(remote, params, callback, extra_content)
  };
  remote_callback.cljs$lang$arity$variadic = remote_callback__delegate;
  return remote_callback
}();
goog.provide("shoreleave.remote");
goog.require("cljs.core");
goog.require("shoreleave.remotes.jquery");
goog.require("shoreleave.remotes.http_rpc");
goog.require("shoreleave.remotes.jsonp");
goog.require("shoreleave.remotes.request");
shoreleave.remote.request = shoreleave.remotes.request.request;
shoreleave.remote.jsonp = shoreleave.remotes.jsonp.jsonp;
shoreleave.remote.remote_callback = shoreleave.remotes.http_rpc.remote_callback;
shoreleave.remote.jq_jsonp = function() {
  var jq_jsonp__delegate = function(uri, opts) {
    var map__7416__7417 = opts;
    var map__7416__7418 = cljs.core.seq_QMARK_.call(null, map__7416__7417) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7416__7417) : map__7416__7417;
    var callback_name__7419 = cljs.core._lookup.call(null, map__7416__7418, "\ufdd0'callback-name", null);
    var content__7420 = cljs.core._lookup.call(null, map__7416__7418, "\ufdd0'content", null);
    var on_success__7421 = cljs.core._lookup.call(null, map__7416__7418, "\ufdd0'on-success", null);
    return shoreleave.remotes.jquery.ajax.call(null, uri, "\ufdd0'data", content__7420, "\ufdd0'success", function(p1__7409_SHARP_) {
      return on_success__7421.call(null, cljs.core.js__GT_clj.call(null, p1__7409_SHARP_, "\ufdd0'keywordize-keys", true))
    }, "\ufdd0'dataType", "jsonp", "\ufdd0'jsonp", callback_name__7419)
  };
  var jq_jsonp = function(uri, var_args) {
    var opts = null;
    if(goog.isDef(var_args)) {
      opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return jq_jsonp__delegate.call(this, uri, opts)
  };
  jq_jsonp.cljs$lang$maxFixedArity = 1;
  jq_jsonp.cljs$lang$applyTo = function(arglist__7422) {
    var uri = cljs.core.first(arglist__7422);
    var opts = cljs.core.rest(arglist__7422);
    return jq_jsonp__delegate(uri, opts)
  };
  jq_jsonp.cljs$lang$arity$variadic = jq_jsonp__delegate;
  return jq_jsonp
}();
